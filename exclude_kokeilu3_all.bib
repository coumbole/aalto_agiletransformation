% This file was created with JabRef 2.9.
% Encoding: UTF8

@ARTICLE{5420791,
  author = {Abrahamsson, P. and Babar, M.A. and Kruchten, P.},
  title = {Agility and Architecture: Can They Coexist?},
  journal = {Software, IEEE},
  year = {2010},
  volume = {27},
  pages = {16 -22},
  number = {2},
  month = {march-april },
  __markedentry = {[kimi:1]},
  abstract = {Agile development has significantly impacted industrial software development
	practices. However, despite its wide popularity, there's an increasing
	perplexity about software architecture's role and importance in agile
	approaches. Advocates of architecture's vital role in achieving quality
	goals for large software-intensive systems doubt the scalability
	of any development approach that doesn't pay sufficient attention
	to architecture. This article talks about software architecture being
	relevant to the basis of aspects such as communication among team
	members, inputs to subsequent design decisions, documenting design
	assumptions, and evaluating design alternatives. In a large software
	organization, implementing agile approaches isn't a straightforward
	adoption problem. Most likely, it will take several years to shorten
	the feedback cycles to benefit from the adaptability and earlier
	value-creation opportunities. Failure is a natural part of process
	improvement.},
  db = {ieeexplore},
  doi = {10.1109/MS.2010.36},
  filtercasper = {exclude},
  filtermaria = {exclude},
  issn = {0740-7459},
  keywords = {agile development;design assumptions;design decisions;industrial software
	development practices;software architecture;software intensive systems;software
	architecture;software development management;},
  reviewer = {kimi, casper}
}

@INPROCEEDINGS{ISI:000229999500014,
  author = {Abrahamsson, P and Hanhineva, A and Jaalinoja, J},
  title = {Improving business agility through technical solutions: A case study
	on test-driven development in mobile software development},
  booktitle = {BUSINESS AGILITY AND INFORMATION TECHNOLOGY DIFFUSION},
  year = {2005},
  editor = {Baskerville, RL and Mathiassen, L and PriesHeje, J and DeGross, JI},
  volume = {180},
  series = {International Federation for Information Processing},
  pages = {227-243},
  organization = {IFIP TC8 WG8 6; Georgia State Univ; Robinson Coll Business; Microsoft;
	Intel},
  note = {IFIP Working Conference on Business Agility and Information Technology
	Diffusion, Atlanta, GA, MAY 08-11, 2005},
  __markedentry = {[kimi:3]},
  abstract = {This paper maintains that efficient business agility requires actions
	from all levels of the organization in order to strive for success
	in a turbulent business environment. Agility and agile software development
	solutions are suggested as yielding benefit in a volatile environment,
	which is characterized by continuously changing requirements and
	unstable development technologies. Test-driven development (TDD)
	is an agile practice where the tests are written before the actual
	program code. TDD is a technical enabler for increasing agility at
	the developer and product project levels. Existing empirical literature
	on TDD has demonstrated increased productivity and more robust code,
	among other important benefits. This paper reports results of a case
	study where a mobile application was developed for global markets,
	using the TDD approach. Our first results show that the adoption
	of TDD is difficult and the potential agility benefits may not be
	readily available. The lessons learned from the case study are presented.},
  db = {wok},
  filtercasper = {include},
  filtermaria = {exclude},
  isbn = {0-387-25589-3},
  issn = {1571-5736},
  owner = {kimi},
  reviewer = {casper, maria},
  timestamp = {2012.12.19},
  unique-id = {ISI:000229999500014}
}

@INPROCEEDINGS{ISI:000247910000033,
  author = {Abrahamsson, Pekka and Still, Jari},
  title = {Agile software development: Theoretical and practical outlook},
  booktitle = {Product-Focused Software Process Improvement, Proceedings},
  year = {2007},
  editor = {Munch, J and Abrahamsson, P},
  volume = {4589},
  series = {LECTURE NOTES IN COMPUTER SCIENCE},
  pages = {410-411},
  organization = {Univ Latvia; Fraunhofer Int Expt Software Engn; VTT; Univ Oulu},
  note = {8th International Conference on Product-Focused Software Process
	Improvement, Riga, LATVIA, JUL 02-04, 2007},
  __markedentry = {[kimi:3]},
  abstract = {Agile Software development has become to be one of the most prominent
	approaches in the field of software engineering. The amount of empirical
	evidence is quickly building up and it is known that already one
	out of seven software companies use agile processes. Many of the
	major corporations have announced to pursue for agile solutions with
	the aim of improving dramatically the lead-times, costs and quality
	aspects. Little is still known about the theoretical underpinnings
	of agile approaches. This tutorial serves for two purposes. First
	it demonstrates how agile solutions are theoretically founded and
	then in very pragmatic terms shows a longitudinal four-year case
	study how F-Secure, an antivirus company, from Finland transformed
	from iterative development to agile development framework. The case
	study also demonstrates which solutions worked and which ones proved
	to offer serious obstacles in the way. Finally, the business impact
	of the agile development is outlined based on empirical data. The
	tutorial will consist of interactive lectures, exercises and group
	work. The tutorial is targeted to software engineers and managers
	as well as academics.},
  db = {wok},
  filtercasper = {exclude},
  filterkimi = {include},
  filtermaria = {exclude},
  isbn = {978-3-540-73459-8},
  issn = {0302-9743},
  owner = {kimi},
  reviewer = {kimi, casper},
  timestamp = {2012.12.19},
  unique-id = {ISI:000247910000033}
}

@ARTICLE{Adam2012237,
  author = {Adam, S. and Riegel, N. and Doerr, J. and Uenalan, O. and Kerkow,
	D.},
  title = {From business processes to software services and vice versa - An
	improved transition through service-oriented requirements engineering},
  journal = {Journal of software: Evolution and Process},
  year = {2012},
  volume = {24},
  pages = {237-258},
  number = {3},
  note = {cited By (since 1996) 0},
  __markedentry = {},
  abstract = {Business processes need to be agile and flexible to help organizations
	stay competitive. For this purpose, SOA promises the reuse of already
	existing information system functionality for enabling enterprises
	to change the business processes more quickly. However, many promises
	made by SOA authors have not found their way into practice, because
	methodological guidance that constructively assures a more successful
	SOA application is still missing. In this article, service-oriented
	requirements engineering is therefore introduced as a discipline
	aiming at a better and more systematic handling and alignment of
	SOA and Business Process Management. Our industrial experience in
	this regard is also described. Copyright © 2011 John Wiley & Sons,
	Ltd.},
  affiliation = {Fraunhofer IESE, Fraunhofer Platz 1, 67663 Kaiserslautern, Germany},
  author_keywords = {Processes; Service-oriented; Transition},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84863316439&partnerID=40&md5=08fd57ba8f5b62a583a48d9f1a61e1a9}
}

@ARTICLE{Adams2008333,
  author = {Adams, P.J.a and Capiluppi, A.b and de Groot, A.a },
  title = {Detecting agility of open source projects through developer engagement},
  journal = {IFIP International Federation for Information Processing},
  year = {2008},
  volume = {275},
  pages = {333-341},
  note = {cited By (since 1996) 1},
  __markedentry = {[kimi:1]},
  abstract = {The principles behind the agile development methods and common practise
	within the Open Source community are vastly different. In recent
	years there has been a rise of interest in these, in order to detect
	and inform on areas of compatible shared practises. This paper argues
	that it is possible to quantify the level of agility displayed by
	Open Source projects. An indicator of agility, the Mean Developer
	Engagement (MDE) metric is introduced and tested through the analysis
	of public project data. Projects sampled from two repositories (KDE
	and SourceForge) are studied and a hypothesis is formulated: projects
	from the two samples display a similar level of MDE. This paper provides
	two main contributions: first, the MDE metric is shown to vary significantly
	between the KDE and SourceForge projects. Second, by combining MDE
	with a project's lifespan, it is also shown that SourceForge projects
	have insufficient uptake of new developers resulting in more active,
	shorter, initial activity, and in a quicker ``burning out{''} of
	the projects. © 2008 International Federation for Information Processing.},
  affiliation = {Sirius Corporaion Ltd., Hamm Moor Lane, Weybridge KT15 2SF, United
	Kingdom; Centre for Research on Open Source Software, University
	of Lincoln, Lincoln LN5 7TS, United Kingdom},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-47849130105&partnerID=40&md5=1b3b87e2a36b4900f8cf459329a65ecb}
}

@ARTICLE{Adhikari200977,
  author = {Adhikari, M.H.a and Heeroma, J.H.b and di Bernardo, M.a and Krauskopf,
	B.a and Richardson, M.P.c and Walker, M.C.b and Terry, J.R.a },
  title = {Characterisation of cortical activity in response to deep brain stimulation
	of ventral-lateral nucleus: Modelling and experiment},
  journal = {Journal of Neuroscience Methods},
  year = {2009},
  volume = {183},
  pages = {77-85},
  number = {1},
  note = {cited By (since 1996) 4},
  __markedentry = {},
  abstract = {Motivated by its success as a therapeutic treatment in other neurological
	disorders, most notably Parkinson's disease, Deep Brain Stimulation
	(DBS) is currently being trialled in a number of patients with drug
	unresponsive epilepsies. However, the mechanisms by which DBS interferes
	with neuronal activity linked to the disorder are not well understood.
	Furthermore, there is a need to identify optimized values of parameters
	(for example in amplitude/frequency space) of the stimulation protocol
	with which one aims to achieve the desired outcome. In this paper
	we characterise the system response to stimulation, to gain an understanding
	of the role different brain regions play in generating the output
	observed in EEG. We perform a number of experiments in healthy rats,
	where the ventral-lateral thalamic nucleus is stimulated using a
	train of square-waves with different frequency and amplitudes. The
	response to stimulation in the motor cortex is recorded and the drive-response
	relationship over frequency/amplitude space is considered. Subsequently,
	we compare the experimental data with simulations of a mean-field
	model, finding good agreement between the output of the model and
	the experimental data - both in the time and frequency domains -
	when considering a transition to oscillatory activity in the cortex
	as the frequency of stimulation is increased. Overall, our study
	suggests that mean-field models can appropriately characterise the
	stimulus-response relationship of DBS in healthy animals. In this
	way, it constitutes a first step towards the goal of developing a
	closed-loop feedback control protocol for suppressing epileptic activity,
	by adaptively adjusting the stimulation protocol in response to EEG
	activity. © 2009 Elsevier B.V. All rights reserved.},
  affiliation = {Department of Engineering Mathematics, University of Bristol, Bristol,
	BS8 1TR, United Kingdom; Department of Clinical and Experimental
	Epilepsy, Institute of Neurology, University College London, London,
	WC1N 3BG, United Kingdom; Institute of Psychiatry, King's College
	London, London, SE5 8AF, United Kingdom},
  author_keywords = {Deep brain stimulation; Epilepsy; Frequency analysis; Mean-field model;
	Motor cortex; Ventral-lateral thalamic nucleus; Waterfall diagram},
  db = {scoups},
  document_type = {Article},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-69549097979&partnerID=40&md5=f3f929f68cd0857b863c5965b529ebd3}
}

@INPROCEEDINGS{1667567,
  author = {Adolph, S.},
  title = {What lessons can the agile community learn from a maverick fighter
	pilot?},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {6 pp. -99},
  month = {july},
  __markedentry = {},
  abstract = {For the agile software development community, agility is defined by
	the values expressed in the agile manifesto. But in concrete terms,
	what does it mean for a software project to be agile? US Air Force
	Colonel John Boyd defined agility as the ability to operate the observation-orientation-decision-action
	(OODA) loop faster than an adversary. Agility therefore depends on
	the tempo at which we can exploit the OODA loop, and it is culture,
	not methodologies or tools that determine our OODA loop speed. This
	definition of agility has implications for the software development
	community. This short paper introduces Colonel Boyd, the OODA loop,
	the factors which influence OODA loop speed and the possible research
	opportunities into software engineering culture we are considering},
  db = {ieeexplore},
  doi = {10.1109/AGILE.2006.63},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  keywords = {OODA loop;agile manifesto;agile software development community;observation-orientation-decision-action
	loop;software engineering culture;software project;project management;software
	development management;},
  reviewer = {maria, kimi}
}

@ARTICLE{Afsarmanesh2009209,
  author = {Afsarmanesh, H.a and Camarinha-Matos, L.M.b and Msanjila, S.S.a },
  title = {On management of 2nd generation Virtual Organizations Breeding Environments},
  journal = {Annual Reviews in Control},
  year = {2009},
  volume = {33},
  pages = {209-219},
  number = {2},
  note = {cited By (since 1996) 10},
  __markedentry = {},
  abstract = {Nowadays, in a wide variety of sectors from production-based to service-oriented,
	temporary collaboration among organizations in the so-called Virtual
	Organizations (VOs), is the trend adopted by most, and in particular
	by small and medium enterprises. Pre-existence of long-term associations/clusters
	of active and competitive organizations, the so-called Virtual Organizations
	Breeding Environments (VBEs), is shown to greatly enhance dynamic
	creation of VOs. A number of VBEs have been formed world-wide during
	the last decade, mostly among organizations located in a common region,
	with common business culture, and primarily focus on specific lines
	of activities. This paper however addresses the 2nd generation VBEs
	that are not bound to geographical regions or specific activities.
	These VBEs shall play an active role in the society/market as competitive
	entities, and need to effectively support agile configuration and
	establishment of dynamic VOs. Furthermore, the 2nd generation VBEs
	require enabling ICT infrastructure and tools, to facilitate their
	daily management activities as well as supporting the collaboration
	among their member organizations. The paper introduces a number of
	models, methodologies and tools designed and developed to support
	2nd generation VBEs. © 2009 Elsevier Ltd. All rights reserved.},
  affiliation = {University of Amsterdam, Science Park 107, 1098 XG Amsterdam, Netherlands;
	New University of Lisbon Quinta da Torre, 2829-516 Monte Caparica,
	Portugal},
  author_keywords = {Collaborative networks; Competency management; Negotiation; Ontology
	engineering; Reference framework; Trust; Value system; Virtual organization;
	Virtual Organizations Breeding Environment},
  db = {scoups},
  document_type = {Article},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-70449100737&partnerID=40&md5=b5e7b167653c2965d0e65cd8aea2a413}
}

@INPROCEEDINGS{Agarwal201151,
  author = {Agarwal, P.},
  title = {Continuous SCRUM: Agile management of SAAS products},
  year = {2011},
  pages = {51-60},
  note = {cited By (since 1996) 1},
  __markedentry = {[kimi:1]},
  abstract = {Hosted software-as-a-service products provide an opportunity to provide
	consumers with continuous deployment of new features, as opposed
	to scheduled version upgrades as is the norm for products installed
	on-premise. In order to exploit this opportunity, a SaaS provider
	needs to adopt an agile process that is capable of releasing new
	features rapidly. The SCRUM [5,6] process is ideally suited for this
	purpose: However, when SCRUM has been used for agile development
	of an installed product, parallel, overlapping 'sprints' are executed
	by separate teams, each dealing with short, medium, and longer-term
	enhancements to the product[3]; with the result that version upgrades
	are therefore easier to manage. In contrast, in the case of a SAAS
	product, version upgrades are no longer a constraint, so we can do
	better. In this paper we describe 'Continuous SCRUM', a variant of
	Type-C SCRUM, augmented with engineering best practices, in a manner
	ideally suited for managing SAAS products. In our approach, bug-fixes,
	minor enhancements, as well as major features are released continuously,
	on a weekly basis by a single team, in contrast to ``Meta-SCRUM{''}
	[3]. We also present field data from our experience with using Continuous
	SCRUM for a hosted platform-as-a-service product for more than two
	years. Our experience reinforces other recent evidence [11] that
	rapid, smaller releases are often preferable to infrequent, larger
	ones. Continuous SCRUM provides a mechanism to achieve and sustain
	a rapid release cycle, for SAAS products as well as, we believe,
	for custom applications developed in-house.},
  affiliation = {TCS Innovation Labs - Delhi, 154B, Noida, Uttar Pradesh 201301, India},
  author_keywords = {Agile process; Configuration management; Continuous deployment; PAAS;
	Release management; SAAS; SCRUM},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings of the 4th India Software Engineering Conference 2011,
	ISEC'11},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-79953893860&partnerID=40&md5=9d3788ec081d050f5991c62c2f1576dc}
}

@INPROCEEDINGS{Agarwal2010,
  author = {Agarwal, R.a and Umphress, D.b},
  title = {A flexible model for simulation of software development process},
  year = {2010},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:1]},
  abstract = {Inadequate use of project management techniques in software development
	can be traced to the lack of efficient education strategies for managers
	[1]. Software development processes are complex and therefore it
	is hard to predict how changes made to some part of the process can
	affect the overall outcome of the process. Introducing change in
	the process is often time consuming and there is no assurance that
	the change implemented will result in an improvement. Simulation
	of software development process provides an easy way for managers
	to test the different configurations of the process and understand
	the effects of various policies. Using agent directed simulation
	to mimic the software development process at the individual level
	also would enable us to introduce a new phase of software development
	without having to change the simulation code. This simulation would
	start with a given number of agents initialized by the user. At any
	point of time, the user may change the number of developers or assign
	developers on different phases of the software development depending
	on their performance and capabilities. Copyright ©2010 ACM.},
  affiliation = {Hope College, Department of Computer Science, United States; Auburn
	University, Computer Science and Software Engineering, United States},
  art_number = {40},
  author_keywords = {Agent-based simulation; Extreme programming; Personal software process;
	Software development process},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings of the Annual Southeast Conference},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-79951820085&partnerID=40&md5=730fc3a62ca8b45087cfd3eff48cc65a}
}

@ARTICLE{ISI:000269983900001,
  author = {Agerfalk, Par J. and Fitzgerald, Brian and Slaughter, Sandra A.},
  title = {Flexible and Distributed Information Systems Development: State of
	the Art and Research Challenges Introduction},
  journal = {INFORMATION SYSTEMS RESEARCH},
  year = {2009},
  volume = {20},
  pages = {317-328},
  number = {3},
  month = {SEP},
  __markedentry = {[kimi:1]},
  db = {wok},
  doi = {10.1287/isre.1090.0244},
  filtercasper = {exclude},
  filtermaria = {exclude},
  issn = {1047-7047},
  owner = {kimi},
  researcherid-numbers = {Fitzgerald, Brian/E-7790-2010},
  reviewer = {casper, maria},
  timestamp = {2012.12.19},
  unique-id = {ISI:000269983900001}
}

@INPROCEEDINGS{5261090,
  author = {Ahmed, E.-M. and Sidky, A.},
  title = {25 percent Ahead of Schedule and just at Step 2 of the SAMI},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {162 -169},
  month = {aug.},
  __markedentry = {},
  abstract = {The Sidky agile measurement index (SAMI) is a 5-step value-based roadmap
	to agility. The SAMI is designed to help guide organizations seeking
	to become more agile. Each of SAMIpsilas 5 steps (collaborative,
	evolutionary, integrated, adaptive and encompassing) aims to instill
	a new value in teams and organizations. This report shows how an
	organization that is just at Step 2 of the SAMI has realized a number
	of tangible business benefits. Some of these notable benefits are
	(a) 25% increase in the speed to market, (b) 45% decrease in the
	number of bugs reported after delivery of the system, (c) unprecedented
	customer satisfaction, and (d) 19% decrease in employee turnover
	because of the substantial increase in the team moral.},
  db = {ieeexplore},
  doi = {10.1109/AGILE.2009.63},
  keywords = {SAMI;Sidky agile measurement index;customer satisfaction;agile manufacturing;customer
	satisfaction;},
  reviewer = {kimi, casper}
}

@ARTICLE{Ahn201217,
  author = {Ahn, H.J.a and Childerhouse, P.b and Vossen, G.c and Lee, H.d },
  title = {Rethinking XML-enabled agile supply chains},
  journal = {International Journal of Information Management},
  year = {2012},
  volume = {32},
  pages = {17-23},
  number = {1},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:1]},
  abstract = {This paper critically discusses the use of Extensible Markup Language
	(XML) for agile supply chains and proposes practical guidelines and
	future research directions for the field. XML has been identified
	by many as a prominent technology for enabling electronic supply
	chain integration, but the adoption of it in the industry has been
	rather slow and limited. This paper discusses the factors that enable
	agility in supply chains, and explains why XML is the best candidate
	for facilitating such factors. Then the major XML-based integration
	initiatives such as ebXML, RosettaNet, and Web Services are diagnosed
	in terms of their pros and cons for supply chain agility, as well
	as the reasons for their slow diffusion. Based on the discussion,
	this paper proposes that: the integration efforts need to first focus
	on the industries that need agility; stringent business process standards
	are necessary; and implementation should be made much easier and
	more affordable for small and medium enterprises (SMEs). Further
	research issues are also suggested based on the discussion. © 2011
	Elsevier Ltd. All rights reserved.},
  affiliation = {College of Business Administration, Hongik University, 94, Wausan-ro,
	Mapo-gu, Seoul 121-791, South Korea; Waikato Management School, University
	of Waikato, Hamilton 3240, New Zealand; Dept. of Information Systems,
	School of Business Administration and Economics, University of Muenster,
	48149 Muenster, Germany; Brunel Business School, Brunel University,
	Kingston Lane, Uxbridge, Middlesex Ub8 3PH, United Kingdom},
  author_keywords = {Agile supply chain; Business to business; ebXML; RosettaNet; Supply
	chain; Web Services; XML},
  db = {scoups},
  document_type = {Article},
  filtercasper = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {maria, kimi},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84855889628&partnerID=40&md5=e0be12491eb83d61bbe0aa742e38a450}
}

@INPROCEEDINGS{ISI:000282789500011,
  author = {Conboy, Kieran and Morgan, Lorraine},
  title = {Future Research in Agile Systems Development: Applying Open Innovation
	Principles Within the Agile Organisation},
  booktitle = {AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS},
  year = {2010},
  editor = {Dingsoyr, T and Dyba, T and Moe, NB},
  pages = {223-235},
  note = {11th International Conference on Agile Software Development (XP2010),
	Akershus, NORWAY, JUN 01-04, 2010},
  __markedentry = {[kimi:1]},
  abstract = {A particular strength of agile approaches is that they move away from
	`introverted' development and intimately involve the customer in
	all areas of development, supposedly leading to the development of
	a more innovative and hence more valuable information system. However,
	we argue that a single customer representative is too narrow a focus
	to adopt and that involvement of stakeholders beyond the software
	development itself is still often quite weak and in some cases non-existent.
	In response, we argue that current thinking regarding innovation
	in agile development needs to be extended to include multiple stakeholders
	outside the business unit. This paper explores the intra-organisational
	applicability and implications of open innovation in agile systems
	development. Additionally, it argues for a different perspective
	of project management that includes collaboration and knowledge-sharing
	with other business units, customers, partners, and other relevant
	stakeholders pertinent to the business success of an organisation,
	thus embracing open innovation principles.},
  db = {wok},
  doi = {10.1007/978-3-642-12575-1\_11},
  filtercasper = {exclude},
  filtermaria = {exclude},
  isbn = {978-3-642-12574-4},
  owner = {kimi},
  reviewer = {casper, maria},
  timestamp = {2012.12.19},
  unique-id = {ISI:000282789500011}
}

@INPROCEEDINGS{ISI:000256667100009,
  author = {Concas, Giulio and Di Francesco, Marco and Marchesi, Michele and
	Quaresima, Roberta and Pinna, Sandro},
  title = {An agile development process and its assessment using quantitative
	object-oriented metrics},
  booktitle = {AGILE PROCESSES IN SOFTWARE ENGINEERING AND EXTREME PROGRAMMING,
	PROCEEDINGS},
  year = {2008},
  editor = {Abrahamsson, P and Baskerville, R and Conboy, K and Fitzgerald, B
	and Morgan, L and Wang, X},
  volume = {9},
  series = {LECTURE NOTES IN BUSINESS INFORMATION PROCESSING},
  pages = {83-93},
  organization = {Agical; Enterprise Irland; DSSM CONSORTIUM; Agile Alliance; Lero;
	Exoftware; Sfi; FlossLab},
  note = {9th International Conference on Agile Processes in Software Engineering
	and Extreme Porgramming, Limerick, IRELAND, JUN 10-14, 2008},
  __markedentry = {[kimi:1]},
  abstract = {The development of a Web application using agile practices is presented,
	characterized by empirical software measurements that have been performed
	throughout the duration of the project. The project is the specialization
	of jAPS, an open source Java Web portal generation framework, for
	building a Research Register management system. The agile principles
	and practices used in the project are described and discussed. During
	the various phases of the project some key agile practices, such
	as pair programming, test-based development and refactoring, were
	used at different levels of adoption. The evolution of some object-oriented
	metrics of the system, and their behavior related to the agile practices
	adoption level is presented and discussed, showing that software
	quality, as measured using standard 00 metrics, looks directly related
	to agile practices adoption.},
  db = {wok},
  filtercasper = {exclude},
  filtermaria = {exclude},
  isbn = {978-3-540-68254-7},
  issn = {1865-1348},
  owner = {kimi},
  reviewer = {kimi, casper},
  timestamp = {2012.12.19},
  unique-id = {ISI:000256667100009}
}

@ARTICLE{Concas2012525,
  author = {Concas, G. and Marchesi, M. and Destefanis, G. and Tonelli, R.},
  title = {An empirical study of software metrics for assessing the phases of
	an agile project},
  journal = {International Journal of Software Engineering and Knowledge Engineering},
  year = {2012},
  volume = {22},
  pages = {525-548},
  number = {4},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:1]},
  abstract = {We present an analysis of the evolution of a Web application project
	developed with object-oriented technology and an agile process. During
	the development we systematically performed measurements on the source
	code, using software metrics that have been proved to be correlated
	with software quality, such as the Chidamber and Kemerer suite and
	Lines of Code metrics. We also computed metrics derived from the
	class dependency graph, including metrics derived from Social Network
	Analysis. The application development evolved through phases, characterized
	by a different level of adoption of some key agile practices - namely
	pair programming, test-based development and refactoring. The evolution
	of the metrics of the system, and their behavior related to the agile
	practices adoption level, is presented and discussed. We show that,
	in the reported case study, a few metrics are enough to characterize
	with high significance the various phases of the project. Consequently,
	software quality, as measured using these metrics, seems directly
	related to agile practices adoption. © 2012 World Scientific Publishing
	Company.},
  affiliation = {Department of Electrical and Electronic Engineering, University of
	Cagliari, Piazza d'Armi, Cagliari, 09123, Italy},
  author_keywords = {agile methodologies; object-oriented metrics; SNA metrics applied
	to software; software evolution; Software metrics},
  db = {scoups},
  document_type = {Article},
  filtercasper = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84865385132&partnerID=40&md5=03b5df62edb9c3516872ad00d30e96c4}
}

@ARTICLE{Concas2008386,
  author = {Concas, G.a b and Di Francesco, M.c and Marchesi, M.a b and Quaresima,
	R.a and Pinna, S.a },
  title = {Study of the evolution of an agile project featuring a web application
	using software metrics},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes
	in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year = {2008},
  volume = {5089 LNCS},
  pages = {386-399},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:1]},
  abstract = {We present an agile process used for the development of a Web application
	written in Java, devised by choosing a set of proven agile practices
	taken by existing popular agile methodologies. During the project,
	we regularly measured the software using Chidamber and Kemerer object-oriented
	metrics suite, and other metrics. The application development evolved
	through phases, characterized by a different level of adoption of
	some key agile practices - such as pair programming, test-based development
	and refactoring. The evolution of the OO metrics of the system, and
	their behavior related to the agile practices adoption level is presented
	and discussed, showing that soft ware quality, as measured using
	standard OO metrics, looks directly related to agile practices adoption.
	© 2008 Springer-Verlag Berlin Heidelberg.},
  affiliation = {DIEE, Università di Cagliari, Piazza d'Armi, Cagliari 09123, Italy;
	FlossLab S.r.l., viale Elmas, 142, Cagliari 09122, Italy; Lab. for
	Open Source Software, Sardegna Ricerche, ICT District, Piazza d'Armi,
	Cagliari 09123, Italy},
  author_keywords = {Agile methodologies; Object-oriented languages; Software metrics},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {maria, kimi},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-48249129609&partnerID=40&md5=df4c08793ae75b429c61cafe82150469}
}

@ARTICLE{Concha2007149,
  author = {Concha, M. and Visconti, M. and Astudillo, H.},
  title = {Agile commitments: Enhancing business risk management in agile development
	projects},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes
	in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year = {2007},
  volume = {4536 LNCS},
  pages = {149-152},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:1]},
  abstract = {Agile methods focus on customer satisfaction and delivering business
	value early, however if flexibility and adaptability are not managed
	during the development project, agile methods could not assure achieving
	the overall business expectations. Customers require risk visibility
	over the main aspects that define its expectations: functionality
	(scope), budget, time-to-market, and product quality. These risks
	must be controlled and monitored during the project in order to introduce
	mitigation actions if needed. In this article, we propose an agile
	commitments framework based on the definition and follow-up of commitments
	between customer and developer. This framework aims to improving
	risk management by enhancing business expectation risk visibility,
	and also providing a negotiation baseline between customers and developers.
	© Springer-Verlag Berlin Heidelberg 2007.},
  affiliation = {Departamento de Informática, Universidad Técnica Federico Santa María,
	Valparaíso, Chile},
  author_keywords = {Agile development; Commitment management; Risk management},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-38149091888&partnerID=40&md5=74d87a32eebcd9ebc89ae2206c117394}
}

@INPROCEEDINGS{Conn2005,
  author = {Conn, S.S.a and Forrester, L.b },
  title = {Model driven architecture: A research review for information systems
	educators teaching software development},
  year = {2005},
  note = {cited By (since 1996) 0},
  __markedentry = {},
  abstract = {The increasing complexity of business systems, the accelerating pace
	of technological change, and the highly competitive business environment
	are overwhelming software development methodologies that have stayed
	essentially the same for the last fifty years. Model Driven Architecture
	(MDA) is a current initiative by the Object Management Group that
	represents a major evolution in the way software is developed. There
	is growing consensus by the information systems community on the
	fundamental principals of MDA, but some critical elements are missing
	in the areas of transformation and system-behavior modeling. Agreement
	on standards and approaches in these areas will take some time, and
	substantial work remains before MDA can replace traditional, long-practiced
	methods and be considered a routine approach to software development.
	When this happens it has the potential to significantly improve the
	integration of customers into the software development lifecycle.
	Traditional development methodologies and the newer agile methods
	strive to overcome quality and delivery problems by emphasizing customer
	involvement and by attempting to move system validation activities
	(e.g. those concerned with confirming that the system will meet the
	customer's needs) earlier in the development lifecycle. The adoption
	of an MDA approach will not change the role of customers in the development
	process or the nature of their activities; it will not change what
	customers do. However, it can significantly change when customers
	validate a system's functionality. This paper will investigate these
	issues through a qualitative study using an interpretivist epistemology,
	and will form generalized conclusions about MDA. © 2005 EDSIG.},
  affiliation = {Regis University, Denver, CO 80021, United States; University of Denver,
	Denver, CO 80023, United States},
  author_keywords = {Customer integration; Life Cycle Development; MDA; Model driven architecture;
	PIM; PSM},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings of ISECON},
  owner = {kimi},
  page_count = {10},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84865765251&partnerID=40&md5=305e579e097b9602914472750dfbc415}
}

@INPROCEEDINGS{Connolly2009123,
  author = {Connolly, D. and Keenan, F. and McCaffery, F.},
  title = {Developing acceptance tests from existing documentation using annotations:
	An experiment},
  year = {2009},
  pages = {123-129},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:1]},
  abstract = {The importance of good software testing is often reported. Traditionally,
	acceptance testing is the last stage of the testing process before
	release to the customer. Unfortunately, it is not always appropriate
	to wait so long for customer feedback. Emerging agile methods recognise
	this and promote close interaction between the customer and developers
	for early acceptance testing, often before implementation commences.
	Indeed, Acceptance Test Driven Development (ATDD) is a process that
	uses customer interaction to define tests and tool support to automate
	and execute these. However, with existing tools, tests are usually
	written from new descriptions or rewritten from existing documentation.
	Here, the challenge is to allow developers and customers to annotate
	existing documentation and automatically generate acceptance tests
	without rewrites or new descriptions. This paper introduces the related
	ideas and describes a particular experiment that assesses the value
	of using annotated text to create acceptance tests.},
  affiliation = {Dundalk Institute of Technology, Software Technology Research Centre
	(SToRC), Dublin Road, Dundalk, Ireland},
  art_number = {5069050},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings of the 2009 ICSE Workshop on Automation of Software Test,
	AST 2009},
  owner = {kimi},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-70349664750&partnerID=40&md5=baaf4aa191dce244e51cd402f5b88f5e}
}

@INPROCEEDINGS{ISI:000259299500078,
  author = {Conrad, Marc and Huchard, Marianne and Preuss, Thomas},
  title = {Integrating shadows in model driven engineering for agile software
	development},
  booktitle = {CISIS 2008: THE SECOND INTERNATIONAL CONFERENCE ON COMPLEX, INTELLIGENT
	AND SOFTWARE INTENSIVE SYSTEMS, PROCEEDINGS},
  year = {2008},
  editor = {Xhafa, F and Barolli, L},
  pages = {549-554},
  organization = {Tech Univ Wien; Austrian Comp Soc; IEEE Comp Soc; Oesterreich Comp
	Gesell},
  note = {2nd International Conference on Complex, Intelligent and Software
	Intensive Systems, Polytechn Univ Catalonia, Catalonia, SPAIN, MAR
	04-07, 2008},
  __markedentry = {},
  abstract = {Shadows are well known as a programming language feature in the application
	area of MUDs (a certain type of multi-player online game). We argue
	that agile methodologies can be enhanced by the use of shadows as
	this feature because of its inherent ability to dynamically change
	the behavior of classes and objects, provides mechanisms to ease
	common tasks such as prototyping, deprecating, dynamic classification
	and interclassing at run-time. Therefore shadows should be considered
	a notion beyond any specific programming languages in order to facilitate
	its use in model-driven software engineering. For this we introduce
	Shadows-UML, an UML extension, that would help to push forward the
	convergence between model-driven and agile methodologies.},
  db = {wok},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  isbn = {978-0-7695-3109-0},
  owner = {kimi},
  reviewer = {casper, maria},
  timestamp = {2012.12.19},
  unique-id = {ISI:000259299500078}
}

@INPROCEEDINGS{1201267,
  author = {Constantine, L.L. and Lockwood, L.A.D.},
  title = {Usage-centered software engineering: an agile approach to integrating
	users, user interfaces, and usability into software engineering practice},
  booktitle = {Software Engineering, 2003. Proceedings. 25th International Conference
	on},
  year = {2003},
  pages = { 746 - 747},
  month = {may},
  __markedentry = {},
  abstract = { Usage-centered design is a systematic, model-driven approach to visual
	and interaction design with an established record of effectiveness
	in a wide variety of settings and areas of application. The tutorial
	introduces the models and methods of usage-centered design and explores
	the integration of usage-centered approaches into software engineering
	practice. Agile approaches to modeling will be emphasized, with the
	focus on use cases, which are central to usage-centered design and
	serve as a common thread throughout an integrated usage-centered
	software engineering process.},
  db = {ieeexplore},
  doi = {10.1109/ICSE.2003.1201267},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  issn = {0270-5257},
  keywords = { agile modeling; model-driven approach; software usability; usage-centered
	software engineering; user interfaces; software engineering; user
	centred design; user interfaces;},
  reviewer = {maria, kimi}
}

@INPROCEEDINGS{4022014,
  author = {Cooper, K.M.L.},
  title = {Can Agility be Introduced into Requirements Engineering for COTS
	Component Based Development?},
  booktitle = {Software Product Management, 2006. IWSPM '06. International Workshop
	on},
  year = {2006},
  pages = {35 -37},
  month = {sept. },
  __markedentry = {[kimi:1]},
  abstract = {The Rational Unified Process is a popular software development process
	framework that can be tailored to meet the needs of different kinds
	of projects (large, small, component development, component based
	application development, etc.). This position paper presents an overview
	of a comprehensive RUP based process for developing COTS based systems
	and poses a set of questions that need to be considered to introduce
	agility into the process from a requirements engineering perspective.},
  db = {ieeexplore},
  doi = {10.1109/IWSPM.2006.2},
  filtercasper = {exclude},
  filtermaria = {exclude},
  reviewer = {kimi, casper}
}

@INPROCEEDINGS{Cooper2012208,
  author = {Cooper, K.M.L.a and Longstreet, C.S.b },
  title = {Towards model-driven game engineering for serious educational games:
	Tailored use cases for game requirements},
  year = {2012},
  pages = {208-212},
  note = {cited By (since 1996) 0},
  __markedentry = {},
  abstract = {Educational games are essential in the next generation of e-learning
	tools because games stress visual and experiential learning; they
	require active involvement by student players while providing almost
	instantaneous feedback. The long term goal of this research project
	is to define a model-driven game engineering approach, SimSYS, that
	supports the rapid development of serious educational games across
	diverse educational topics. Here, we present our approach for modeling
	serious educational games, using tailored UML use cases (visual UML
	diagram and detailed tabular specifications). The tailored approach
	integrates features of storyboarding techniques (well-established
	in the game community), with use case modeling (well-established
	in the software engineering community). The use case model can be
	transformed into a formal XML representation that can be loaded by
	the SimSYS Game Play Engine. Part of a game on agile software development
	process is used for illustration. © 2012 IEEE.},
  affiliation = {University of Texas at Dallas, Mail Station EC 31, 800 West Campbell
	Road, Richardson, TX 75080, United States; Marquette University,
	1355 West Wisconsin Ave, Milwaukee, WI 53201, United States},
  art_number = {6314577},
  author_keywords = {model-driven game engineering; requirements engineering; serious educational
	games; storyboards; use cases},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings of CGAMES'2012 USA - 17th International Conference on
	Computer Games: AI, Animation, Mobile, Interactive Multimedia, Educational
	and Serious Games},
  owner = {kimi},
  reviewer = {maria, kimi},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84869039191&partnerID=40&md5=f9ea084767a628200df289aabbbb595c}
}

@INPROCEEDINGS{1409937,
  author = {Coram, M. and Bohner, S.},
  title = {The impact of agile methods on software project management},
  booktitle = {Engineering of Computer-Based Systems, 2005. ECBS '05. 12th IEEE
	International Conference and Workshops on the},
  year = {2005},
  pages = { 363 - 370},
  month = {april},
  __markedentry = {[kimi:3]},
  abstract = { As more and more software projects engage agile methods, there are
	emerging patterns of success and failure. With growing adoption of
	agile methods, project managers increasingly need to understand the
	applicability to their projects and factors that drive key project
	performance characteristics. While some organizations affirm that
	agile methods solve all their problems, few have shown consistent
	success over a range of typical software projects. Agile methods
	have advantages, especially in accommodating change due to volatile
	requirements. However, they also present concomitant risks with managing
	the many dependent pieces of work distributed across a large project.
	Use of agile methods therefore presents a set of tradeoffs. This
	paper examines the impact of agile methods on the people involved
	in a project, the process under which a project is developed, and
	on the project itself in an attempt to allow project managers to
	evaluate the applicability using an agile method.},
  db = {ieeexplore},
  doi = {10.1109/ECBS.2005.68},
  filtercasper = {exclude},
  keywords = { agile methods; risk management; software project management; formal
	specification; project management; risk management; software development
	management;},
  reviewer = {maria, kimi}
}

@INPROCEEDINGS{ISI:000286779200030,
  author = {Corbucci, Hugo and Bravo, Mariana V. and da Silva, Alexandre Freire
	and da Silva, Fernando Freire},
  title = {Prototypes Are Forever Evolving from a Prototype Project to a Full-Featured
	System},
  booktitle = {AGILE PROCESSES IN SOFTWARE ENGINEERING AND EXTREME PROGRAMMING},
  year = {2010},
  editor = {Sillitti, A and Martin, A and Wang, XF and Whitworth, E},
  volume = {48},
  series = {Lecture Notes in Business Information Processing},
  pages = {277-286},
  note = {11th International Conference on Agile Software Development (XP2010),
	Trondhim, NORWAY, JUN 01-04, 2010},
  __markedentry = {},
  abstract = {Prototypes are a well known, widely accepted development practice
	but, if not carefully evolved, they can become a nightmare to maintain.
	This paper presents the experience of a four person agile team who
	successfully grew a prototyped system to a full-featured application
	without any clear transition in the project. The paper describes
	how the project started with a very simple prototyping goal, evolved
	through iterations and spikes to a partly working system and transformed,
	in the end, in a complete application widely tested and refactored.},
  db = {wok},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  isbn = {978-3-642-13053-3},
  issn = {1865-1348},
  owner = {kimi},
  reviewer = {maria, kimi},
  timestamp = {2012.12.19},
  unique-id = {ISI:000286779200030}
}

@INPROCEEDINGS{6065151,
  author = {Corbucci, H. and Goldman, A. and Katayama, E. and Kon, F. and Melo,
	C. and Santos, V.},
  title = {Genesis and Evolution of the Agile Movement in Brazil -- Perspective
	from Academia and Industry},
  booktitle = {Software Engineering (SBES), 2011 25th Brazilian Symposium on},
  year = {2011},
  pages = {98 -107},
  month = {sept.},
  __markedentry = {},
  abstract = {Agile software development methods have been increasingly adopted
	worldwide and became one of the mainstream software development approaches.
	Agile methods have also had an impact on software engineering education
	with universities adapting their courses to accommodate this new
	point of view of software development. Software engineering research
	has tried to evaluate the impact of agile methods in industrial projects
	and discover in which situations it is beneficial to apply such methods.
	However, there are still few studies focusing on the progress of
	the Agile Movement in Brazil.In this paper, we present an overview
	of the evolution of the Agile Movement in Brazil, outlining the history
	of its first advocates in academia and industry. We also describe
	existing educational initiatives and the impact of agile development
	on the national research and present a report on the agile state-of-
	the-practice in the Brazilian IT industry.},
  db = {ieeexplore},
  doi = {10.1109/SBES.2011.26},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  keywords = {Brazilian IT industry;agile movement;agile software development method;educational
	initiative;industrial project;national research;software engineering
	education;DP industry;computer science education;research and development;software
	prototyping;},
  reviewer = {casper, maria}
}

@ARTICLE{Jakobsen199864,
  author = {Jakobsen, A.B.a b c d },
  title = {Bottom-up process improvement tricks},
  journal = {IEEE Software},
  year = {1998},
  volume = {15},
  pages = {64-68},
  number = {1},
  note = {cited By (since 1996) 4},
  __markedentry = {[kimi:3]},
  abstract = {Most everyone in our field acknowledges that software process improvement
	cannot succeed unless management is committed to implementing it.
	Fortunately, the move to SPI can be a two-way street, initiated as
	easily from the bottom up as from the top down. Taking this bottom-up
	approach, I present some tricks that practitioners down in the trenches
	can use to win upper management's approval of and support for SPI.
	My first opportunity to introduce bottom-up process changes occurred
	on a project in which my job was basically coding and testing. Initially,
	I was assigned to the maintenance coding of the product's previous
	release, which proved to be a real headache. So I had my motives
	for making improvements. According to the waterfall model we were
	using, the project was about halfway through the design phase. A
	lot of lower-level design and unit and integration testing remained.
	I was assigned one part of the system, and the remaining design and
	unit testing tasks were given to the 15 people we had allocated to
	us for the next five months. Given the amount of work that lay before
	us, these resources were not nearly enough. One subproject leader
	realized that our complex and lengthy design task would prove a huge
	challenge.},
  affiliation = {Delta Software Engineering, Denmark; Danish Co. Delta Software Eng.,
	Denmark; Copenhagen University, Denmark; Delta Software Engineering,
	Venlighedsvej 4, DK-2970, Hoersholm, Denmark},
  db = {scoups},
  document_type = {Article},
  filtercasper = {exclude},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-0031699540&partnerID=40&md5=2c4d076ef6a474e49b3f866dc1e9dc7f}
}

@INPROCEEDINGS{5261061,
  author = {Jakobsen, C.R. and Sutherland, J.},
  title = {Scrum and CMMI Going from Good to Great},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {333 -337},
  month = {aug.},
  __markedentry = {},
  abstract = {Projects combining agile methods with CMMI combine adaptability with
	predictability to better serve large customer needs. The introduction
	of Scrum at Systematic, a CMMI level 5 company, doubled productivity
	and cut defects by 40% compared to waterfall projects in 2006 by
	focusing on early testing and time to fix builds. Systematic institutionalized
	Scrum across all projects and used data driven tools like story process
	efficiency to surface product backlog impediments. This allowed them
	to systematically develop a strategy for a second doubling in productivity.
	Two teams have achieved a sustainable quadrupling of productivity
	compared to waterfall projects. We discuss here the strategy to bring
	the entire company to that level. Our experiences shows that Scrum
	and CMMI together bring a more powerful combination of adaptability
	and predictability than either one alone and suggest how other companies
	can combine them to achieve Toyota level performance - 4 times the
	productivity and 12 times the quality of waterfall teams.},
  db = {ieeexplore},
  doi = {10.1109/AGILE.2009.31},
  filtercasper = {include},
  filterkimi = {include},
  filtermaria = {include},
  keywords = {CMMI;Scrum;Systematic;agile methods;customer needs;surface product
	backlog;Capability Maturity Model;DP industry;productivity;project
	management;},
  reviewer = {maria, kimi}
}

@ARTICLE{Jakumeit2010263,
  author = {Jakumeit, E. and Buchwald, S. and Kroll, M.},
  title = {GrGen.NET: The expressive, convenient and fast graph rewrite system},
  journal = {International Journal on Software Tools for Technology Transfer},
  year = {2010},
  volume = {12},
  pages = {263-271},
  number = {3},
  note = {cited By (since 1996) 3},
  __markedentry = {},
  abstract = {GrGen. NET is a generative programming system for graph rewriting,
	transforming intuitive and expressive rewrite rule specifications
	into highly efficient. NET code. The user is supported by a convenient
	environment consisting of a graph viewer, an interactive shell with
	integrated debugging support, and an elegant domain-specific language
	for the combination of rewrite rules. After rapid prototyping with
	these tools, the resulting graph transformation programmes can be
	easily integrated into arbitrary. NET applications to serve as the
	algorithmic kernel. Expressiveness, convenience, and speed are exemplified
	by GrGen-solutions to the case studies AntWorld, Refactoring, and
	Conference Scheduling-besides others. © 2010 Springer-Verlag.},
  affiliation = {Institut für Programmstrukturen und Datenorganisation, Universität
	Karlsruhe, Karlsruhe, Germany},
  author_keywords = {Domain-specific language; General purpose graph transformation; Generative
	programming tool; Graph rewriting; Search-plan-driven graph pattern
	matching},
  db = {scoups},
  document_type = {Article},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-77953957966&partnerID=40&md5=8da5a3c23a9ea875e7c6b8bbb0a0d2c3}
}

@INPROCEEDINGS{James-Moore1995,
  author = {James-Moore, S.M.R.},
  title = {Agility is easy, but effective agile manufacturing is not},
  year = {1995},
  number = {179},
  pages = {4pp},
  note = {cited By (since 1996) 0},
  __markedentry = {},
  abstract = {The requirement for organizations and facilities to become more flexible
	and responsive to customers led to the concept of the 'agile' manufacturing
	as a differentiation from the 'lean' organization. This requirement
	for manufacturing to be able to respond to unique demands moves the
	balance back to the situation prior to the introduction of lean production,
	where manufacturing had to respond to whatever pressures were imposed
	on it, with the risks to cost and quality that this implies. The
	move to lean production, with its requirement for improvements in
	the support processes, has been a major task for many organizations
	to achieve. This paper discusses this balance between leanness and
	agility as well as questions how much agility is appropriate and
	how difficult might it be to achieve.},
  affiliation = {Univ of Warwick, United Kingdom},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  journal = {IEE Colloquium (Digest)},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-0029386942&partnerID=40&md5=49f768c2289cfe64c291abe4bdd335df}
}

@INPROCEEDINGS{James-Moore1996,
  author = {James-Moore, S.M.R.},
  title = {Agility is easy, but effective agile manufacturing is not},
  year = {1996},
  number = {74},
  note = {cited By (since 1996) 3},
  __markedentry = {},
  abstract = {In a changing competitive environment, there is a need to develop
	organizations and facilities significantly more flexible and responsive
	than current existing ones. This requirement for manufacturing to
	be able to respond to unique demands moves the balance back to the
	situation prior to the introduction of lean production with the risks
	to cost and quality that it implies. The move to lean production,
	with its requirement for improvements in the support processes has
	been a major task for many organizations to achieve. The balance
	between leanness and agility, the appropriate amount of agility and
	the difficulty in achieving it are discussed.},
  affiliation = {Univ of Warwick, Coventry, United Kingdom},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  journal = {IEE Colloquium (Digest)},
  owner = {kimi},
  page_count = {4},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-0030410651&partnerID=40&md5=5f65b60ec50e2f6082afd068db041542}
}

@INPROCEEDINGS{4133444,
  author = {Jami, S.I. and Shaikh, Z.A.},
  title = {Teaching Computer Science Courses Using Extreme Programming (XP)
	Methodology},
  booktitle = {9th International Multitopic Conference, IEEE INMIC 2005},
  year = {2005},
  pages = {1 -6},
  month = {dec.},
  __markedentry = {},
  abstract = {This paper describes the extreme programming (XP) methodology and
	its effectiveness in incorporating its practices in computer science
	curriculum. We explored several merits and demerits of this incorporation
	based on our experiences and observations which are supported by
	other researchers. In this study we considered those courses of computer
	science that involve the processes of software development and analysis.
	It has been found that XP in full practice is vulnerable against
	a single course of software engineering, so some of its practices
	should be incorporated in the first semester of computer science
	curriculum and rest should be incorporated in later years. We start
	our work from the introductory course in computer science where we
	first implement the concept of pair programming and then implement
	other practices. Some suggestions are included in this work that
	can be helpful in implementing this methodology},
  db = {ieeexplore},
  doi = {10.1109/INMIC.2005.334429},
  excluded = {Kimi, title},
  excludekimi = {title},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  keywords = {computer science course;extreme programming methodology;software development;teaching;computer
	aided instruction;computer science education;educational courses;programming;software
	engineering;teaching;},
  reviewer = {maria, kimi}
}

@INPROCEEDINGS{6226998,
  author = {Janus, A. and Schmietendorf, A. and Dumke, R. and Jager, J.},
  title = {The 3C approach for Agile Quality Assurance},
  booktitle = {Emerging Trends in Software Metrics (WETSoM), 2012 3rd International
	Workshop on},
  year = {2012},
  pages = {9 -13},
  month = {june},
  __markedentry = {[kimi:1]},
  abstract = {Continuous Integration is an Agile Practice for the continuous integration
	of new Source Code into the Code Base including the automated compile,
	build and running of tests. From traditional Quality Assurance we
	know Software Metrics as a very good approach to measure Software
	Quality. Combining both there is a promising approach to control
	and ensure the internal Software Quality. This paper introduces the
	3C Approach, which is an extension to the Agile Practice Continuous
	Integration: It adds Continuous Measurement and Continuous Improvement
	as subsequent Activities to CI and establishes Metric-based Quality-Gates
	for an Agile Quality Assurance. It was developed and proven in an
	Agile Maintenance and Evolution project for the Automotive Industry
	at T-Systems International - a large German ICT company. Within the
	project the approach was used for a (legacy) Java-based Web Application
	including the use of Open Source Tools from the Java Eco-System.
	But the approach is not limited to these technical boundaries as
	similar tools are available also for other technical platforms.},
  db = {ieeexplore},
  doi = {10.1109/WETSoM.2012.6226998},
  excluded = {Kimi, title},
  filtercasper = {exclude},
  filtermaria = {exclude},
  keywords = {3C approach;Agile Maintenance and Evolution project;Automotive Industry;German
	ICT company;Java ecosystem;Java-based Web application;T-Systems International;agile
	practice;agile quality assurance;code base;continuous improvement;continuous
	integration;continuous measurement;metric-based quality-gates;open
	source tools;software metrics;software quality measurement;source
	code;Internet;Java;automobile industry;continuous improvement;production
	engineering computing;public domain software;quality assurance;software
	maintenance;software metrics;software prototyping;software quality;software
	tools;},
  reviewer = {maria, kimi}
}

@INPROCEEDINGS{1617340,
  author = {Janzen, D.S. and Saiedian, H.},
  title = {On the Influence of Test-Driven Development on Software Design},
  booktitle = {Software Engineering Education and Training, 2006. Proceedings. 19th
	Conference on},
  year = {2006},
  pages = {141 -148},
  month = {april},
  __markedentry = {},
  abstract = {Test-driven development (TDD) is an agile software development strategy
	that addresses both design and testing. This paper describes a controlled
	experiment that examines the effects of TDD on internal software
	design quality. The experiment was conducted with undergraduate students
	in a software engineering course. Students in three groups completed
	semester-long programming projects using either an iterative test-first
	(TDD), iterative test-last, or linear test-last approach. Results
	from this study indicate that TDD can be an effective software design
	approach improving both code-centric aspects such as object decomposition,
	test coverage, and external quality, and developer-centric aspects
	including productivity and confidence. In addition, iterative development
	approaches that include automated testing demonstrated benefits over
	a more traditional linear approach with manual tests. This study
	demonstrates the viability of teaching TDD with minimal effort in
	the context of a relatively traditional development approach. Potential
	dangers with TDD are identified regarding programmer motivation and
	discipline. Pedagogical implications and instructional techniques
	which may foster TDD adoption will also be referenced},
  db = {ieeexplore},
  doi = {10.1109/CSEET.2006.25},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  issn = {1093-0175},
  keywords = {agile software development;internal software design quality;iterative
	development approach;iterative test-first approach;iterative test-last
	approach;linear test-last approach;object decomposition;programmer
	discipline;programmer motivation;programming project;software engineering
	course;test-driven development;undergraduate students;computer science
	education;educational courses;object-oriented programming;program
	testing;software architecture;software quality;teaching;},
  reviewer = {casper, maria}
}

@ARTICLE{4455636,
  author = {Janzen, D.S. and Saiedian, H.},
  title = {Does Test-Driven Development Really Improve Software Design Quality?},
  journal = {Software, IEEE},
  year = {2008},
  volume = {25},
  pages = {77 -84},
  number = {2},
  month = {march-april },
  __markedentry = {[kimi:1]},
  abstract = {Support for test-driven development [TDD] is growing in many development
	contexts beyond its common association with extreme programming.
	By focusing on how TDD influences design characteristics, we hope
	to raise awareness of TDD as a design approach and assist others
	in decisions on whether and how to adopt TDD. Our results indicate
	that test-first programmers are more likely to write software in
	more and smaller units that are less complex and more highly tested.
	We weren't able to confirm claims that TDD improves cohesion while
	lowering coupling, but we anticipate ways to clarify the questions
	these design characteristics raised. In particular, we're working
	to eliminate the confounding factor of accessor usage in the cohesion
	metrics.},
  db = {ieeexplore},
  doi = {10.1109/MS.2008.34},
  excluded = {Kimi, title (see later)},
  excludekimi = {title},
  filtercasper = {exclude},
  filtermaria = {exclude},
  issn = {0740-7459},
  keywords = {cohesion metrics;confounding factor;extreme programming;software design
	quality improvement;test-driven development;program testing;software
	metrics;software process improvement;software quality;},
  reviewer = {casper, maria}
}

@ARTICLE{Janzen200543,
  author = {Janzen, D.a and Saiedian, H.b },
  title = {Test-driven development: Concepts, taxonomy, and future direction},
  journal = {Computer},
  year = {2005},
  volume = {38},
  pages = {43-50},
  number = {9},
  note = {cited By (since 1996) 44},
  __markedentry = {},
  abstract = {The test-driven development strategy requires writing automated tests
	prior to developing functional code in small, rapid iterations. XP
	is an agile method that develops object-oriented software in very
	short iterations with little upfront design. Although not originally
	given this name, TDD was described as an integral XP practice necessary
	for analysis, design, and testing that also enables design through
	refactoring, collective ownership, continuous integration, and programmer
	courage. Along with pair programming and refactoring, TDD has received
	considerable individual attention since XP's introduction. Developers
	have created tools specifically to support TDD across a range of
	languages and have written numerous books explaining how to apply
	TDD concepts. Researchers have begun to examine TDD's effects on
	defect reduction and quality improvements in academic and professional
	practitioner environments, and educators have started to examine
	how to integrate TDD into computer science and software engineering
	pedagogy.},
  affiliation = {Simex LLC, Bethel College, North Newton, KS, United States; Department
	of Electrical Engineering and Computer Science, Information and Telecommunication
	Technology Center, University of Kansas, Lawrence, KS, United States},
  db = {scoups},
  document_type = {Article},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {maria, kimi},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-25844466601&partnerID=40&md5=42ba5c15651120f2dcf2cc8fae114e85}
}

@INPROCEEDINGS{Janzen2007254,
  author = {Janzen, D.S. and Saiedian, H.},
  title = {Test-driven learning: Intrinsic integration of testing into the CS/SE
	curriculum},
  year = {2007},
  pages = {254-258},
  note = {cited By (since 1996) 0},
  __markedentry = {},
  abstract = {Test-driven learning (TDL) is an approach to teaching computer programming
	that involves introducing and exploring new concepts through automated
	unit tests. TDL offers the potential of teaching testing for free,
	of improving programmer comprehension and ability, and of improving
	software quality both in terms of design quality and reduced defect
	density.This paper introduces test-driven learning as a pedagogical
	tool. It will provide examples of how TDL can be incorporated at
	multiple levels in computer science and software engineering curriculum
	for beginning through professional programmers. In addition, the
	relationships between TDL and test-driven development will be explored.Initial
	evidence indicates that TDL can improve student comprehension of
	new concepts while improving their testing skills with no additional
	instruction time. In addition, by learning to construct programs
	in a test-driven manner, students are expected to be more likely
	to develop their own code with a test-driven approach, likely resulting
	in improved software designs and quality. Copyright 2006 ACM.},
  affiliation = {University of Kansas, Electrical Engineering and Computer Science,
	Lawrence, KS, United States},
  author_keywords = {CS1; Extreme programming; Pedagogy; Test-driven development; Test-driven
	learning},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings of the Thirty-Seventh SIGCSE Technical Symposium on Computer
	Science Education},
  owner = {kimi},
  reviewer = {maria, kimi},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-37849018803&partnerID=40&md5=34452c5eb670480ebab657ab42ba96e2}
}

@INPROCEEDINGS{Jayadevappa2009,
  author = {Jayadevappa, S.a and Shankar, R.b },
  title = {The changing ways of computer science \& engineering education: A
	suitable pedagogy to adapt better},
  year = {2009},
  note = {cited By (since 1996) 0},
  __markedentry = {},
  abstract = {Computer industry workforce skills required continue to change rapidly.
	Newer computer technologies are introduced continually while existing
	ones become obsolete at a faster pace. It is a major challenge to
	evolve a flexible curriculum that can adapt to those rapid and substantial
	changes and that new graduates may be taught with. For example, when
	the Association of Computing Machinery (ACM) released the Computer
	Curriculum in 1991, networking was not seen as a major topic area.
	Networking was not a mass-market phenomenon then, and the World Wide
	Web was little more than an idea in the minds of its creators. Today,
	networking and the web have changed the way we do business. Other
	professional organizations, in addition to ACM, such as the Institution
	of Electrical & Electronics Engineering (IEEE), and the American
	Society for Engineering Education (ASEE) are also at the forefront
	of addressing this challenge. They rapidly and continuously strive
	to provide the necessary directions in curriculum content and pedagogy.
	The current ``Language First{''} CSE curriculum globally followed
	has stood the ground for close to five decades; but it has many inherent
	flaws. Some among them include emphasis on language and syntax rather
	than design methodology and problem solving. We put forth a pedagogy
	that is flexible, practical, and is based on the ``Middle-Out Approach{''}
	which is a combination of top-down and bottom-up approaches; typically
	one integrates these two at an intermediate architect's level in
	an attempt to optimize a system. We, however, do not address these
	optimization and integration issues as part of our curriculum, because
	of time limitation. They can be undertaken as part of a Master's
	program. We categorize our undergraduate curriculum into 4 core categories
	namely, software, hardware, human-computer interaction and networking.
	Further each category curriculum is divided into 4 levels: (1) Level
	1 (basic/system level) courses broadly include Software Engineering,
	SOC (System on a Chip) overview, Principles of User Interface Design,
	and Internet technology; (2) Level 2 (intermediate/component level)
	courses include Object Oriented Analysis & Design (OOAD), System
	Level Design, Operating Systems (OS), and Computer Networking; (3)
	Level 3 (higher/expanded level) courses could include Aspect Oriented/Extreme
	Programming, Computer Architecture, Modern Computer Design, OS Design,
	Grid Computing etc; and (4) Level 4 (detailed/micro level) courses
	include Data Structures & Algorithms Analysis and Design, System
	Software & Compiler Design, Digital Design, and Advanced Computer
	Networks. Exploring pedagogy alternatives to the ``Language First{''}
	approach and help disseminate domain knowledge better are key to
	this effort. Further, the proposed curriculum provides stronger design
	emphasis, better match with industry's current and future needs,
	and supports better adaptability. The ``Middle-Out Approach{''} also
	provides a better platform for lifelong learning. The major hurdle
	in the implementation of proposed curriculum would be the dissemination
	of the proposed approach to the CSE fraternity and availability of
	skilled faculty to handle the courses at various levels. Acceptance
	of this approach is more in the mindset of the professors; the ones
	who can see the inherent advantages will embrace this faster. There
	is also a need to develop books with a case-study approach with adequate
	design examples. © American Society for Engineering Education, 2009.},
  affiliation = {Educational Institution, PES School of Engineering; Florida Atlantic
	University, United States},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  journal = {ASEE Annual Conference and Exposition, Conference Proceedings},
  owner = {kimi},
  page_count = {10},
  reviewer = {maria, kimi},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-69249170989&partnerID=40&md5=05e5813a6809c07ab04d2504eeb624ed}
}

@INPROCEEDINGS{5643278,
  author = {Jayawardena, D.S. and Ekanayake, L.L.},
  title = {Adaptation analysis of Agile Project Management for managing IT projects
	in Sri Lanka},
  booktitle = {Advances in ICT for Emerging Regions (ICTer), 2010 International
	Conference on},
  year = {2010},
  pages = {1 -4},
  month = {29 2010-oct. 1},
  __markedentry = {},
  abstract = {The dynamic business environment today has created immense pressure
	on the delivery of IT projects. Traditional methods of managing projects
	are no longer applicable and effective to manage certain IT projects
	as they are unable to cope with the rapid organizational and business
	level changes. Agile project management has caught the attention
	of many project managers as a means of facing these challenges and
	to overcome the limitations of managing IT projects. This study reports
	the results of an adaptation analysis done on Agile Project Management
	in managing IT projects in Sri Lanka. The awareness level of agile
	project management and what factors affect the awareness are discussed
	in this study. The agile project management implementation challenges
	and recommendations discussed in this study will help Sri Lankan
	organizations to successfully adopt agile project management.},
  db = {ieeexplore},
  doi = {10.1109/ICTER.2010.5643278},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  keywords = {IT project management;Sri Lanka;adaptation analysis;agile project
	management;awareness level;business level change;rapid organizational
	change;business data processing;information technology;organisational
	aspects;project management;},
  reviewer = {kimi, casper}
}

@ARTICLE{Jeffery2010496,
  author = {Jeffery, N. and Cox, P.G.},
  title = {Do agility and skull architecture influence the geometry of the mammalian
	vestibulo-ocular reflex?},
  journal = {Journal of Anatomy},
  year = {2010},
  volume = {216},
  pages = {496-509},
  number = {4},
  note = {cited By (since 1996) 3},
  __markedentry = {},
  abstract = {The spatial arrangement of the semicircular canals and extraocular
	muscles of the eye has been of considerable interest, particularly
	to researchers working on adaptations of the vestibulo-ocular reflex.
	Here we offer the first, extensive comparative analysis of the spatial
	relationships between each extraocular muscle and the canal providing
	its primary excitatory stimulus. The sample consisted of 113 specimens,
	representing 51 extant mammalian species. Hypotheses tested included
	that variations in the spatial alignments are linked with differences
	of skull morphology and with differences of agility during locomotion.
	Internal morphologies were visualized with magnetic resonance imaging
	and were measured with landmark-based vectors and planes. Values
	for body mass and agility were taken from the existing literature.
	Data were investigated for trends and associations with standard
	bivariate and multivariate statistical methods as well as with phylogenetically
	adjusted bivariate methods. The findings clearly show that species
	differences in the alignment of each extraocular muscle relative
	to the canal providing its primary excitatory stimulus are closely
	associated with changes of orbit morphology. The results also indicate
	that the actions of the oblique muscles interchange with those of
	the superior and inferior recti muscles when comparing lateral-eyed
	(rabbit) with frontal-eyed species (cat). There was only weak evidence
	to support the notion that canal-muscle alignments differ significantly
	among species according to how agile they are. The results suggest
	that semicircular canal morphology is arranged primarily for detecting
	head movements and then secondarily, if at all, for diminishing the
	burden of transforming vestibulo-ocular reflex signals in the most
	agile species. © 2010 The Authors. Journal compilation © 2010 Anatomical
	Society of Great Britain and Ireland.},
  affiliation = {Division of Human Anatomy and Cell Biology, School of Biomedical Sciences,
	University of Liverpool, Liverpool, United Kingdom},
  author_keywords = {Agility; Convergence; Extraocular; Frontation; Orbit; Semicircular},
  db = {scoups},
  document_type = {Article},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-77951951335&partnerID=40&md5=90a61deaf7970673a98ab4a78e55435a}
}

@INPROCEEDINGS{5501136,
  author = {Mayorov, A.V.},
  title = {XSLT in Agile web development},
  booktitle = {Software Engineering Conference in Russia (CEE-SECR), 2009 5th Central
	and Eastern European},
  year = {2009},
  pages = {303 -306},
  month = {oct.},
  __markedentry = {},
  abstract = {Agile requires accordingly agile software architecture and programming
	tools. For web development popular agile architecture is MVC (Model-View-Controller).
	For transferring data between controller and view XML is very suitable.
	And to transform it into final form it's better to use XSLT. XSLT
	is not very popular among developers, because they think this is
	just yet another #x201C;strange #x201D; language, without any real
	advantage comparing to usual languages. But advantages are real -
	XSLT allows for very interesting results, not possible with other
	templating languages. It definitely worth studying and this is not
	hard.},
  db = {ieeexplore},
  doi = {10.1109/CEE-SECR.2009.5501136},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  keywords = {XML;XSLT;agile Web development;agile software architecture;agile software
	programming tools;model view controller;Internet;XML;software architecture;software
	prototyping;software tools;},
  reviewer = {maria, kimi}
}

@INPROCEEDINGS{ISI:000227677800034,
  author = {Mayr, H},
  title = {``Disciplined agility{''} or how to teach agile software development
	to undergraduate students},
  booktitle = {8TH WORLD MULTI-CONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS,
	VOL IV, PROCEEDINGS: INFORMATION SYSTEMS, TECHNOLOGIES AND APPLICATIONS:
	I},
  year = {2004},
  editor = {Callaos, N and Lefebvre, V and Hansen, E and Dickopp, T and Su, JS},
  pages = {156-161},
  organization = {Int Inst Informat \& System; Amer Soc Cybernet; Acad Non Linear Sci;
	Univ Las Palmas Gran Canaria, Telemat Engn Dept, Concurrency \& Architecture
	Grp; CUST, Blaise Pascal Univ, Engn Sci Inst; Cybernet \& Human Knowing;
	Int Federat Syst Res; Int Syst Inst; Int Soc Syst Sci; Italian Soc
	System; Univ Nacl San Luis, Lab Res Computac Intelligence, Dept Informat;
	Polish Syst Soc; Slovenian Artificial Intelligence Soc; Soc Appl
	Syst Res; Syst Soc Poland; Ctr Syst Studies; Tunisian Sci Soc; World
	Org System \& Cybernet; IEEE Comp Soc, Venezuela Chapter; IEEE, Venezuela
	Chapter; Natl Res Council Canada; Steacie Inst Mol Sci},
  note = {8th World Multi-Conference on Systemics, Cybernetics and Informatics,
	Orlando, FL, JUL 18-21, 2004},
  __markedentry = {},
  abstract = {We present our approach to teach agile software development methods
	already during the first year of an undergraduate university curriculum
	by means of exercise-centered lectures and real-life projects. After
	discussing the benefits and the challenges of agile methodologies
	in general, we introduce a new topology of process models in order
	to determine the different scopes of such models. Taking Scrum and
	Extreme Programming as examples, the illustrate, how the have adapted
	and extended these models in order to apply them successfully in
	an education environment. We conclude with presenting selected tools
	and documents for planning and analyzing the progress of agile projects
	that have been developed by us specifically for education purposes,
	but have already found positive reaction from entrepreneurial environments.},
  db = {wok},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  isbn = {980-6560-13-2},
  owner = {kimi},
  reviewer = {kimi, casper},
  timestamp = {2012.12.19},
  unique-id = {ISI:000227677800034}
}

@INPROCEEDINGS{ISI:000228210300053,
  author = {Mayr, H},
  title = {Project management education for software engineering and web engineering:
	Commonalities and differences},
  booktitle = {EISTA `04: International Conference on Education and Information
	Systems: Technologies and Applications, Vol, 2, Proceedings: EDUCATION
	AND TRAINING SYSTEMS, TECHNOLOGIES AND APPLICATIONS},
  year = {2004},
  pages = {277-282},
  note = {International Conference on Education and Information Systems - Technologies
	and Application, Orlando, FL, JUL 21-25, 2004},
  __markedentry = {},
  abstract = {We give our underlying concept as well as an experience report on
	introducing ``web engineering{''} as a modern branch of our ``software
	engineering{''} curriculum, focusing on the different aspects of
	teaching project management to students of these curricula together
	with the needed tools and process models. After discussing the differences
	of software project management and web project management, we identify
	the main challenges of teaching these management skills to primarily
	technically interested students. Our next focus is on the composition
	of modem software development teams and the changes within these
	teams through the rise of web engineering. We conclude with illustrating
	the transition from document-driven processes found in traditional
	software development towards highly tool-supported processes in agile
	developments, using a document model developed by ourselves for teaching
	software project management.},
  db = {wok},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {maria, kimi},
  timestamp = {2012.12.19},
  unique-id = {ISI:000228210300053}
}

@INPROCEEDINGS{6298113,
  author = {Mazzanti, G.},
  title = {Agile in the Bathtub: Developing and Producing Bathtubs the Agile
	Way},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {197 -203},
  month = {aug.},
  __markedentry = {},
  abstract = {This is a report about the introduction of Agile/Lean methodologies
	at an Italian company producing luxury hydromassage bathtubs and
	showers. Initially focused on product development and portfolio management,
	the Agile/Lean transition has been extended to other departments
	of the company. This has been a significant experience in combining
	Agile and Lean in a non-software context.},
  db = {ieeexplore},
  doi = {10.1109/Agile.2012.27},
  excluded = {Kimi, title},
  excludekimi = {title},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  keywords = {Italian company;agile/lean methodologies;bathtub development;bathtub
	production;luxury hydromassage bathtubs;portfolio management;product
	development;agile manufacturing;lean production;product development;},
  reviewer = {kimi, casper}
}

@INPROCEEDINGS{ISI:000263369000001,
  author = {McAvoy, John and Butler, Tom},
  title = {A Failure to Learn in a Software Development Team: The Unsuccessful
	Introduction of an Agile Method},
  booktitle = {INFORMATION SYSTEMS DEVELOPMENT: CHALLENGES IN PRACTICE, THEORY AND
	EDUCATION, VOLS 1AND 2},
  year = {2009},
  editor = {Barry, C and Conboy, K and Lang, M and Wojtkowski, G and Wojtkowski,
	W},
  pages = {1-13},
  note = {16th International Conference on Information Systems Development,
	Natl Univ Ireland, Cairnes Grad Sch Business, Galway, IRELAND, AUG
	29-31, 2007},
  __markedentry = {[kimi:1]},
  abstract = {This paper presents an investigation of the failures associated with
	the introduction of a new software development methodology in a software
	project team. The failure to adopt the new methodology is seen as
	a failure to learn by the team. This paper posits that learning is
	more than the cognitive process of acquiring a new skill; learning
	also involves changes in behaviours, attitudes and opinions. As methodology
	adoption involves changes to a team's activities, values and norms,
	this study investigates the introduction of an Agile method by a
	software team as a learning experience. Researchers use the concepts
	of single- and double-loop learning to explain how social actors
	learn to (a) perforin tasks efficiently and (b) decide on the best
	task to perform. The theory of triple-loop learning explains how
	a learning process can be ineffective; accordingly, it is employed
	to examine why the introduction of a new methodology was ineffective
	in the team studied. The theory illustrates how power factors influence
	learning. This study focuses on one specific power factor - the power
	inherent in the desire for cohesion and conformity within a team.
	Ineffective decision-making and related actions occur because of
	the desire to conform among group members; this was shown as the
	cause of ineffective learning in the software team. The findings
	illustrate how the values inherent in the Agile methodologies, primarily
	the desire for cohesion within the team, ultimately led to the failure
	of the team to learn.},
  db = {wok},
  doi = {10.1007/978-0-387-68772-8\_1},
  filtercasper = {exclude},
  filtermaria = {exclude},
  isbn = {978-0-387-30403-8},
  owner = {kimi},
  reviewer = {kimi, casper},
  timestamp = {2012.12.19},
  unique-id = {ISI:000263369000001}
}

@INPROCEEDINGS{McAvoy2006a,
  author = {McAvoy, J. and Butler, T.},
  title = {Looking for a place to hide: A study of social loafing in agile teams},
  year = {2006},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:1]},
  abstract = {Social loafing refers to the behaviour of individual members of a
	team who have tendency not to work as hard as they could or should,
	because social groups provide a degree of anonymity such that individual
	team members feel that their poor performance will be hidden by the
	overall output of the team. Agile Software Development philosophy
	espouses the importance of cohesive project teams, the empowerment
	of these teams, and the collective ownership of the code produced
	by the team - social values similar to those of communities of practice.
	This paper posits that one of the unintended consequences of Agile
	Software Development is that it may give rise to social loafing,
	under certain conditions. In order to test this proposition, research
	was carried out on two software development teams over an eight month
	period to determine if the values inherent in Agile Software Development
	could give rise to social loafing The theoretical assumption adopted
	by the authors was that the project team which fully adopted the
	agile approach would exhibit a greater tendency for social loafing,
	in comparison to the other team. The findings of the study indicate,
	however, that the opposite was the case; accordingly, the study's
	findings are interpreted to offer an explanation for this apparent
	paradox.},
  affiliation = {University College Cork, Business Information Systems, Ireland},
  author_keywords = {Agile software development; Groups; Social loafing; Sociological factors;
	Teams},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings of the 14th European Conference on Information Systems,
	ECIS 2006},
  owner = {kimi},
  page_count = {12},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84869406108&partnerID=40&md5=c76ee17243232b049fe5b1d529009416}
}

@ARTICLE{McAvoy2007552,
  author = {McAvoy, J. and Butler, T.},
  title = {The impact of the Abilene Paradox on double-loop learning in an agile
	team},
  journal = {Information and Software Technology},
  year = {2007},
  volume = {49},
  pages = {552-563},
  number = {6},
  note = {cited By (since 1996) 5},
  __markedentry = {[kimi:1]},
  abstract = {This paper presents a qualitative investigation of learning failures
	associated with the introduction of a new software development methodology
	by a project team. This paper illustrates that learning is more than
	the cognitive process of acquiring a new skill; learning also involves
	changes in behaviour and even beliefs. Extreme Programming (XP),
	like other software development methodologies, provides a set of
	values and guidelines as to how software should be developed. As
	these new values and guidelines involve behavioural changes, the
	study investigates the introduction of XP as a new learning experience.
	Researchers use the concepts of single and double-loop learning to
	illustrate how social actors learn to perform tasks effectively and
	to determine the best task to perform. The concept of triple-loop
	learning explains how this learning process can be ineffective, accordingly
	it is employed to examine why the introduction of XP was ineffective
	in the team studied. While XP should ideally foster double-loop learning,
	triple-loop learning can explain why this does not necessarily occur.
	Research illustrates how power factors influence learning among groups
	of individuals; this study focuses on one specific power factor -
	the power inherent in the desire to conform. The Abilene Paradox
	describes how groups can make ineffective decisions that are contrary
	to that which group members personally desire or believe. Ineffective
	decision-making occurs due to the desire to conform among group members;
	this was shown as the cause of ineffective learning in the software
	team studied. This desire to conform originated in how the project
	team cohered as a group, which was, in turn, influenced by the social
	values embraced by XP. © 2007 Elsevier B.V. All rights reserved.},
  affiliation = {Business Information Systems, University College Cork, Ireland},
  author_keywords = {Participant observation; Qualitative approach; Social factors; Triple-loop
	learning; XP adoption},
  db = {scoups},
  document_type = {Article},
  filtercasper = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {maria, kimi},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-34247172607&partnerID=40&md5=bfdd45235e8fdc091e417937b40daa9d}
}

@ARTICLE{McAvoy200953,
  author = {McAvoy, J. and Butler, T.},
  title = {Project post-mortems: Mindless mismanagement of agreement},
  journal = {Journal of Decision Systems},
  year = {2009},
  volume = {18},
  pages = {53-73},
  number = {1},
  note = {cited By (since 1996) 1},
  __markedentry = {[kimi:1]},
  abstract = {Researchers have described how IS adoptions can be mindful or mindless.
	This paper first describes the socio-psychological factors associated
	with mindful or mindless decision making by social actors. A conceptual
	model based on these factors is proposed to study mindful or mindless
	behaviours of software team members in (a) the firm-specific postmortems
	of projects incorporating traditional software development methods
	and (b) the project reviews on the adoption and use of an Agile approach
	to software development, which was introduced to address problems
	with the traditional approach to software development. The setting
	for the project post-mortems is a large US multinational telecommunications
	manufacturer based in Ireland. One significant factor that leads
	to mindless adoption behaviours, and which was identified by this
	study, is the Abilene Paradox. The findings of this paper illustrate
	how ineffective management of agreement (as opposed to disagreement)
	contributes to the existence of this paradox, the consequence of
	which affects the mindfulness of an adoption and review processes.
	© 2009 Lavoisier, Paris.},
  affiliation = {Business Information Systems, O'Rahilly Building, University College
	Cork, Ireland},
  author_keywords = {Abilene paradox; Adoption; Diffusion; Mindful; Mindless; Post-mortem},
  db = {scoups},
  document_type = {Article},
  filtercasper = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {maria, kimi},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-79952063937&partnerID=40&md5=666c0ab56e4288e8b1795f09855cde6d}
}

@INPROCEEDINGS{McAvoy2006,
  author = {McAvoy, J.a and Owens, I.b and Sammon, D.a},
  title = {Towards the development of a simple tool to assist in agile methodology
	adoption decisions: Agile adoption matrix},
  year = {2006},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:3]},
  abstract = {This paper describes the development of a decision support tool, an
	adoption assessment matrix based on critical adoption factors, that
	addresses a need in industry; namely, to improve the overall understanding
	of the constituent parts of agile systems development methodologies.
	It highlights the importance of critical adoption factors to the
	adoption of an agile method and illustrates the usefulness of a decision
	support process to determine the viability of an agile method for
	a specific software project. The paper describes the results of a
	series of workshops (two carried out in commercial software developement
	companies, and one with personnel from the British Minsitry of Defence)
	where the adoption assessment matrix was used to assess the suitability
	of agile methods in software development projects. A major benefit
	of the tool is that it guides discussion, concentrating the debate
	on the critical factors, applied to the individual project. These
	discussions proved to be as valuable as the output of the tool itself.
	The results of these workshops show that an argument can be made
	for the use of and benefit of such a decision support process in
	industry, in supporting the decision to adopt an agile methodology.},
  affiliation = {Business Information Systems, University College Cork, Cork, Ireland;
	Department of Information Systems, Defence Academy of the UK, Cranfield
	University, Shrivenham, Swindon SN6 8LA, United Kingdom},
  author_keywords = {Adoption decision; Agile methodology; Critical adoption factors},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {include},
  filtermaria = {exclude},
  journal = {Proceedings of the 14th European Conference on Information Systems,
	ECIS 2006},
  owner = {kimi},
  page_count = {10},
  reviewer = {maria, kimi},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84869388323&partnerID=40&md5=7c22ca6d2bd6fb8f562508d22d1144ed}
}

@INPROCEEDINGS{McBreen2000423,
  author = {McBreen, P.},
  title = {Applying the lessons of eXtreme programming},
  year = {2000},
  number = {TOOL 34},
  pages = {423-429},
  note = {cited By (since 1996) 1},
  __markedentry = {[kimi:1]},
  abstract = {Although eXtreme Programming has been explained by Kent Beck[1], there
	are many benefits to adopting eXtreme Programming (XP) practices
	in other development processes. The benefits of adopting the complete
	XP approach are outside of the scope of this paper, what is discussed
	here are the lessons that XP offers to other development processes.
	This paper initially discusses the benefits available from adopting
	XP style unit testing on a project, and then moves on to identify
	useful lessons that can be learned from other XP practices. The paper
	concludes by asking questions about the nature of process improvement
	in software development and how we can make our software serve society.},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings of the Conference on Technology of Object-Oriented Languages
	and Systems, TOOLS},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-0034586677&partnerID=40&md5=a6b7ffd5c64089be48660e4fb1ddf499}
}

@ARTICLE{Mccarey2005253,
  author = {Mccarey, F. and Cinnéide, M.Ó. and Kushmerick, N.},
  title = {Rascal: A recommender agent for Agile reuse},
  journal = {Artificial Intelligence Review},
  year = {2005},
  volume = {24},
  pages = {253-276},
  number = {3-4},
  note = {cited By (since 1996) 19},
  __markedentry = {},
  abstract = {As software organisations mature, their repositories of reusable software
	components from previous projects will also grow considerably. Remaining
	conversant with all components in such a repository presents a significant
	challenge to developers. Indeed the retrieval of a particular component
	in this large search space may prove problematic. Further to this,
	the reuse of components developed in an Agile environment is likely
	to be hampered by the existence of little or no support materials.
	We propose to infer the need for a component and proactively recommend
	that component to the developer using a technique which is consistent
	with the principles of Agile methodologies. Our RASCAL recommender
	agent tracks usage histories of a group of developers to recommend
	to an individual developer components that are expected to be needed
	by that developer. Unlike many traditional recommender systems, we
	may recommend items that the developer has actually employed previously.
	We introduce a content-based filtering technique for ordering the
	set of recommended software components and present a comparative
	analysis of applying this technique to a number of collaborative
	filtering algorithms. We also investigate the relationship between
	the number of usage histories collected and recommendation accuracy.
	Our overall results indicate that RASCAL is a very promising tool
	for allowing developers discover reusable components at no additional
	cost. © Springer 2005.},
  affiliation = {School of Computer Science and Informatics, University College Dublin,
	Belfield, Dublin 4, Ireland},
  author_keywords = {Agile processes; Agile reuse; Collaborative filtering; Content-based
	filtering; Recommender agent; Software reuse},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {maria, kimi},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-29144536189&partnerID=40&md5=baccbff88fad9a336475eefd268758bd}
}

@INPROCEEDINGS{1609823,
  author = { Mc Cormick, J.P.},
  title = {Agile phase I - the pragmatic case study of Schneider National},
  booktitle = {Agile Conference, 2005. Proceedings},
  year = {2005},
  pages = { 212 - 213},
  month = {july},
  __markedentry = {[kimi:2]},
  abstract = { Schneider National began the journey toward Agile software development
	last year (2004). After doing some research the company sent three
	representatives to the 2004 conference in Calgary. Using some of
	the learnings gathered from the conference, Schneider began using
	Agile in a pilot mode. Schneider's approach was pragmatic in the
	sense that it took its current three release a year waterfall process
	and made changes in an incremental fashion. The steps included getting
	organizational buyoff for the pilot, forming the pilot team, breaking
	up a release into three 6-week iterations, constructing an open pod
	area for the group, integrating a offshore (on-site and remote site)
	element comprising 50% of the 25 person project team, and as of late
	introducing an offshore testing team strategy. Why is this a neat
	story? Because the first project incorporated delivering 17,000 hours+
	in a 4.5 month time frame... ahead of schedule and under budget with
	a substantial offshore component!.},
  db = {ieeexplore},
  doi = {10.1109/ADC.2005.10},
  filterkimi = {include},
  filtermaria = {include},
  keywords = { Schneider National; agile development; offshore testing team strategy;
	waterfall process; project management; software development management;},
  reviewer = {kimi, casper}
}

@INPROCEEDINGS{McCormick200461,
  author = {McCormick, J.M. and Gerken, P.M. and Barry, K.P. and Sidharta, B.},
  title = {Achieving battlespace awareness in network-centric warfare by integrating
	web and agent technologies},
  year = {2004},
  volume = {5441},
  pages = {61-68},
  note = {cited By (since 1996) 0},
  __markedentry = {},
  abstract = {Transformation of military information systems to a network-centric
	paradigm will remove traditional barriers to interoperability and
	enable dynamic access to information and analysis resources. The
	technical challenges of accomplishing network-centric warfare (NCW)
	require the engineering of agile distributed software components
	imbued with the ability to operate autonomously on behalf of human
	individuals, while maintaining system level integrity, security,
	and performance efficiency on a grand scale. In this paper, we will
	describe how agents provide a critical technology enabler for applying
	emerging commercial technologies, such as web services, into network-centric
	warfare problems. The objective of our research is developing and
	sharing battlespace awareness and understanding. Our agent information
	service manages information collection and dissemination/publishing
	activities on behalf of fusion services in an autonomous, yet controllable
	fashion. Agents improve the scalability and reliability at the system
	of systems level through dynamic selection and exploitation of web
	services based upon needs and capabilities.},
  affiliation = {Lockheed Martin Adv. Technol. Labs., 3 Executive Campus, Cherry Hill,
	NJ 08002, United States},
  author_keywords = {Agents; Battlespace Awareness; Distributed Computing; Network-Centric;
	Warfare; Web Services},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings of SPIE - The International Society for Optical Engineering},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-8844227507&partnerID=40&md5=3a80bf7d74524febb3f7acb8bb9562dc}
}

@ARTICLE{McDowell200717,
  author = {McDowell, S.a and Dourambeis, N.b },
  title = {British telecom experience report: Agile intervention - BT's joining
	the dots events for organizational change},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes
	in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year = {2007},
  volume = {4536 LNCS},
  pages = {17-23},
  note = {cited By (since 1996) 1},
  __markedentry = {},
  abstract = {While British Telecom (BT) has been progressing the adoption of agile
	practices across teams for the last two years, the overall organizational
	transformation has been slow to emerge and a catalyst was needed.
	In November 2006, BT began running a series of one hundred person,
	one and a half day events called Joining the Dots 3, aimed at promoting
	the use of agile throughout the IT organization. The event's practical
	approach of embedding learning through the use of videos and activities
	on agile planning, user stories, customer collaboration and iterative
	delivery into a large scale end-to-end simulation has proven to be
	both fun and an excellent learning tool. Simulation retrospectives
	inside the event echo the learning points and feedback forms have
	confirmed that BT may have succeeded in generating large scale buy-in
	to using agile practices across thousands of people in their delivery
	organization. © Springer-Verlag Berlin Heidelberg 2007.},
  affiliation = {British Telecom; Exoftware},
  author_keywords = {Agile planning; Agile transformation; Collaboration; Estimating; Organizational
	change; Retrospectives; Teamwork; User stories},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {include},
  filterkimi = {include},
  filtermaria = {include},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-38149135112&partnerID=40&md5=ecabb80e088481cb2c244a04d9ce2f14}
}

@INPROCEEDINGS{McFadden201187,
  author = {McFadden, P.a and Yamauchi, S.b },
  title = {Applying agile methodologies to marine implementation projects},
  year = {2011},
  volume = {1},
  pages = {87-92},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:1]},
  abstract = {Advanced marine modeling and design systems and tools can provide
	significant returns on investment in the form of more standardized
	deliverables, more rules-based design automation, and more customization
	to enable process innovation. These benefits can be achieved through
	the adoption of a technology, such as SmartMarine 3D, which offers
	a rule-driven solution for streamlining the design process. Working
	with an organization's in-house experts, familiar with the design
	and production practices, an implementation plan can be created to
	automate the most common modeling practices. Depending on the background
	of the in-house domain experts and/or the technology, design experts
	may require some amount of time and training using the new technology
	before sufficient knowledge and skills can be achieved - ultimately
	slipping the start of the customization efforts, prolonging the implementation
	timeframe, and delaying the point where the return on investment
	begins to generate savings. Since the creation of a rule driven solution
	involves some sort of ``programming{''} , it is logical to look to
	the software development community for techniques and methods to
	do this work in an effective and efficient manner. Utilizing standard
	Agile programming methodologies, teams are created with individuals
	that fulfill roles such as subject matter expert, developer, product
	owner, documentation specialist, and tester. These knowledge resources
	are collocated and work on prioritized backlog items with known business
	values for fixed length cycles with identified Conditions of Satisfaction.
	In this paper, we will discuss the pros and cons of this approach
	and summarize the experience of ``lessons learned{''} through an
	actual implementation project, which includes development of customized
	rules and catalog content for the modeling, detailing, and production
	of marine vessels. ©2011: The Royal Institution of Naval Architects.},
  affiliation = {Intergraph Corporation, United States; Intergraph Corporation, Japan},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filtermaria = {exclude},
  journal = {RINA, Royal Institution of Naval Architects - International Conference
	on Computer Applications in Shipbuilding 2011, Papers},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84864670851&partnerID=40&md5=9d34610ec5a4a473e4ee2707721b3d29}
}

@ARTICLE{1041174,
  author = {McGovern, F.},
  title = {Managing software projects with business-based requirements},
  journal = {IT Professional},
  year = {2002},
  volume = {4},
  pages = { 18 - 23},
  number = {5},
  month = {sep/oct},
  __markedentry = {[kimi:1]},
  db = {ieeexplore},
  doi = {10.1109/MITP.2002.1041174},
  excluded = {Kimi, title},
  filtercasper = {exclude},
  filtermaria = {exclude},
  issn = {1520-9202},
  keywords = { business-based requirements; full process rollout; quality improvements;
	software project management; formal specification; project management;
	software development management;},
  reviewer = {casper, maria}
}

@ARTICLE{5452144,
  author = {McGregor, J.D. and Muthig, D. and Yoshimura, K. and Jensen, P.},
  title = {Guest Editors' Introduction: Successful Software Product Line Practices},
  journal = {Software, IEEE},
  year = {2010},
  volume = {27},
  pages = {16 -21},
  number = {3},
  month = {may-june },
  __markedentry = {},
  abstract = {A software product line is a set of software-intensive systems sharing
	a common, managed set of features that satisfy the specific needs
	of a particular market segment or mission and that are developed
	from a common set of core assets in a prescribed way in place. Organizations
	adopting product development strategies that include a software product
	line have achieved impressive results, reducing product cycle time
	and increasing productivity by an order of magnitude. The software
	product line strategy is a blend of business and technical actions
	that lets an organization satisfy a wide range of customers, gain
	leverage with suppliers, meet the threats of substitute products,
	and deter other companies seeking to enter the market. The strategy
	is robust over a wide range of technologies, domains, and organizations
	of different structures, cultures, and goals. Service-oriented architectures,
	agile development methods, and open source business models have all
	played roles in successful product line organizations.},
  db = {ieeexplore},
  doi = {10.1109/MS.2010.74},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  issn = {0740-7459},
  keywords = {agile development methods;market segment;open source business models;product
	cycle time reduction;product development strategies;service-oriented
	architectures;software product line strategy;software-intensive systems;business
	data processing;product development;software architecture;software
	reusability;},
  reviewer = {casper, maria}
}

@ARTICLE{McHugh2012141,
  author = {McHugh, M. and McCaffery, F. and Casey, V.},
  title = {Barriers to adopting agile practices when developing medical device
	software},
  journal = {Communications in Computer and Information Science},
  year = {2012},
  volume = {290 CCIS},
  pages = {141-147},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:3]},
  abstract = {Agile methodologies such as XP and Scrum are founded upon the four
	values and twelve principles of agile software development. A software
	development project is only considered to be truly agile if these
	values and principles are followed. However, software developed for
	use in medical devices must be regulatory compliant and this can
	make the process of following a single agile methodology such as
	XP difficult to achieve. This paper outlines how we identified the
	barriers to agile adoption in the medical device software domain
	through performing a survey. These barriers include: lack of documentation;
	maintaining traceability; regulatory compliance; lack of up front
	planning and the process of managing multiple releases. Based on
	this research recommendations are also made as to how these barriers
	can be overcome. © 2012 Springer-Verlag.},
  affiliation = {Regulated Software Research Group, Department of Computing and Mathematics,
	Dundalk Institute of Technology and Lero, Dundalk Co., Louth, Ireland},
  author_keywords = {Agile; Barriers; Medical; Plan Driven; Safety Critical; Scrum; XP},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {include},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84862177878&partnerID=40&md5=1051d45b3fe8a2444642007a6479a931}
}

@INPROCEEDINGS{5463341,
  author = {McIntosh, S. and Adams, B. and Hassan, A.E.},
  title = {The evolution of ANT build systems},
  booktitle = {Mining Software Repositories (MSR), 2010 7th IEEE Working Conference
	on},
  year = {2010},
  pages = {42 -51},
  month = {may},
  __markedentry = {},
  db = {ieeexplore},
  doi = {10.1109/MSR.2010.5463341},
  excluded = {Kimi, title},
  excludekimi = {title},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  keywords = {ANT build systems;build system aging processes;executable software;software
	development;software evolution researchers;software maintenance;software
	metrics;static source code artifacts;software maintenance;software
	metrics;source coding;},
  reviewer = {maria, kimi}
}

@INPROCEEDINGS{McKinney2007138,
  author = {McKinney, D. and Denton, L.F.},
  title = {Developing collaborative skills early in the CS curriculum in a laboratory
	environment},
  year = {2007},
  pages = {138-142},
  note = {cited By (since 1996) 0},
  __markedentry = {},
  abstract = {The research on teaching and learning over the past 50 years suggests
	that the early use of collaborative learning leads to higher interest,
	higher retention, and higher academic performance in students. Early
	use of these techniques can also increase the sense of belonging
	for students and can lead to the early development of collaborative
	skills to prepare students for team experiences in subsequent courses
	and future careers. During the weekly lab sessions of a second semester
	introduction to programming course students engaged in collaborative
	learning experiences through team-based problem solving, project
	planning, pair programming, and other agile software development
	practices. Course objectives provided specific goals and criteria
	for assessment relative to these skills. The assessment in the authors'
	prior work identified several problem areas which led to specific
	initiatives to address those problems: (a) instructor-chosen teams,
	(b) early instruction and reflection on team skills, (c) feedback
	on team performance, and (d) the use of an IDE that incorporates
	an automated test-driven development tool. This paper describes the
	implementation and assessment of these efforts. A significant increase
	in student team skills from the middle of the semester to the end
	of the semester was observed. Copyright 2006 ACM.},
  affiliation = {School of Computer and Information Sciences, University of South Alabama,
	Mobile, AL 36688, United States},
  author_keywords = {Active learning; Agile software development; Assessment; Cognitive-affective
	objectives; Collaborative learning; Extreme programming; Feedback;
	Laboratory experiences; Peer evaluation; Retention; Sense of belonging;
	Team skills},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings of the Thirty-Seventh SIGCSE Technical Symposium on Computer
	Science Education},
  owner = {kimi},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-37849028708&partnerID=40&md5=654682c8f1a9b827f5a36ce6f3182f08}
}

@INPROCEEDINGS{6005525,
  author = {Power, K.},
  title = {The Agile Office: Experience Report from Cisco's Unified Communications
	Business Unit},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {201 -208},
  month = {aug.},
  __markedentry = {[kimi:3]},
  abstract = {Similar to the way a Project Management Office (PMO) defines standards
	for project management within the organization, an Agile Office governs
	the organization's ongoing agile adoption and continuous improvement
	through agile practices and is responsible for the successful ongoing
	adoption of agile practices throughout the organization. Agile transition
	takes time, it is not a discrete event. When transitioning to agility
	it is important to put in place structures that will ensure that
	agile survives long after the initial transition period. This paper
	describes the experiences of Cisco's Unified Communications Business
	Unit in establishing an Agile Office. It describes the history behind
	establishing the Agile Office, the governance model, where it fits
	in the organization structure, engagement model, primary activities,
	challenges faced, and the stakeholders with whom it operates.},
  db = {ieeexplore},
  doi = {10.1109/AGILE.2011.7},
  filtercasper = {exclude},
  filterkimi = {include},
  filtermaria = {include},
  keywords = {Cisco;agile office;engagement model;project management office;unified
	communications business unit;professional communication;project management;software
	development management;},
  reviewer = {maria, kimi}
}

@INPROCEEDINGS{ISI:000259996000051,
  author = {Prior, Paul and Keenan, Frank},
  title = {Requirements Management in a Distributed Agile Environment},
  booktitle = {PROCEEDINGS OF WORLD ACADEMY OF SCIENCE, ENGINEERING AND TECHNOLOGY,
	VOL 4},
  year = {2005},
  editor = {Ardil, C},
  volume = {4},
  series = {Proceedings of World Academy of Science Engineering and Technology},
  pages = {204-207},
  note = {Conference of the World-Academy-of-Science-Engineering-and-Technology,
	New York, NY, FEB 25-27, 2005},
  __markedentry = {[kimi:1]},
  abstract = {The importance of good requirements engineering is well documented.
	Agile practices, promoting collaboration and communications, facilitate
	the elicitation and management of volatile requirements. However,
	current Agile practices work in a well-defined environment. It is
	necessary to have a co-located customer. With distributed development
	it is not always possible to realize this co-location. In this environment
	a suitable process, possibly supported by tools, is required to support
	changing requirements. This paper introduces the issues of concern
	when managing requirements in a distributed environment and describes
	work done at the Software Technology Research Centre as part of the
	NOMAD project.},
  db = {wok},
  filtercasper = {exclude},
  filtermaria = {exclude},
  issn = {1307-6884},
  owner = {kimi},
  reviewer = {maria, kimi},
  timestamp = {2012.12.19},
  unique-id = {ISI:000259996000051}
}

@INPROCEEDINGS{6063158,
  author = {Prochazka, J. and Kokott, M. and Chmelar, M. and Krchnak, J.},
  title = {Keeping the Spin -- From Idea to Cash in 6 Weeks: Success Story of
	Agile/Lean Transformation},
  booktitle = {Global Software Engineering (ICGSE), 2011 6th IEEE International
	Conference on},
  year = {2011},
  pages = {124 -130},
  month = {aug.},
  __markedentry = {[kimi:2]},
  abstract = {Lean and Agile courses we provided to our unit in Netherlands encouraged
	our colleagues to start transformation of their business (IT Service
	provisioning). They decided to start with a distributed pilot project
	(including Indian delivery site) and invited us to support the change.
	In six weeks we managed to implement basic Agile practices. This
	increased motivation of people for continuous improvement and led
	to changes to working, staffing and contract models. This all enabled
	more flexible value delivery to customer. We conducted very rapid
	and intensive Agile Crash Course (on-job learning by doing with full-time
	support by skilled coaches) based on principles of Lean Software
	Development. We measured the progress using business driven approach
	(inspired by MCIF). In this presentation we would like to share the
	story, the approach (improving the whole value chain together with
	the customer, following Lean principles, respecting natural human
	behavior) and the challenges.},
  db = {ieeexplore},
  doi = {10.1109/ICGSE.2011.19},
  filterkimi = {include},
  filtermaria = {include},
  keywords = {IT service provisioning;Indian delivery site;agile crash course;agile-lean
	transformation;business;continuous improvement;contract model;distributed
	pilot project;flexible value delivery;lean software development;on-job
	learning;staffing;continuous improvement;information technology;project
	management;software development management;},
  reviewer = {casper, maria}
}

@ARTICLE{Procter2011197,
  author = {Procter, R.a and Rouncefield, M.b and Poschen, M.a and Lin, Y.c and
	Voss, A.d },
  title = {Agile project management: A case study of a Virtual Research Environment
	development project},
  journal = {Computer Supported Cooperative Work: CSCW: An International Journal},
  year = {2011},
  volume = {20},
  pages = {197-225},
  number = {3},
  note = {cited By (since 1996) 1},
  __markedentry = {},
  abstract = {In this paper we use a case study of a project to create a Web 2.0-based,
	Virtual Research Environment (VRE) for researchers to share digital
	resources in order to reflect on the principles and practices for
	embedding eResearch applications within user communities. In particular,
	we focus on the software development methodologies and project management
	techniques adopted by the project team in order to ensure that the
	project remained responsive to changing user requirements without
	compromising their capacity to keep the project 'on track', i.e.
	meeting the goals declared in the project proposal within budget
	and on time. Drawing on ethnographic fieldwork, we describe how the
	project team, whose members are distributed across multiple sites
	(and often mobile), exploit a repertoire of coordination mechanisms,
	communication modes and tools, artefacts and structuring devices
	as they seek to establish the orderly running of the project while
	following an agile, user-centred development approach. © Springer
	2011.},
  affiliation = {Manchester eResearch Centre, University of Manchester, Arthur Lewis
	Building, Manchester M13 9PL, United Kingdom; School of Computing
	and Communications, Lancaster University, Lancaster, United Kingdom;
	School of Media, Music and Performance, University of Salford, Salford,
	United Kingdom; School of Computer Science, University of St Andrews,
	St Andrews, United Kingdom},
  author_keywords = {Agile software project management; EResearch; User engagement; Virtual
	Research Environment; Web 2.0},
  db = {scoups},
  document_type = {Article},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-80955177561&partnerID=40&md5=fe8ea5665f59fcd5dd9998e6deb8230e}
}

@INPROCEEDINGS{6298112,
  author = {Prokhorenko, S.},
  title = {Skiing and Boxing: Coaching Product and Enterprise Teams},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {191 -196},
  month = {aug.},
  __markedentry = {[kimi:2]},
  abstract = {Successful Agile transitions depend on a coaching approach just as
	much as the development of a good sports team. One is not going to
	assign the same exercise programs to a pro skier and a boxer; the
	same applies to different software development teams. In this study
	we summarize experiences from two Agile transformation projects,
	a travel website and investment bank risk management software. We
	discuss common points and distinctive features in requirements management,
	innovations, customer collaboration and team motivation.},
  db = {ieeexplore},
  doi = {10.1109/Agile.2012.30},
  filterkimi = {include},
  filtermaria = {include},
  keywords = {agile transformation;agile transitions;coaching product;customer collaboration;enterprise
	teams;innovations;investment bank risk management software;requirements
	management;team motivation;travel Website;Web sites;human resource
	management;innovation management;investment;risk management;software
	prototyping;team working;},
  reviewer = {maria, kimi}
}

@INPROCEEDINGS{1667593,
  author = {Puleio, M.},
  title = {How not to do agile testing},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {7 pp. -314},
  month = {july},
  __markedentry = {[kimi:2]},
  abstract = {When our team adopted extreme programming and Scrum, there were a
	number of challenges. Integrating an agile team in a ``traditional{''}
	organization created friction and conflict within the team and with
	management. The team consisted of volunteers new to agile practices.
	We had difficulties with planning, estimation, task breakdown, managing
	requirements and working together in a collocated space. However,
	the biggest challenge the team encountered was not in any of these
	other areas, but in one that most of the team figured was simple:
	testing. This paper describes how difficult it was to actually get
	the various testing practices in place and functioning properly.
	In particular, the author discusses challenges we faced in coming
	to a common understanding of the practices, estimating testing effort,
	allocating the time required to do automated tests in a feature-driven
	culture, and getting a team of diverse individuals to understand
	how to apply principles that sound great but are challenging to implement},
  db = {ieeexplore},
  doi = {10.1109/AGILE.2006.34},
  filtercasper = {exclude},
  filterkimi = {include},
  filtermaria = {exclude},
  keywords = {Scrum;agile practices;agile team;agile testing;automated tests;extreme
	programming;DP management;program testing;project management;software
	development management;team working;},
  reviewer = {casper, maria}
}

@INPROCEEDINGS{Pun2003639,
  author = {Pun, K.F.a and Ellis, R.a and Chin, K.S.b },
  title = {Adopting action-based teaching in universities: A project management
	perspective},
  year = {2003},
  pages = {639-644},
  note = {cited By (since 1996) 0},
  __markedentry = {},
  abstract = {This paper presents the design and implementation of an integrative
	action-based approach to teach an undergraduate course in project
	management at the University of the West Indies, Trinidad. The course
	incorporates formal lectures, tutorials, and a 'Build a Tower-II'
	workshop. It stresses the action learning, teamwork, group decision-making
	and process-oriented evaluation. The action-based approach provides
	a venue of accelerating learning where enables students to handle
	dynamic problem situations more effectively. The course has been
	implemented with encouraging results in student learning and development.
	Evidence shows that the action-based teaching is one of effective
	means other than the traditional classroom teaching in universities.},
  affiliation = {Dept. of Mech. and Mfg. Eng., University of the West Indies, St Augustine
	Campus, Trinidad and Tobago; Dept. of Mfg. Eng. and Eng. Mgmt., City
	University of Hong Kong, Kowloon, Hong Kong},
  author_keywords = {Action learning; Action-based teaching; Project management},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings of the International Conference on Agile Manufacturing,
	Advances in Agile Manufacturing, ICAM 2003},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-1842558525&partnerID=40&md5=34ac3f00d9dcb4d03a765ed1ff247112}
}

@INPROCEEDINGS{6285001,
  author = {Qahtani, A.M. and Wills, G.B. and Gravell, A.M.},
  title = {Toward a framework for the development and specialisation of product
	software across organisational boundaries},
  booktitle = {Information Society (i-Society), 2012 International Conference on},
  year = {2012},
  pages = {391 -395},
  month = {june},
  __markedentry = {},
  abstract = {Organisational and cultural boundaries are two of the main important
	aspects of the software development process for distributed customers.
	Many organisations use traditional approaches, such as the Waterfall
	model, to develop software products for different customers. Agile
	software development has departed from traditional approaches, such
	as the Waterfall model. Much research has been conducted on adopting
	agile software development for either distributed or collocated projects.
	However, little research has discussed organisational boundaries
	between developers who use an agile software development approach
	and their customers. The purpose of this paper is to introduce agile
	software development to those organisations that develop software
	products for different distributed customers and also to study the
	potential impact of introducing Agile development across those organisational
	boundaries. We proposed a framework for developing software across
	organisational boundaries. This would ultimately address and accommodate
	key factors in software development across organisational boundaries
	using an agile development approach. This research will help the
	development society and serve as a guide for project managers, developers,
	stakeholders, and users to understand agile software development
	and the impact of adopting an Agile approach across organisational
	and cultural boundaries in their projects.},
  db = {ieeexplore},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  keywords = {agile software development;cultural boundaries;developers;distributed
	customers;organisational boundaries;product software development;product
	software specialisation;project managers;stakeholders;waterfall model;cultural
	aspects;organisational aspects;software prototyping;},
  reviewer = {maria, kimi}
}

@INPROCEEDINGS{Qin2008250,
  author = {Qin, Y. and Zhang, Y. and Jiang, S.},
  title = {Research on agile innovation of modern service company based on e-learning},
  year = {2008},
  volume = {5},
  pages = {250-256},
  note = {cited By (since 1996) 0},
  __markedentry = {},
  abstract = {Innovation is the source of endurable development for service companies,and
	now some developed European and American countries put emphasis on
	the research of service innovation. In the background of rapid development
	of service industry and the economy globalizing, domestic service
	companies are facing turbulent and chaotic competition environment.
	Therefore, widely using E-learning, constructing a learning organization,
	and rapid, agile and flexible innovation are very important for the
	endurabledevelopment of service companies. After reading related
	articles, the author points out the major problems of present research,
	introduces the basic definition of E-learning and the process of
	agile innovation, analyzes the driving factors for the transition
	of agile innovationand its working mechanism, and reveals through
	demonstrations the important effects E-learning makes on promoting
	the ability of learning of service companies and agile innovation
	of its employees. © 2008 IEEE.},
  affiliation = {Wuhan University of Technology, Wuhan, 43007},
  art_number = {4722890},
  author_keywords = {Agile innovation; E-learning; Learning Organization},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings - International Conference on Computer Science and Software
	Engineering, CSSE 2008},
  owner = {kimi},
  reviewer = {maria, kimi},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-79951472727&partnerID=40&md5=9404740851565ddc1b25fcc68f8ade86}
}

@INPROCEEDINGS{6342012,
  author = {Chen Qing and Yong Zhong},
  title = {A Problem-Frame-Based Approach for Component-Oriented Development},
  booktitle = {Engineering and Technology (S-CET), 2012 Spring Congress on},
  year = {2012},
  pages = {1 -4},
  month = {may},
  __markedentry = {},
  abstract = {The rapid development of internet has brought a series of challenges
	for traditional software theories, models, approaches and technologies.
	An agile software engineering method is thought to be imminent. Components
	designed for reuse is expected as a way to resolve these problems.
	Some methods provide a top-down vision to direct the component-oriented
	development process. But the gap between initial software design
	and final implementation prevents it from playing a fundamental role
	in the process. On the other hand, a bottom-up approach which are
	widely used such as J2EE/EJB, COM/COM++, CORBA/CCM are also proved
	have some shortcomings. In this paper, Problem-Frame-Based Approach
	(PFBA), which provides a way of relating software requirements and
	development, is adopt to solve these problems. PFBA is a new way
	of looking at how to develop software, helps the developer to focus
	on the problem itself, and uses Qi4j toolkit to support a component-oriented
	development process.},
  db = {ieeexplore},
  doi = {10.1109/SCET.2012.6342012},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  keywords = {CCM;COM++;CORBA;EJB;Internet;J2EE;PFBA;Qi4j toolkit;agile software
	engineering method;bottom-up approach;component-oriented development
	process;problem-frame-based approach;software design;software development;software
	requirements;Internet;object-oriented programming;software prototyping;software
	reusability;},
  reviewer = {kimi, casper}
}

@INPROCEEDINGS{5369637,
  author = {Lili Qu and Yan Chen and Ming Yang},
  title = {The Coordination and Integration of Agile Supply Chain Based on Service-oriented
	Technology},
  booktitle = {Intelligent Information Technology Application, 2009. IITA 2009.
	Third International Symposium on},
  year = {2009},
  volume = {1},
  pages = {351 -354},
  month = {nov.},
  __markedentry = {},
  db = {ieeexplore},
  doi = {10.1109/IITA.2009.94},
  excluded = {Kimi, title},
  excludekimi = {title},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  keywords = {SOA;agile supply chain;automatic information processing;business process
	dynamic composition;heterogeneous enterprise application systems
	integration;next generation Web technology;semantic Web services;service-oriented
	technology;supply chain ontology;Web services;ontologies (artificial
	intelligence);semantic Web;software architecture;software prototyping;supply
	chain management;},
  reviewer = {maria, kimi}
}

@ARTICLE{Qu20101355,
  author = {Qu, X.a b and Dai, M.b and Li, Z.b },
  title = {The realization of design of agile commerce based on web service},
  journal = {Applied Mechanics and Materials},
  year = {2010},
  volume = {34-35},
  pages = {1355-1359},
  note = {cited By (since 1996) 0},
  __markedentry = {},
  abstract = {The definition of agile commerce is introduced, and the earlier emergence
	of e-commerce technology, such as EDI, web EDI, contents server,
	application Server, EAI(Enterprise Application Integration) are presented.
	The advantages of web service are discussed; moreover, based on the
	web service, the system of agile commerce based on web service is
	design. Finally, the running interface and core code are shown. ©
	(2010) Trans Tech Publications.},
  affiliation = {School of Computer Science and Engineering, South China University
	of Technology, Guangzhou, 510641, China; School of Computer and Communication,
	Hunan Institute of Engineering, Xiangtan, 411101, China},
  author_keywords = {Agile commerce; Design; Web service},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {maria, kimi},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-78650909519&partnerID=40&md5=1a6c1af6e4a255588f1155afa46b3153}
}

@INPROCEEDINGS{Quan2011355,
  author = {Quan, W. and Xu, L. and Ou, Y.},
  title = {Design and realization of a high-performance integrated attitude
	determination system and hybrid simulation},
  year = {2011},
  pages = {355-360},
  note = {cited By (since 1996) 0},
  __markedentry = {},
  abstract = {A high-performance integrated attitude determination system based
	on multi-sensor is proposed and implemented, which is suitable for
	high resolution of ground stabiLity and agile mobile observation
	of the new generation earth observation micro-satelLites. This system
	includes the sensitive subsystem, the signal collecting and preprocessing
	subsystem and the comprehensive processing subsystem. The sensitive
	subsystem is integrated by four types of sensitive components sub-software,
	which include the star sensitive probe, the Sun sensitive probe,
	the fiber-optic gyroscope and the magnetic probe. The signal collecting
	and preprocessing subsystem, implemented by the FPGA module and its
	periphery cirCuit, receives output data from the four types of sensitive
	probe in parallel, and accompLish the data smoothing and preprocessing.
	According to the SunLight information, starLight information, inertial
	information and information based on magnetic after they are smoothness
	and pretreatment, the comprehensive processing subsystem, with ARM
	module as the core, adopts the combination attitude determination
	method based on the ant colony particle filter algorithm to reaLize
	the high-performance attitude determination of the system. Aiming
	at the integration needs of micro-satelLites, a kind of multi-sensor
	integrated attitude determination system structure of small volume,
	Light weight, high level of integration, high reLiabiLity is designed.
	Finally, tests and experiments based on the integrated attitude determination
	system were conducted, which meet the design requirements. © 2011
	IEEE.},
  affiliation = {Beijing University of Aeronautics and Astronautics, Beijing, 100191,
	China},
  art_number = {6052025},
  author_keywords = {Ant Colony Particle Filter Algorithm; Integrated Attitude Determination
	System; Multi-sensor},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings of the 2011 2nd International Conference on Digital Manufacturing
	and Automation, ICDMA 2011},
  owner = {kimi},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-80855127474&partnerID=40&md5=75d03f833d9308da7c9f8c11e377ddc7}
}

@INPROCEEDINGS{QuirceGarcía2008,
  author = {Quirce García, J.},
  title = {Goce platform OBSW ISVV test campaign - Blending demanding standards
	with agility},
  year = {2008},
  number = {665 SP},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:1]},
  abstract = {Another ESA ISVV campaign has concluded, in this case for the GOCE
	OBSW. This paper focuses on the ISVV testing activities: the chosen
	overall strategy adopted for testing, the tactical decisions on the
	ground, the problems found, solutions implemented and an evaluation
	of the obtained results. In particular it is described how an agile-like
	software development approach for the development and exploitation
	of the testing facility has been implemented. It concludes with some
	reflections and suggestions for effective ISVV testing activities
	in the future.},
  affiliation = {DEIMOS Space, Edificio FiteniVI, 2-2, Ronda de Poniente, 19, 28760
	Tres Cantos, Madrid, Spain},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filtermaria = {exclude},
  journal = {European Space Agency, (Special Publication) ESA SP},
  owner = {kimi},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-56349167596&partnerID=40&md5=ad796a2f39600a9e6cfea30c894aca61}
}

@ARTICLE{QuirceGarcía2011457,
  author = {Quirce García, J.},
  title = {A study on PDAs for onboard applications and technologies and methodologies},
  journal = {Personal and Ubiquitous Computing},
  year = {2011},
  volume = {15},
  pages = {457-478},
  number = {5},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:1]},
  abstract = {In 2005, the European Space Agency carried out a study intended to
	clarify the use of PDAs for onboard space operations. Being this
	a rather new application domain due to the introduction of uncommon
	technology onboard, a need for feasibility clarification was perceived.
	The study narrowed its unbounded technological dimension by focusing
	on Java technologies. Furthermore, at a software engineering level
	an ``agile{''} approach was chosen for evaluation because of the
	high degree of user interaction and their ability to cope with general
	requirement changes like those resulting from the uncertainty about
	the actual features and quality of specific PDA platforms and COTS.
	Two studies were performed in parallel with the same objectives but
	obtaining different solutions. Suitable ``agile-like{''} approaches
	compatible with space software standards were defined and tried.
	A space crew representative was involved from the early phases of
	the studies, and a final evaluation exercise at the European Astronaut
	Centre training facilities was performed. Feedback on the suitability
	of the technologies and the MMI design choices were obtained together
	with other unexpected lessons. The paper is concluded with an enumeration
	of lessons learnt and hypotheses about ``agile{''} approaches of
	interest for the software engineering community. © 2010 Springer-Verlag
	London Limited.},
  affiliation = {DEIMOS Space S.L.U., Edificio Fiteni VI, Ronda de Poniente 19, 28760
	Tres Cantos, Madrid, Spain},
  author_keywords = {Agile development approaches; COTS; Human spaceflight in-vehicle operations;
	Java Micro Edition (J2ME); PDAs; Physically constrained MMIs},
  db = {scoups},
  document_type = {Article},
  filtercasper = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-79958012122&partnerID=40&md5=b10757344bfad018cbae27ef0be6b828}
}

@INPROCEEDINGS{ISI:000249654000077,
  author = {Qumer, Asif and Henderson-Sellers, Brian},
  title = {Construction of an agile software product-enhancement process by
	using an agile software solution framework (ASSF) and situational
	method engineering},
  booktitle = {COMPSAC 2007: THE THIRTY-FIRST ANNUAL INTERNATIONAL COMPUTER SOFTWARE
	AND APPLICATIONS CONFERENCE, VOL I, PROCEEDINGS},
  year = {2007},
  series = {Proceedings International Computer Software \& Applications Conference},
  pages = {539-542},
  organization = {IEEE Comp Soc; IEEE; CPS},
  note = {31st Annual International Computer Software and Applications Conference,
	Beijing, PEOPLES R CHINA, JUL 23-27, 2007},
  __markedentry = {[kimi:2]},
  abstract = {Introducing a change in any software development organization is challenging;
	as this paper demonstrates by means of a case study for the adoption
	of agile practices in a large software development organization.
	The case study research findings indicate that a situational method
	engineering approach together with an agile software solution framework
	(ASSF) can be used to create a feasible and usable hybrid software
	development method by combining agile practices and formal practices
	for a particular situation in large software development organizations.},
  db = {wok},
  filtermaria = {include},
  isbn = {978-0-7695-2870-0},
  issn = {0730-3157},
  owner = {kimi},
  reviewer = {kimi, casper},
  timestamp = {2012.12.19},
  unique-id = {ISI:000249654000077}
}

@INPROCEEDINGS{Qumer2006,
  author = {Qumer, A. and Henderson-Sellers, B.},
  title = {A framework to support non-fragile agile agent-oriented software
	development},
  year = {2006},
  note = {cited By (since 1996) 0},
  __markedentry = {},
  abstract = {Agile software development methods support mainly object-oriented,
	feature-oriented and component-oriented software development and
	do not address agent-oriented and aspect-oriented software development.
	The concepts of agents and objects are in many ways dissimilar; and
	an object-oriented approach is not immediately suitable for the development
	of a multiagent system. In our current research, we extend agile
	software development methods originating primarily in object-oriented
	technology to support agent-orientation in the context of the development
	of multiagent systems. This research paper introduces a new agile
	agent-oriented framework to create or tailor situation-specific non-fragile
	agile agent-oriented software development processes (using a method
	engineering approach) to support multi-agent software development.},
  affiliation = {Faculty of Information Technology, University of Technology, Australia},
  author_keywords = {Agent-oriented methods; Agile methods; Method engineering},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings of 5th International Conference on New Trends in Software
	Methodologies, Tools and Techniques, SoMeT_06},
  owner = {kimi},
  page_count = {17},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84860280503&partnerID=40&md5=3f355655bd8641e0150f369a0cde27d8}
}

@INPROCEEDINGS{Qumer2006a,
  author = {Qumer, A. and Henderson-Sellers, B.},
  title = {Comparative evaluation of XP and scrum using the 4d analytical tool
	(4-DAT)},
  year = {2006},
  note = {cited By (since 1996) 9},
  __markedentry = {[kimi:1]},
  abstract = {The emergence of agile software development methods provides a contribution
	to contemporary software engineering practices. Agile methods have
	several benefits over traditional plan-based methods, in particular
	their ability to handle projects where requirements are not fixed.
	In the last few years, a number of agile software development methods
	have been developed but a detailed evaluation (which is essential)
	of these methods is not available. This paper presents a detailed
	comparative analysis of two well known agile methods (XP and Scrum),
	using the previously published 4- Dimensional Analytical Tool (4-DAT),
	based on four characterization perspectives: those of scope, agility,
	agile values and software process. A report generated with the help
	of 4-DAT will assist organizations in making decisions about the
	selection or adoption of an agile method.},
  affiliation = {Faculty of Information Technology, University of Technology, Sydney,
	NSW, Australia},
  author_keywords = {Agile methods; Software development methodologies},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings of the European and Mediterranean Conference on Information
	Systems, EMCIS 2006},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-35148896220&partnerID=40&md5=4632479d3c856e180c735d749dd42b0e}
}

@INPROCEEDINGS{Qumer2007,
  author = {Qumer, A. and Henderson-Sellers, B.},
  title = {ASOP: An agile service-oriented process},
  year = {2007},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:1]},
  abstract = {The increasing prevalence of service-oriented architecture (SOA) has
	introduced another layer of abstraction (service-oriented) on top
	of already well-known object-oriented and component-oriented layers
	of abstractions. However, it has been found that the current traditional
	phase-based approach towards the development of SOA-based applications,
	contrarily, lacks agility, which mitigates against the needed ability
	to quickly respond to changes in business processes. Therefore, here,
	we suggest an agile approach to implement a flexible SOA. This paper,
	based on our industrial experience and case studies, presents the
	agile service-oriented process (ASOP) that had been constructed by
	using the agile software solution framework (ASSF), agile toolkit
	(ATK), situational method engineering (SME) and agile adoption and
	improvement model (AAIM) for the development of one of our industry
	(case study) service-oriented e-health project.},
  affiliation = {Faculty of Information Technology, University of Technology, Australia},
  author_keywords = {Agile methods; Method engineering; Service-oriented architecture},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filtermaria = {exclude},
  journal = {SoMeT_07 - The 6th International Conference on Software Methodologies,
	Tools and Techniques},
  owner = {kimi},
  page_count = {10},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84858626162&partnerID=40&md5=3cf763a1fc983efe6098484fe25f7ed7}
}

@ARTICLE{Qumer20081899,
  author = {Qumer, A. and Henderson-Sellers, B.},
  title = {A framework to support the evaluation, adoption and improvement of
	agile methods in practice},
  journal = {Journal of Systems and Software},
  year = {2008},
  volume = {81},
  pages = {1899-1919},
  number = {11},
  note = {cited By (since 1996) 22},
  __markedentry = {[kimi:2]},
  abstract = {Agile methods are often seen as providing ways to avoid overheads
	typically perceived as being imposed by traditional software development
	environments. However, few organizations are psychologically or technically
	able to take on an agile approach rapidly and effectively. Here,
	we describe a number of approaches to assist in such a transition.
	The Agile Software Solution Framework (ASSF) provides an overall
	context for the exploration of agile methods, knowledge and governance
	and contains an Agile Toolkit for quantifying part of the agile process.
	These link to the business aspects of software development so that
	the business value and agile process are well aligned. Finally, we
	describe how these theories are applied in practice with two industry
	case studies using the Agile Adoption and Improvement Model (AAIM).
	© 2008 Elsevier Inc. All rights reserved.},
  affiliation = {Faculty of Information Technology, University of Technology, Sydney,
	P.O. Box 123, Broadway, 2007, Australia},
  author_keywords = {Agile methodologies; Framework; Industry case studies; Transition
	to agile},
  db = {scoups},
  document_type = {Article},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-52049117170&partnerID=40&md5=c3c317e01a2025c7d56a9c4d22df1b4b}
}

@INPROCEEDINGS{Qumer2010167,
  author = {Qumer, A. and Henderson-Sellers, B.},
  title = {Framework as software service (fass) an agile e-toolkit to support
	agile method tailoring},
  year = {2010},
  volume = {2},
  pages = {167-172},
  note = {cited By (since 1996) 0},
  __markedentry = {},
  abstract = {In a real software application development environment, a pre-defined
	or fixed methodology, whether plan-based or agile, is unlikely to
	be successfully adopted off-the-shelf. Agile methods have recognised
	that a method should be tailored to each situation. The purpose of
	this paper is to present an agile e-toolkit software service to facilitate
	the tailoring of agile processes in the overall context of agile
	method adoption and improvement. The agile e-toolkit is a web-based
	tool to store and manage agile practices extracted from various agile
	methods and frameworks. The core component of the e-toolkit is the
	agile knowledge-base or repository. The agile knowledge-base contains
	agile process fragments. Agile consultants or teams can then use
	agile process fragments stored in the agile knowledge-base for the
	tailoring of situation-specific agile processes by using a situational
	method engineering approach. The e-toolkit software service has been
	implemented using a service-oriented cloud computing technology platform
	(Software as a Service-SaaS). The agile e-toolkit specifications
	and software application details have been summarized in this paper.},
  affiliation = {Faculty of Engineering and IT, University of Technology, Boradway,
	Sydney, Australia},
  author_keywords = {Agile Method Tailoring; Method Engineering; Software as a Service},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  journal = {ICSOFT 2010 - Proceedings of the 5th International Conference on
	Software and Data Technologies},
  owner = {kimi},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-78751503363&partnerID=40&md5=e5ea915e241ff0b7b72dd0941a6dc741}
}

@INPROCEEDINGS{Qumer2010213,
  author = {Qumer, A. and Henderson-Sellers, B.},
  title = {Empirical evaluation of the agile process lifecycle management framework},
  year = {2010},
  pages = {213-222},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:2]},
  abstract = {While many organisations are interested in adopting agile methods
	suitable to their local circumstances, there is little guidance available
	on how to do so. To address this important issue, we have developed
	an agile software process lifecycle management framework (APLM).
	The APLM framework is intended for use by agile coaches, managers
	and consultants to facilitate the integration of agile practices
	into both software project development environments. This paper presents
	the outcomes of an empirical evaluation of the APLM framework that
	has been conducted by involving a practitioners' group composed of
	fourteen experienced agile experts from industry. The main objective
	of this empirical study is to determine to what extent each component
	of the agile process lifecycle management (APLM) framework is relevant,
	valuable and sufficient to achieve its purpose from an industry practitioner's
	perspective. © 2010 IEEE.},
  affiliation = {Faculty of Engineering and Information Technology, University of Technology,
	Sydney, Australia},
  art_number = {5507381},
  author_keywords = {Agile method adoption and improvement; Agile process lifecycle management},
  db = {scoups},
  document_type = {Conference Paper},
  filtermaria = {exclude},
  journal = {2010 4th International Conference on Research Challenges in Information
	Science - Proceedings, RCIS 2010},
  owner = {kimi},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-77957306420&partnerID=40&md5=3b5445222943d185d6972ccb76e9a8af}
}

@INPROCEEDINGS{Qumer200721,
  author = {Qumer, A. and Henderson-Sellers, B. and McBride, T.},
  title = {Agile adoption and improvement model},
  year = {2007},
  pages = {21-29},
  note = {cited By (since 1996) 1},
  __markedentry = {[kimi:3]},
  abstract = {Agile software development methods focus on the rapid and iterative
	delivery of a software product in small increments. Over the last
	decade, the software industry has shown a substantial interest in
	agile practices but there is no standard guiding vision model or
	framework to adopt and then use to assess or improve the agile method
	in a software development organization; indeed, the absence of a
	guiding vision model could result in the failure of the agile implementation.
	The purpose of this paper is to present an Agile Adoption and Improvement
	Model (AAIM) for the adoption, assessment and improvement of an agile
	software development process. We have analysed the results of several
	agile software process assessments, industrial case studies on the
	adoption of an agile approach and feedback from both researchers
	and the software industry for the construction of the AAIM. The AAIM
	can be used as a gradual road map for the adoption of an agile approach
	so that the required agile level can be achieved and improved over
	a period of time. The AAIM has been organized in three agile blocks,
	six agile stages (AS) and an embedded agility measurement model (to
	quantitatively measure the degree of agility). In AAIM, each stage
	specifies goals that must be achieved to attain a particular business
	value through the use of an agile software development approach.},
  affiliation = {University of Technology, Australia},
  author_keywords = {Agile measurement model; Agile methods/methodology},
  db = {scoups},
  document_type = {Conference Paper},
  filterkimi = {include},
  filtermaria = {exclude},
  journal = {Proceedings of the European and Mediterranean Conference on Information
	Systems, EMCIS 2007},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-77955464821&partnerID=40&md5=8d76de008beeba2cc63be7214714225d}
}

@INPROCEEDINGS{ISI:000267795400012,
  author = {Racheva, Zornitza and Daneva, Maya and Sikkel, Klaas},
  title = {Value Creation by Agile Projects: Methodology or Mystery?},
  booktitle = {PRODUCT-FOCUSED SOFTWARE PROCESS IMPROVEMENT, PROCEEDINGS},
  year = {2009},
  editor = {Bomarius, F and Oivo, M and Jaring, P and Abrahamsson, P},
  volume = {32},
  series = {Lecture Notes in Business Information Processing},
  pages = {141-155},
  organization = {VTT Tech Res Ctr; Univ Oulu; Fraunhofer IESE; Kaiserslautern; Univ
	Helsinki; City Oulu},
  note = {10th International Conference on Product-Focused Software Process
	Improvement, Oulu, FINLAND, JUN 15-17, 2009},
  __markedentry = {[kimi:1]},
  abstract = {Business value is a key concept in agile software development approaches.
	This paper presents results of a systematic review of literature
	on how business value is created by agile projects. We found that
	with very few exceptions, most published studies take the concept
	of business value for granted and do not state what it means in general
	as well as in the specific study context. We could find no study
	which clearly indicates how exactly individual agile practices or
	groups of those create value and keep accumulating it over time.
	The key implication for research is that we have an incentive to
	pursue the study of value creation in agile project by deploying
	empirical research methods.},
  db = {wok},
  filtercasper = {exclude},
  filtermaria = {exclude},
  isbn = {978-3-642-02151-0},
  issn = {1865-1348},
  owner = {kimi},
  reviewer = {maria, kimi},
  timestamp = {2012.12.19},
  unique-id = {ISI:000267795400012}
}

@INPROCEEDINGS{4625088,
  author = {Varchavsky, M. and Guerra, E. and Fernandes, C.},
  title = {Access Control Solution for Command and Control Systems Integration},
  booktitle = {Computational Science and Engineering Workshops, 2008. CSEWORKSHOPS
	'08. 11th IEEE International Conference on},
  year = {2008},
  pages = {361 -366},
  month = {july},
  __markedentry = {},
  db = {ieeexplore},
  doi = {10.1109/CSEW.2008.35},
  excluded = {Kimi, title},
  excludekimi = {title},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  keywords = {access control;command and control system;service oriented architecture;systems
	integration;authorisation;command and control systems;software architecture;},
  reviewer = {kimi, casper}
}

@INPROCEEDINGS{Varma20051511,
  author = {Varma, P.a and Anand, A.a and Pazel, D.P.b and Tibbitts, B.R.b },
  title = {NextGen eXtreme porting - Structured by automation},
  year = {2005},
  volume = {2},
  pages = {1511-1517},
  note = {cited By (since 1996) 3},
  __markedentry = {},
  abstract = {``Maintenance is really the normal state of an XP project{''} - Beck.
	Thus porting is a natural candidate for eXtreme Programming and we
	present a novel tool-based XP methodology for porting C/C++programs.
	The structure provided by our tooling is designed for scalability,
	to enable XP on large projects porting enterprise-scale codebases.
	Overall planning and iteration planning of the methodology are assisted
	by a novel, first-of-its-kind migration orchestrator tool. Automated
	test, debugging, and audit function are provided as unified support
	by our refactoring tool framework. We focus on the orchestrator tool
	and offer preliminary benchmarks wilh encouraging resulls. Copyright
	2005 ACM.},
  affiliation = {IBM India Research Laboratory, Indian Institute of Technology, Block
	1, Hauz Khas, New Delhi 110016, India; IBM T. J. Watson Research
	Center, 19 Skyline Drive, Hawthorne, NY 10532, United States},
  author_keywords = {Analyze; Debug; Dialects; EXtreme Programming; Fix; Orchestration;
	Port planning; Re-factor; Software process model; Test; XP},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings of the ACM Symposium on Applied Computing},
  owner = {kimi},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-33644498838&partnerID=40&md5=cfdbe0320ac6fa8061b77e73c4fd3490}
}

@ARTICLE{Varoquaux200855,
  author = {Varoquaux, G.},
  title = {Agile computer control of a complex experiment},
  journal = {Computing in Science and Engineering},
  year = {2008},
  volume = {10},
  pages = {55-59},
  number = {2},
  note = {cited By (since 1996) 0},
  __markedentry = {},
  abstract = {This article introduces techniques and tools useful for writing an
	experiment's control framework. In particular, the author discusses
	how to use the Python language to control hardware. © 2008 IEEE.},
  affiliation = {LENS, University of Florence},
  art_number = {4454432},
  db = {scoups},
  document_type = {Article},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-39749094363&partnerID=40&md5=f4624422c1ac40746fb102d3865addb7}
}

@INPROCEEDINGS{Vejandla2009,
  author = {Vejandla, P.K. and Sherrell, L.B.},
  title = {Why an AI research team adopted XP practices},
  year = {2009},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:1]},
  abstract = {In this paper, researchers describe their early experiences of using
	agile techniques while developing a solution to a specific, multi-objective
	real world problem called the United States Navy Sailors' Assignment
	Problem (SAP). Because the investigators are working in a research
	environment where the results produced at intermediate stages cause
	the requirements to continually change, an agile software development
	methodology was deemed most appropriate. Although the research team
	applied several agile practices, the paper emphasizes their experiences
	when performing test-first or test-driven development (TDD). When
	applying test-first development, the programmer writes test cases
	in the designated programming language prior to composing functional
	code. The objective during code implementation is to write code to
	pass a particular test case. Thus, the activities of specifying test
	cases, coding, and testing comprise an iterative process. As a part
	of this work, the authors compare test-driven development to the
	more traditional approaches of testing. ©2009 ACM.},
  affiliation = {University of Memphis, Department of Computer Science, Memphis, TN
	38152, United States},
  art_number = {1566541},
  author_keywords = {Agile software development; Evolutionary multiobjective optimization;
	Extreme programming (XP); Informed initialization algorithm; Sailors'
	assignment problem; Test-driven development (TDD)},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  filtermaria = {exclude},
  journal = {Proceedings of the 47th Annual Southeast Regional Conference, ACM-SE
	47},
  owner = {kimi},
  reviewer = {maria, kimi},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-70449721274&partnerID=40&md5=b6d7a40226f3ebda792a74730169e94d}
}

@INPROCEEDINGS{5876106,
  author = {Venkatagiri, S.},
  title = {Teach Project Management, pack an Agile punch},
  booktitle = {Software Engineering Education and Training (CSEE T), 2011 24th IEEE-CS
	Conference on},
  year = {2011},
  pages = {351 -360},
  month = {may},
  __markedentry = {},
  abstract = {Agile software development methods have begun to gain wide acceptance
	by the global software industry. However, project managers with academic
	training in ASD are a rarity. This paper outlines a course in IS
	Project Management that is well-suited for an audience consisting
	of students from the information systems, business and computer science
	streams, who normally make up a graduate class. The course begins
	by adopting a process-neutral perspective towards activities such
	as requirements and estimation, before proceeding to discuss Agile
	methods. A team project allows participants to develop a hands-on
	feel for ASD, with the help of an Agile PM platform. The author has
	recently taught the course as proposed at his institution. The paper
	makes some observations on the effect of prior work experience on
	team performance. It concludes with some testimonials from professional
	participants, on the impact that the course has had on their practices
	at work.},
  db = {ieeexplore},
  doi = {10.1109/CSEET.2011.5876106},
  excluded = {Kimi, title},
  excludekimi = {title},
  filtercasper = {exclude},
  filterkimi = {exclude},
  filtermaria = {exclude},
  issn = {1093-0175},
  keywords = {agile software development;process neutral perspective;project management;software
	industry;educational courses;project management;software houses;software
	prototyping;},
  reviewer = {maria, kimi}
}

@INPROCEEDINGS{5159247,
  author = {Verginadis, Y. and Apostolou, D. and Papageorgiou, N. and Mentzas,
	G.},
  title = {An Architecture for Collaboration Patterns in Agile Event-Driven
	Environments},
  booktitle = {Enabling Technologies: Infrastructures for Collaborative Enterprises,
	2009. WETICE '09. 18th IEEE International Workshops on},
  year = {2009},
  pages = {227 -230},
  month = {29 2009-july 1},
  __markedentry = {[kimi:1]},
  abstract = {Collaboration in virtual organizations is usually informal, dynamic
	and ad-hoc. In this paper, we introduce collaboration patterns as
	a mechanism to facilitate knowledge-based collaborations. We also
	propose an event-driven architecture for modeling, recommending and
	enacting such Collaboration Patterns.},
  db = {ieeexplore},
  doi = {10.1109/WETICE.2009.12},
  excluded = {Kimi, title},
  filtercasper = {exclude},
  filtermaria = {exclude},
  issn = {1524-4547},
  keywords = {agile event-driven architecture environment;knowledge-based collaboration
	pattern;object-oriented programming;virtual organization;groupware;knowledge
	based systems;object-oriented programming;software architecture;virtual
	enterprises;},
  reviewer = {kimi, casper}
}

@INPROCEEDINGS{5261071,
  author = {Victor, B. and Jacobson, N.},
  title = {We Didn't Quite Get It},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {271 -274},
  month = {aug.},
  __markedentry = {[kimi:2]},
  abstract = {Brian Victor and Noah Jacobson are developers at Abraxas Applications
	who led the initial adoption of agile practices at the company. They
	discovered that agile is a social process but that their background
	as developers prevented them from implementing it as effectively
	as they could. They relate several anecdotes that illustrate problems
	in developer led transitions and describe how their environment looked
	before and after a coach provided assistance.},
  db = {ieeexplore},
  doi = {10.1109/AGILE.2009.22},
  filterkimi = {include},
  filtermaria = {include},
  keywords = {Abraxas applications;agile technology;social process development;DP
	management;social aspects of automation;},
  reviewer = {maria, kimi}
}

@ARTICLE{Vidgen2012171,
  author = {Vidgen, R.a and Donnellan, B.b and Matook, S.c and Conboy, K.a },
  title = {Design science approach to measure productivity in agile software
	development},
  journal = {Communications in Computer and Information Science},
  year = {2012},
  volume = {286 CCIS},
  pages = {171-177},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:3]},
  abstract = {While adoption of agile software methods is high, little hard, rigorous
	evidence exists as to the success of these approaches. This paper
	describes the design science process that will be used to create
	a measure for productivity in agile development environments. We
	consider design science to be suitable because measuring performance
	in software development is laden with issues around measurability,
	ambiguity and imperfection. As a result, we need the rigor that design
	science brings while still maintaining relevance. © 2012 Springer-Verlag.},
  affiliation = {University of New South Wales, Australian School of Business, Sydney,
	NSW 2052, Australia; Innovation Value Institute, National University
	of Ireland, Maynooth, Ireland; University of Queensland, UQ Business
	School, Brisbane, QLD 4072, Australia},
  author_keywords = {agile development; design science; productivity},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {exclude},
  owner = {kimi},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84867457873&partnerID=40&md5=5eeb7b74220a7e5d26f2be9c358cf1f6}
}

@ARTICLE{Vidgen2009355,
  author = {Vidgen, R.a and Wang, X.b },
  title = {Coevolving Systems and the Organization of Agile Software Development},
  journal = {Information Systems Research},
  year = {2009},
  volume = {20},
  pages = {355-376},
  number = {3},
  note = {cited By (since 1996) 21},
  __markedentry = {[kimi:1]},
  abstract = {Despite the popularity of agile methods in software development and
	increasing adoption by organizations there is debate about what agility
	is and how it is achieved. The debate suffers from a lack of understanding
	of agile concepts and how agile software development is practiced.
	This paper develops a framework for the organization of agile software
	development that identifies enablers and inhibitors of agility and
	the emergent capabilities of agile teams. The work is grounded in
	complex adaptive systems (CAS) and draws on three principles of coevolving
	systems: match coevolutionary change rate, maximize self-organizing,
	and synchronize exploitation and exploration. These principles are
	used to study the processes of two software development teams, one
	a team using eXtreme Programming (XP) and the other a team using
	a more traditional, waterfallbased development cycle. From the cases
	a framework for the organization of agile software development is
	developed. Time pacing, self-management with discipline and routinization
	of exploration are among the agile enablers found in the cases studies
	while event pacing, centralized management, and lack of resources
	allocated to exploration are found to be inhibitors to agility. Emergent
	capabilities of agile teams that are identified from the research
	include coevolution of business value, sustainable working with rhythm,
	sharing and team learning, and collective mindfulness. © 2009 INFORMS.},
  affiliation = {School of Information Systems, Technology and Management, University
	of New South Wales, Sydney NSW 2052, Australia; Lero, The Irish Software
	Engineering Research Centre, Limerick, Ireland},
  author_keywords = {Agile software development; Coevolving systems; Complex adaptive systems;
	Innovation; Mindfulness; Rhythm; Time-pacing},
  db = {scoups},
  document_type = {Article},
  filtercasper = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {kimi, casper},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-76949086883&partnerID=40&md5=617b0551576342d6732d637f2ec19244}
}

@ARTICLE{Vijayasarathy2012137,
  author = {Vijayasarathy, L. and Turk, D.},
  title = {Drivers of agile software development use: Dialectic interplay between
	benefits and hindrances},
  journal = {Information and Software Technology},
  year = {2012},
  volume = {54},
  pages = {137-148},
  number = {2},
  note = {cited By (since 1996) 2},
  __markedentry = {[kimi:3]},
  abstract = {Context: Agile software development with its emphasis on producing
	working code through frequent releases, extensive client interactions
	and iterative development has emerged as an alternative to traditional
	plan-based software development methods. While a number of case studies
	have provided insights into the use and consequences of agile, few
	empirical studies have examined the factors that drive the adoption
	and use of agile. Objective: We draw on intention-based theories
	and a dialectic perspective to identify factors driving the use of
	agile practices among adopters of this software development methodology.
	Method: Data for the study was gathered through an anonymous online
	survey of software development professionals. We requested participation
	from members of a selected list of online discussion groups, and
	received 98 responses. Results: Our analyses reveal that subjective
	norm and training play a significant role in influencing software
	developers' use of agile processes and methods, while perceived benefits
	and perceived limitations are not primary drivers of agile use among
	adopters. Interestingly, perceived benefit emerges as a significant
	predictor of agile use only if adopters face hindrances to their
	agile practices. Conclusion: We conclude that research in the adoption
	of software development innovations should examine the effects of
	both enabling and detracting factors and the interactions between
	them. Since training, subjective norm, and the interplay between
	perceived benefits and perceived hindrances appear to be key factors
	influencing the adoption of agile methods, researchers can focus
	on how to (a) perform training on agile methods more effectively,
	(b) facilitate the dialog between developers and managers about perceived
	benefits and hindrances, and (c) capitalize on subjective norm to
	publicize the benefits of agile methods within an organization. Further,
	when managing the transition to new software development methods,
	we recommend that practitioners adapt their strategies and tactics
	contingent on the extent of perceived hindrances to the change. ©
	2011 Elsevier B.V. All rights reserved.},
  affiliation = {Colorado State University, Computer Information Systems Department,
	Fort Collins, CO 80523, United States},
  author_keywords = {Agile software development; Dialectic theory; Innovation adoption;
	Perceived hindrance; Subjective norm; Training},
  db = {scoups},
  document_type = {Article},
  filtercasper = {exclude},
  owner = {kimi},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-81055140353&partnerID=40&md5=c0e35d87c27794bdc2a0433f4d5c950a}
}

@INPROCEEDINGS{1553634,
  author = {Visaggio, V.A.},
  title = {Empirical validation of pair programming},
  booktitle = {Software Engineering, 2005. ICSE 2005. Proceedings. 27th International
	Conference on},
  year = {2005},
  pages = { 654},
  month = {may},
  __markedentry = {[kimi:1]},
  abstract = { This paper discusses an empirical assessment of pair programming.
	Several agile processes arose and have been adopted in industry with
	the promise of producing working software in the early phases of
	production process and to make the organization flexible and adaptable
	with respect to the changing environment. The outcomes of the experiments
	can be summarized as follows: (i) pair programming improves the productivity
	of developers with respect to solo programming; (ii) it also fosters
	knowledge transfer between the developers of the pair: the experiment
	suggests that this effect is emphasized when both the components
	own the same educational background; and, finally, (iii) distributing
	the components of a pair could seriously deteriorate expected benefits,
	if an appropriate support for communication and collaboration is
	not set up.},
  db = {ieeexplore},
  doi = {10.1109/ICSE.2005.1553634},
  excluded = {Kimi, title},
  filtercasper = {exclude},
  filtermaria = {exclude},
  keywords = { agile process; empirical software engineering; knowledge transfer;
	pair programming; programming; software engineering;},
  reviewer = {casper, maria}
}

@INPROCEEDINGS{5457331,
  author = {Vlaanderen, K. and Brinkkemper, S. and Jansen, S. and Jaspers, E.},
  title = {The Agile Requirements Refinery: Applying SCRUM Principles to Software
	Product Management},
  booktitle = {Software Product Management (IWSPM), 2009 Third International Workshop
	on},
  year = {2009},
  pages = {1 -10},
  month = {sept.},
  __markedentry = {[kimi:1]},
  abstract = {Although agile software development methods such as SCRUM and DSDM
	are gaining popularity, the consequences of applying agile principles
	to software product management have received little attention until
	now. In this paper, this gap is filled by the introduction of a method
	for the application of SCRUM principles to software product management.
	For this purpose, the 'agile requirements refinery' is presented,
	an extension to the SCRUM process that enables product managers to
	cope with large requirements in an agile development environment.
	A real-life case study is presented to illustrate how agile methods
	can be applied to software product management. The experiences of
	the case study company are provided as a set of lessons learned that
	will help others to apply agile principles to their software product
	management process.},
  db = {ieeexplore},
  doi = {10.1109/IWSPM.2009.7},
  filtercasper = {exclude},
  filtermaria = {exclude},
  keywords = {SCRUM principles;agile requirement refinery;agile software development
	methods;software product management process;product life cycle management;software
	management;software prototyping;},
  reviewer = {maria, kimi}
}

@ARTICLE{Vlaanderen201158,
  author = {Vlaanderen, K.a and Jansen, S.a and Brinkkemper, S.a and Jaspers,
	E.b },
  title = {The agile requirements refinery: Applying SCRUM principles to software
	product management},
  journal = {Information and Software Technology},
  year = {2011},
  volume = {53},
  pages = {58-70},
  number = {1},
  note = {cited By (since 1996) 4},
  __markedentry = {[kimi:1]},
  abstract = {Context: Although agile software development methods such as SCRUM
	and DSDM are gaining popularity, the consequences of applying agile
	principles to software product management have received little attention
	until now. Objective: In this paper, this gap is filled by the introduction
	of a method for the application of SCRUM principles to software product
	management. Method: A case study research approach is employed to
	describe and evaluate this method. Results: This has resulted in
	the 'agile requirements refinery', an extension to the SCRUM process
	that enables product managers to cope with complex requirements in
	an agile development environment. A case study is presented to illustrate
	how agile methods can be applied to software product management.
	Conclusions: The experiences of the case study company are provided
	as a set of lessons learned that will help others to apply agile
	principles to their software product management process. © 2010 Elsevier
	B.V. All rights reserved.},
  affiliation = {Department of Information and Computer Sciences, Utrecht University,
	P.O. Box 80.089, 3508TB Utrecht, Netherlands; Planon B.V., P.O. Box
	38074, 6503 AB, Nijmegen, Netherlands},
  author_keywords = {Agile development; Requirements management; Requirements refinery;
	SCRUM; Software product management},
  db = {scoups},
  document_type = {Article},
  filtercasper = {exclude},
  filtermaria = {exclude},
  owner = {kimi},
  reviewer = {maria, kimi},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-78049527003&partnerID=40&md5=5e00c7550847a504b75364fb9b11a09a}
}

@ARTICLE{Vlaanderen2012116,
  author = {Vlaanderen, K.a and Van Stijn, P.a and Brinkkemper, S.a and Van De
	Weerd, I.b },
  title = {Growing into agility: Process implementation paths for scrum},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes
	in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year = {2012},
  volume = {7343 LNCS},
  pages = {116-130},
  note = {cited By (since 1996) 0},
  __markedentry = {[kimi:2]},
  abstract = {Background: Many organizations struggle with the implementation of
	agile methods. Such methods pose considerable challenges related
	to organizational demand and process configuration. Goal: In this
	paper, we analyze the introduction of Scrum in the development organization
	in order to determine distinct approaches to its implementation.
	Approach: We compare the Scrum introduction paths of four case companies.
	Results: This results in a discussion of implementation paths ranging
	from gradual to disruptive introduction of Scrum. Contribution: The
	description of these paths provides insight into process improvements.
	We demonstrate how a structured description of process improvements
	can improve understanding of process improvement paths. © 2012 Springer-Verlag.},
  affiliation = {Utrecht University, Department of Information and Computing Sciences,
	P.O. Box 80.007, 3508 TA Utrecht, Netherlands; Vrije Universiteit
	Amsterdam, Faculty of Economics and Business Administration, De Boelelaan
	1105, 1081 HV Amsterdam, Netherlands},
  author_keywords = {incremental; process implementation; product software; Scrum; software
	process improvement},
  db = {scoups},
  document_type = {Conference Paper},
  filtercasper = {include},
  filterkimi = {include},
  owner = {kimi},
  reviewer = {casper, maria},
  source = {Scopus},
  timestamp = {2012.12.19},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84862162214&partnerID=40&md5=f7af0d3244aaa093c990139c04d4058a}
}

@ARTICLE{4163032,
  author = {Vodde, Bas and Koskela, Lasse},
  title = {Learning Test-Driven Development by Counting Lines},
  journal = {Software, IEEE},
  year = {2007},
  volume = {24},
  pages = {74 -79},
  number = {3},
  month = {may-june },
  __markedentry = {[kimi:2]},
  abstract = {During the last two years, Nokia Networks has started changing much
	of its product development from a traditional waterfall approach
	to Scrum, an agile software development process. Besides Scrum, there
	has been a lot of focus on engineering practices such as test-driven
	development. We've been involved in creating TDD training at Nokia
	Networks to support the transition to agile development. This training
	approach has students write tests that count lines of code. The problems
	they encounter provide valuable insights into TDD and its benefits},
  db = {ieeexplore},
  doi = {10.1109/MS.2007.80},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  filtercasper = {exclude},
  filterkimi = {exclude},
  issn = {0740-7459},
  keywords = {Nokia Networks;Scrum agile software development process;line-counting
	exercise;test-driven development training;waterfall product development
	approach;computer based training;computer science education;program
	testing;software engineering;},
  reviewer = {casper, maria}
}

