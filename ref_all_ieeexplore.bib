% This file was created with JabRef 2.9.
% Encoding: UTF8

@INPROCEEDINGS{4133444,
  author = {Jami, S.I. and Shaikh, Z.A.},
  title = {Teaching Computer Science Courses Using Extreme Programming (XP)
	Methodology},
  booktitle = {9th International Multitopic Conference, IEEE INMIC 2005},
  year = {2005},
  pages = {1 -6},
  month = {dec.},
  __markedentry = {[kimi:1]},
  abstract = {This paper describes the extreme programming (XP) methodology and
	its effectiveness in incorporating its practices in computer science
	curriculum. We explored several merits and demerits of this incorporation
	based on our experiences and observations which are supported by
	other researchers. In this study we considered those courses of computer
	science that involve the processes of software development and analysis.
	It has been found that XP in full practice is vulnerable against
	a single course of software engineering, so some of its practices
	should be incorporated in the first semester of computer science
	curriculum and rest should be incorporated in later years. We start
	our work from the introductory course in computer science where we
	first implement the concept of pair programming and then implement
	other practices. Some suggestions are included in this work that
	can be helpful in implementing this methodology},
  doi = {10.1109/INMIC.2005.334429},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {computer science course;extreme programming methodology;software development;teaching;computer
	aided instruction;computer science education;educational courses;programming;software
	engineering;teaching;}
}

@INPROCEEDINGS{480120,
  author = {Shaw, G.A. and Anderson, J.C. and Madisetti, V.K.},
  title = {Assessing and improving current practice in the design of application-specific
	signal processors},
  booktitle = {Acoustics, Speech, and Signal Processing, 1995. ICASSP-95., 1995
	International Conference on},
  year = {1995},
  volume = {4},
  pages = {2707 -2710 vol.4},
  month = {may},
  __markedentry = {[kimi:1]},
  abstract = {The Department of Defense ARPA program for Rapid Prototyping of Application
	Specific Signal Processors (RASSP) exists to significantly improve
	the process by which embedded digital signal processors are developed
	(prototyped) and supported (maintained and upgraded). As used in
	the RASSP program, the term prototype signifies a system that is
	a precursor to a deployed system, but still meets all of the essential
	performance goals and is designed to facilitate maintainability and
	upgradability. Current practice in the design of embedded digital
	signal processors, as exemplified in the traditional waterfall design
	methodology, is examined and shortfalls in the design, methodology
	and supporting tools are identified. Opportunities for improving
	the traditional design practice are then identified and evaluated
	in terms of potential benefits, as well as impediments, to implementation,
	and adoption by the community},
  doi = {10.1109/ICASSP.1995.480120},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1520-6149},
  keywords = { ARPA program; Department of Defense; RASSP program; Rapid Prototyping
	of Application Specific Signal Processors; embedded digital signal
	processors; maintainability; supporting tools; upgradability; waterfall
	design methodology; digital signal processing chips; economics; military
	communication; military computing; real-time systems; software prototyping;}
}

@INPROCEEDINGS{4809266,
  author = {El-Said, S.M. and Hana, M. and Eldin, A.S.},
  title = {Agile Tailoring Tool (ATT): A Project Specific Agile Method},
  booktitle = {Advance Computing Conference, 2009. IACC 2009. IEEE International},
  year = {2009},
  pages = {1659 -1663},
  month = {march},
  abstract = {After decades from introducing and using agile methodologies, project
	managers realized that no methodology is sufficient by itself. Thus,
	merging their principles is the solution yet no formal solution has
	been proposed. Relying on previous work, ATT provides a mathematical
	model to act as a tailoring tool to formulate a new agile method
	based on experienced agile methods and the project specifications.
	It requires project managers to understand well the project requirements
	in terms of SDLC phases, and accordingly the new agile methodology
	is tailored.},
  doi = {10.1109/IADCC.2009.4809266},
  keywords = {SDLC phases;agile tailoring tool;project management;project requirements;project
	specific agile method;project specifications;formal specification;project
	management;software development management;}
}

@INPROCEEDINGS{4809935,
  author = {Choi, Y. and Yang, J.-S. and Jeong, J.},
  title = {Application framework for multi platform mobile application software
	development},
  booktitle = {Advanced Communication Technology, 2009. ICACT 2009. 11th International
	Conference on},
  year = {2009},
  volume = {01},
  pages = {208 -213},
  month = {feb.},
  __markedentry = {[kimi:2]},
  abstract = {A time-to-market of mobile application software is usually very short
	and it causes unstructured mobile application software. In this paper,
	we defined a common architecture for mobile application software
	which is named as Application Framework to support agile software
	development. The framework is defined following PIM (Platform Independent
	Model) in MDD (Model Driven Development) to satisfy the need of supportability
	from one mobile application to various mobile platforms. Transformation
	rules each mobile platforms are also offered to generate Java source
	code for mobile platforms automatically (as PSM, Platform Specific
	Model) such as J2ME and WIPI.},
  excludekimi = {abstract},
  issn = {1738-9445},
  keywords = {Java source code generation;agile software development;model driven
	development;multi platform mobile application software development;platform
	independent model;software architecture;Java;mobile computing;software
	architecture;}
}

@INPROCEEDINGS{1309579,
  author = {Burda, R. and Colwill, B. and Liang, F.},
  title = {Touchless 300 mm fab production in the modern business environment},
  booktitle = {Advanced Semiconductor Manufacturing, 2004. ASMC '04. IEEE Conference
	and Workshop},
  year = {2004},
  pages = { 262 - 266},
  month = {may},
  abstract = { Fully automated, touchless fab production would not be possible without
	the new generation of factory control software designed to run factories
	without direct human intervention. These systems work especially
	well when running large volumes of fully qualified products on fully
	qualified tools. However, a great deal of planning and creativity
	is required to setup and maintain these systems to make them adaptable
	for new product/process qualification and ramp, new tool qualification,
	tool/process monitoring, sharing of production and development tools,
	and many other activities driven by shortening product life cycles
	and other aspects of the modern semiconductor industry. Responsibility
	for ensuring that the fab can be powerful, agile, and flexible lies
	across many internal organizations. But the responsibility lies most
	directly with the product integration/route build team and the factory
	systems integrators/lead users. The product integration/route build
	teams are responsible for defining all factory entities that will
	be controlled or need to be monitored for fab control. The factory
	systems integrators/lead users must then configure their systems
	run the fab within this environment fully defined by the product
	integration/route build teams. This article will explain how the
	fab "model" cannot be too simple or generic to allow the factory
	systems to properly monitor the fab and take appropriate and timely
	action for efficient production. Conversely the fab "model" cannot
	be so complex that defining product/process changes becomes so labor
	intensive and risk laden that it becomes the major cycle time contributor
	to new product/process introduction. These issues will be explained
	from the perspective of the dispatching system which uses a large
	spectrum of fab data to decide how the fab is run. The solutions
	that these teams use to solve the problems above have a direct effect
	on the ability of the fab to meet the needs of the business.},
  doi = {10.1109/ASMC.2004.1309579},
  excluded = {Kimi, title},
  keywords = { 300 mm; dispatching system; fab control; fab data; factory control
	software; factory systems integrators; lead users; modern business
	environment; modern semiconductor industry; product integration;
	product life cycles; product/process changes; product/process qualification;
	route build team; tool qualification; tool/process monitoring; touchless
	fab production; electronics industry; factory automation; process
	control; process monitoring; semiconductor technology;}
}

@INPROCEEDINGS{4455980,
  author = {Hussain, Z. and Lechner, M. and Milchrahm, H. and Shahzad, S. and
	Slany, W. and Umgeher, M. and Vlk, T. and Wolkerstorfer, P.},
  title = {User Interface Design for a Mobile Multimedia Application: An Iterative
	Approach},
  booktitle = {Advances in Computer-Human Interaction, 2008 First International
	Conference on},
  year = {2008},
  pages = {189 -194},
  month = {feb.},
  abstract = {Mobile phones have become full-featured mobile computers. Applications
	providing good user experience and taking full advantage of the increasing
	capabilities of mobile phones are still rare. One such application
	is audio and video on mobile phones which is expected to become a
	killer application in the near future. A lot of valuable audio and
	video content is hidden in archives of content providers. We are
	developing an application that enables a user to perform content-based
	search for audio and video content in large databases and play it
	on a mobile phone virtually anywhere, at any time. Our approach to
	application development focuses on the adoption of agile software
	development methodologies and user-centered design, emphasizing iterative
	user-interface development involving usability engineers and non-technical
	users. Thus, the application evolves according to the needs of the
	end user, providing maximized usability and customer satisfaction.},
  doi = {10.1109/ACHI.2008.24},
  excluded = {Kimi, title},
  keywords = {agile software development;content-based search;iterative user interface
	design;large database;mobile multimedia application;user-centered
	design;content-based retrieval;mobile computing;multimedia computing;user
	centred design;user interface management systems;very large databases;}
}

@INPROCEEDINGS{4782526,
  author = {Hussain, Z. and Lechner, M. and Milchrahm, H. and Shahzad, S. and
	Slany, W. and Umgeher, M. and Wolkerstorfer, P.},
  title = {Concept and Design of a Contextual Mobile Multimedia Content Usability
	Study},
  booktitle = {Advances in Computer-Human Interactions, 2009. ACHI '09. Second International
	Conferences on},
  year = {2009},
  pages = {277 -282},
  month = {feb.},
  __markedentry = {[kimi:2]},
  abstract = {The popularity of consuming multimedia content on mobile phones is
	increasing more and more, not only because of the availability of
	the technical infrastructure, but also because of the mobility in
	modern society. We are developing a mobile multimedia streaming application.
	The crucial factor for such applications in order to be adopted and
	successful is user acceptance. This paper presents the preliminary
	concept and design of a contextual mobile multimedia content usability
	study. The study is conducted within are search project on agile
	software development methodologies with special emphasis on Extreme
	Programming and continuous usability evaluation. Past work included
	satisfaction of the needs of end users by means of focusing on user-experience
	in all steps of the development process. To gain scientific relevant
	data, the careful design of a study is considered most important.
	The study which will be conducted in October 2008 will give insights
	into mobile HCI concerning the coherence of content types, consumption
	times, and consumption contexts.},
  doi = {10.1109/ACHI.2009.28},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {HCI;agile software development;contextual mobile multimedia content
	usability study;continuous usability evaluation;extreme programming;mobile
	multimedia streaming;content-based retrieval;human computer interaction;mobile
	computing;multimedia computing;}
}

@INPROCEEDINGS{6215591,
  author = {Murugaiyan, M.S. and Balaji, S.},
  title = {Succeeding with Agile software development},
  booktitle = {Advances in Engineering, Science and Management (ICAESM), 2012 International
	Conference on},
  year = {2012},
  pages = {162 -165},
  month = {march},
  abstract = {The focus of Agile software development has been on methods and practices.
	How to take the methods effectively in use has received less attention.
	Especially in large organization it is not trivial to take agile
	methods in use. Based on the experiences, a life cycle model that
	describes phases in a software process improvement project deploying
	an agile method to an individual project was developed. The model
	defines the phases and the key decision points in the improvement
	project. It also defines some alternative processes for projects
	in different situations. The main benefit of the model is that it
	gives the big picture of the agile method deployment project. The
	model helps to understand which steps are needed for initially deploying
	an agile method and continuously improving the process.},
  keywords = {agile method deployment project;agile software development;life cycle
	model;software process improvement project;project management;software
	process improvement;software prototyping;}
}

@INPROCEEDINGS{5643278,
  author = {Jayawardena, D.S. and Ekanayake, L.L.},
  title = {Adaptation analysis of Agile Project Management for managing IT projects
	in Sri Lanka},
  booktitle = {Advances in ICT for Emerging Regions (ICTer), 2010 International
	Conference on},
  year = {2010},
  pages = {1 -4},
  month = {29 2010-oct. 1},
  abstract = {The dynamic business environment today has created immense pressure
	on the delivery of IT projects. Traditional methods of managing projects
	are no longer applicable and effective to manage certain IT projects
	as they are unable to cope with the rapid organizational and business
	level changes. Agile project management has caught the attention
	of many project managers as a means of facing these challenges and
	to overcome the limitations of managing IT projects. This study reports
	the results of an adaptation analysis done on Agile Project Management
	in managing IT projects in Sri Lanka. The awareness level of agile
	project management and what factors affect the awareness are discussed
	in this study. The agile project management implementation challenges
	and recommendations discussed in this study will help Sri Lankan
	organizations to successfully adopt agile project management.},
  doi = {10.1109/ICTER.2010.5643278},
  keywords = {IT project management;Sri Lanka;adaptation analysis;agile project
	management;awareness level;business level change;rapid organizational
	change;business data processing;information technology;organisational
	aspects;project management;}
}

@INPROCEEDINGS{4225211,
  author = {Smith, M. R. and Miller, J. and Ko, L. and Chen, J. and Geras, A.
	and Frayne, R.},
  title = {Approaches to Validating the "Quantity" in Quantitative MR Cerebral
	Perfusion Studies},
  booktitle = {Advances in Medical, Signal and Information Processing, 2006. MEDSIP
	2006. IET 3rd International Conference On},
  year = {2006},
  pages = {1 -4},
  month = {july},
  __markedentry = {[kimi:1]},
  abstract = {Stroke is a major killer across the world; with staggering financial
	implications. Magnetic resonance dynamic susceptibility contrast
	studies are a plausible approach to provide quantitative cerebral
	blood flow (CBF) measurements. However, what is the correct approach
	to take when a proven method from another scientific area is suggested
	as a means for a minor increase in CBF accuracy, but leads to results
	that totally disagree with the established literature? Agile methodologies
	are being introduced into business as a new "light-footed" approach
	to developing software with considerable success. We describe our
	experiences of adapting Agile software engineering practices to establish
	a repeatable hardware-software co-design framework for biomedical
	algorithm validation.},
  excluded = {Kimi, title},
  excludekimi = {title}
}

@INPROCEEDINGS{6193584,
  author = {Gohil, Komal and Alapati, Nagalakshmi and Joglekar, Sunil},
  title = {Towards behavior driven operations (BDOps)},
  booktitle = {Advances in Recent Technologies in Communication and Computing (ARTCom
	2011), 3rd International Conference on},
  year = {2011},
  pages = {262 -264},
  month = {nov.},
  abstract = {Modern Enterprise Software Systems entail many challenges such as
	availability, scalability, complexity and providing business agility.
	Ensuring the systems to be up and running for 24 #x00D7; 7 has become
	a mandate for operations. Agile development has been adopted to keep
	pace with the demands of business and IT. Test Driven Development
	(TDD) and Behavior Driven Development (BDD) are practices, which
	enable agile development. So far the agile approach has been limited
	to development. For ensuring business to be truly agile, we need
	to take forward the agile approach to operations. In this paper,
	we discuss the behavior driven approach for operations specifically
	on the core sub-systems like infrastructure provisioning, deployment
	and monitoring. We share our explorations and experiments with Behavior
	Driven Monitoring (BDM) and how the same can be adopted for infrastructure
	provisioning and deployment. We used Cucumber-Nagios to detect behavior
	of an enterprise application. We close this paper with a note on
	the benefits to business and IT showing its relevance to DevOps,
	Continuous Delivery and Cloud Computing.},
  doi = {10.1049/ic.2011.0095},
  excluded = {Kimi, title}
}

@INPROCEEDINGS{496071,
  author = {Shirado, W. and Straka, W. and Arkwright, T. and Levay, M. and Lundholm,
	D.},
  title = {Software process in a mixed R amp;D environment},
  booktitle = {Aerospace Applications Conference, 1996. Proceedings., 1996 IEEE},
  year = {1996},
  volume = {3},
  pages = {315 -326 vol.3},
  month = {feb},
  abstract = {As the R amp;D organization for a large aerospace company, we undertake
	a wide range of software projects. The SEI encourages adoption of
	an organization-wide process model to improve the quality of software,
	but the variety of projects and the diversity of the computing resources
	make it difficult to identify such a process. Process is more than
	the waterfall or spiral models. We describe a framework for constructing
	a software development process, applicable to projects in a heterogeneous
	organization. This framework is flexible, with work products identified
	through scaling, tailoring, and customization. The framework and
	construction of the customized project process are supported by standards,
	guidelines, templates, examples, training, and consulting. A Web-based
	repository is used to disseminate process information, encouraging
	reuse and aiding repeatability},
  doi = {10.1109/AERO.1996.496071},
  keywords = {Web-based repository;aerospace company;consulting;customized project
	process;guidelines;heterogeneous organization;mixed R amp;D environment;process
	information;repeatability;reuse;software development process;standards;templates;training;Internet;aerospace
	computing;project support environments;research and development management;software
	development management;software reusability;}
}

@INPROCEEDINGS{1655977,
  author = {Mantooth, H.A. and Levy, A. and Francis, A.M. and Cilioq, E.S. and
	Lostetter, A.B.},
  title = {Model-based design tools for extending COTS components to extreme
	environments},
  booktitle = {Aerospace Conference, 2006 IEEE},
  year = {2006},
  pages = {11 pp.},
  month = {0-0 },
  __markedentry = {[kimi:2]},
  abstract = {Model-based design (MBD) tools to predict the performance and useful
	life of commercial-off-the-shelf (COTS) components and COTS-based
	systems outside of their rated temperature range are described. The
	modeling tools will differ from all known technologies in that they
	facilitate the capture of experimental data on COTS devices that
	in turn is automatically transformed through novel modeling methods
	into newly created behavioral models with performance degradation
	and lifetime effects. These tools are relevant and important in providing
	the means to quantify the reliability and lifetime (i.e., capability
	and risk) of COTS components and COTS-based systems and provide a
	trade structure for the assessment of competing technologies. Furthermore,
	these novel modeling and design tools will provide a means of integrating
	disparate models, allow agile evolution of models, and encourage
	MBD reporting mechanisms be used in reviews. Ultimately, these MBD
	tools will enable lower-cost system development and cost versus lifetime
	assessment, shorten development time, and extend proven technology
	to broader applications},
  doi = {10.1109/AERO.2006.1655977},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {COTS components;MBD tools;aerospace electronics;commercial-off-the-shelf;lifetime
	assessment;military vehicle;model-based design tools;reliability;useful
	life;military vehicles;remotely operated vehicles;software packages;software
	reliability;space vehicle electronics;space vehicles;}
}

@INPROCEEDINGS{1656063,
  author = {Wright, W. and Moore, D.},
  title = {Agile language development: the next generation},
  booktitle = {Aerospace Conference, 2006 IEEE},
  year = {2006},
  pages = {6 pp.},
  month = {0-0 },
  __markedentry = {[kimi:2]},
  abstract = {Statically compiled and strongly typed languages (Java, C#) have demonstrated
	their ability to produce robust, easily maintainable applications.
	Many of us accept this statement as dogma, not open to question.
	Whether true or not, most of us would agree that such languages as
	Java have changed forever the way we develop and deploy applications.
	In this paper, we propose that in order to evolve the next generation
	of distributed, rapidly developed applications, lightweight languages
	(what were once called "scripting languages") such as Python, Ruby,
	PHP, ECMAScript, Groovy, and JudoScript are critical to provide infrastructure
	for component-based applications, to support rapid prototyping, and
	more and more to create next generation applications themselves.
	Further, we survey features and capabilities of next generation programming
	languages and discuss techniques for integration of components created
	in strongly typed languages. Additionally, we focus on distributed
	applications using dynamic combinations of disparate languages without
	the need for heavy weight constructs such as CORBA; turning native
	applications into services; and creating conversational applications.
	Finally, we review a large-scale systems management application implemented
	entirely using agile languages and open protocols},
  doi = {10.1109/AERO.2006.1656063},
  excluded = {Kimi, title (see later)},
  excludekimi = {abstract},
  keywords = {ECMAScript;Groovy;JudoScript;PHP;Python;Ruby;agile language development;component
	integration;component-based applications;conversational applications;distributed
	applications;lightweight language;programming languages;rapid prototyping;rapidly
	developed applications;scripting languages;strongly typed languages;distributed
	processing;object-oriented languages;software prototyping;}
}

@INPROCEEDINGS{6187435,
  author = {Cornford, S. and Shishko, R. and Wall, S. and Cole, B. and Jenkins,
	S. and Rouquette, N. and Dubos, G. and Ryan, T. and Zarifian, P.
	and Durham, B.},
  title = {Evaluating a Fractionated Spacecraft system: A business case tool
	for DARPA's F6 program},
  booktitle = {Aerospace Conference, 2012 IEEE},
  year = {2012},
  pages = {1 -20},
  month = {march},
  __markedentry = {[kimi:1]},
  abstract = {The Defense Advanced Research Projects Agency (DARPA) has recently
	begun an effort to further refine its Fractionated Spacecraft vision.
	This vision (called the "F6" program) seeks to explore distributed
	spacecraft architectures capable of performing complex functions
	similar to current monolithic spacecrafts. However, the ability of
	fractionated systems to work separately would provide significant
	benefits not achievable by monolithic systems. The question of interest
	to this study was "Can these benefits be quantified and evaluated
	in a meaningful fashion in order to compare them to monolithic architectures?"
	Rather than narrowing the approach to one or two concepts, the strategy
	was to expand the decision space in order to generate and evaluate
	a variety of alternatives under different scenarios and design choices.
	The stimuli were specifically selected to capture many issues not
	included in such studies such as technology obsolescence, funding
	profile changes, equipment failure scenarios, and even changes to
	mission objectives during the mission. Each stimulus has a variety
	of decision options or responses which a manager can exercise including
	delay, cancellation, acceleration of a development, or even new developments.
	It is argued that the very nature of fractionation will result in
	systems far more agile to external (and internal) stimuli, but this
	has never been shown explicitly. This study explores the use of Real
	Options in conjunction with traditional Net Present Value techniques
	to quantify the desirability of alternative candidate designs in
	terms of their adaptability and survivability. Our approach to evaluating
	the business case for each use case was to explicitly model both
	the implementation and operation phases for the life cycle of a fractionated
	cluster. The models were integrated into Phoenix Integration's ModelCenter
	#x00AE; framework and used to generate Implementation Value Metrics
	(IVMs) and Operational Value Metrics (OVMs) associated w- th the
	use cases under evaluation. A number of models were developed to
	support these evaluations using Excel, Matlab, and Arena #x00AE;
	(a commercial discrete-event simulation software product). The Model-Based
	Systems Engineering (MBSE) approach used in this study yielded transformations
	between high-level frameworks (OWL and SysML) and the models used
	to generate the data we needed for the evaluation. This rule-based
	transformation process will be critical for exploring the large decision
	trade spaces in a reasonable amount of time. This paper presents
	the results of the business case analyses; the underlying OVM's and
	IVM's, the approaches used to model the problem, explore the tradespace,
	refine the exploration, and generate results. We also discuss possible
	directions for future work. Specifically, it should be noted that
	while the approach described herein is being developed for, and funded
	by, DARPA, it has general applicability to a much wider variety of
	applications.},
  doi = {10.1109/AERO.2012.6187435},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1095-323X},
  keywords = {Arena;DARPA's F6 program;Defense Advanced Research Projects Agency;Excel;Matlab;Phoenix
	Integration's Model Center;business case tool;distributed spacecraft
	architectures;fractionated spacecraft system;implementation value
	metrics;model-based systems engineering;monolithic architectures;monolithic
	spacecrafts;net present value;operational value metrics;technology
	obsolescence;aerospace instrumentation;mathematics computing;space
	vehicles;}
}

@INPROCEEDINGS{1406716,
  author = {Kruger, G.H. and van Niekerk, T.I. and Blignault, C. and Hattingh,
	D.G.},
  title = {Software architecture for real-time sensor analysis and control of
	the friction stir welding process},
  booktitle = {AFRICON, 2004. 7th AFRICON Conference in Africa},
  year = {2004},
  volume = {1},
  pages = {461 -466 Vol.1},
  month = {sept.},
  __markedentry = {[kimi:1]},
  abstract = {The friction stir welding (FSW) process requires advanced automation
	to ensure consistent and reliable joints. This has been realized
	by the development of an experimental set-up by the integration and
	online monitoring of accurate sensors with reliable modular control
	software. With increasing productivity and quality requirements imposed
	by manufacturers, machine flexibility and scalability are becoming
	increasingly pertinent. On-line process monitoring facilitates the
	`adaption' of machines able to respond to changing process parameters
	and conditions. Modular open software architectures allow flexibility
	in machine application. This paper introduces a fresh approach for
	the integration of the latest automation technology into an experimental
	setup equipped with an advanced sensory system. A new method of capturing
	sensory data and the implementation aspects of the software architecture
	for a micro-kernel based real-time embedded operating system is introduced.
	Agile automation of the FSW process is thus realized by advanced
	monitoring and control},
  doi = {10.1109/AFRICON.2004.1406716},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {FSW process automation;agile automation;friction stir welding process;joint
	consistency;joint reliability;micro-kernel based real-time embedded
	operating system;modular control open software;online sensor monitoring;real-time
	sensor analysis;sensory data capture;welding process control;agile
	manufacturing;friction welding;open systems;operating system kernels;process
	control;process monitoring;}
}

@INPROCEEDINGS{4293588,
  author = {Fletcher, M. and Bereza, W. and Karlesky, M. and Williams, G.},
  title = {Evolving into Embedded Develop},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {150 -155},
  month = {aug.},
  abstract = {In late 2005 we had the opportunity to start our first embedded development
	project. We apply agile practices to a variety of domains from web
	development to desktop applications to factory floor test equipment.
	The challenge for this new work was not learning the environment
	and technology. Our challenge was applying the practices of the agile
	world to the small and complex world of embedded systems. The hurdles
	were numerous: we battled the archaic state of many embedded tool
	sets, the lack of integration with tools like Rake that provide easy
	automation, and poor support for object oriented design. We've overcome
	each of these difficulties. This report is about our yearlong experience
	in introducing our development practices to embedded development.},
  doi = {10.1109/AGILE.2007.25},
  excluded = {Kimi, title},
  keywords = {Web development;agile practices;embedded system;factory floor test
	equipment;object oriented design;embedded systems;object-oriented
	programming;program testing;}
}

@INPROCEEDINGS{4293589,
  author = {Smith, P. and Garber-Brown, C.},
  title = {Traveling the Open Road: Using Open Source Practices to Transform
	Our Organization},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {156 -161},
  month = {aug.},
  __markedentry = {[kimi:]},
  abstract = {At DTE Energy, we introduced open source practices to improve the
	performance of our 300-person software organization, achieving measurable
	improvements in code quality and reuse. We chose a community-based
	approach after a previous false start using tools and outside consultants.
	Two of our key principles for the transformation program were respect
	for the individual and creating a safe environment. We designed the
	program to support self-directed learning, with more skilled staff
	providing guidance as required. We also opened our technical environment,
	following an open source approach, to support sharing and communication.
	As always, cultural issues were critical to the success of the program.
	This paper describes the history of and lessons learned from our
	adoption of open source practices.},
  doi = {10.1109/AGILE.2007.65},
  excluded = {Verify (Kimi)},
  keywords = {300-person software organization;DTE Energy;code quality;community-based
	approach;open source practices;self-directed learning;transformation
	program;public domain software;}
}

@INPROCEEDINGS{4293598,
  author = {Hunt, J. and Hume, T. and Lozdan, D.},
  title = {On Rabbits, Space and Cards: Moving Towards an InformativeWorkspace},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {212 -217},
  month = {aug.},
  abstract = {This paper addresses the initial experiences of a UK-based software
	development company while introducing the three elements of the 'informative
	workspace': open-plan working areas, extreme feedback devices and
	big visible charts / information radiators. Our experiences leave
	us convinced that visibility is vital, but a key element to successfully
	enabling an informative workspace was arguably missing in our case:
	control and ownership of the environment. In our case, the open plan
	work area contributed to the lack of ownership over the space, and
	lack of clarity led to a failure of an index card tracking system.},
  doi = {10.1109/AGILE.2007.42},
  keywords = {UK-based software development company;extreme feedback devices;index
	card tracking system;information radiators;informative workspace;open-plan
	working areas;visible charts;software development management;}
}

@INPROCEEDINGS{4293611,
  author = {Sumrell, M.},
  title = {From Waterfall to Agile - How does a QA Team Transition?},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {291 -295},
  month = {aug.},
  abstract = {We had been developing software with a strict waterfall mentality
	for several years. Our testing cycle was broken up into distinct
	phases for functional, system and regression testing. One phase did
	not start until the previous one was completed. Our testing team
	had always been a real asset to the organization. The entire team
	was a highly skilled group of automation testers using traditional,
	expensive off the shelf automated testing software. As we switched
	over to agile development using the Scrum framework, we really struggled
	with how to incorporate our traditional automated testing strategies
	into the agile world. Is testing in a waterfall project really that
	different then testing in an agile project? Yss!},
  doi = {10.1109/AGILE.2007.29},
  keywords = {QA team transition;Scrum framework;agile development;functional testing;off
	the shelf automated testing software;regression testing;system testing;testing
	cycle;waterfall project;program testing;software development management;}
}

@INPROCEEDINGS{4293605,
  author = {Cohan, S.},
  title = {Successful Integration of Agile Development Techniques within DISA},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {255 -261},
  month = {aug.},
  abstract = {The Department of Defense (DoD) and the Defense Information Systems
	Agency (DISA) have historically operated on 18-36 months release
	cycles for major IT projects. DISA is now striving towards delivering
	smaller components in 30-60-90 day release cycles. This paper discusses
	Pragmatics' successful implementation of agile development techniques
	into a non-agile shop, our introduction of agile development techniques
	to DISA to help them achieve their goal of delivering high quality
	software on shorter release cycles, and our lessons learned along
	the way.},
  doi = {10.1109/AGILE.2007.54},
  keywords = {Defense Information Systems Agency;Department of Defense;agile development
	techniques;high quality software;pragmatics;computational linguistics;software
	engineering;}
}

@INPROCEEDINGS{4293628,
  author = {Marschall, M.},
  title = {Transforming a Six Month Release Cycle to Continuous Flow},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {395 -400},
  month = {aug.},
  abstract = {This paper tells the story of how the team managed to speed up delivery
	whilst raising quality at the same time, conject used to release
	complete modules of their Internet platform once every six months.
	Customers were forced to wait for months to get access to new features.
	Once they arrived, the big bang releases disrupted the user experience
	due to bugs lurking in the new software. Despite what seemed to be
	an impossible task, the team successfully transformed their software
	development process to deliver a stable and continuous flow of small
	releases. Now features are delivered to customers more quickly and
	with much higher quality.},
  doi = {10.1109/AGILE.2007.64},
  keywords = {Internet platform;continuous flow;six month release cycle;software
	development process;Internet;software engineering;}
}

@INPROCEEDINGS{4293599,
  author = {Plante, M.},
  title = {Death of the Cubicle; the Open Office Experiment},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {218 -224},
  month = {aug.},
  abstract = {Open office environments are critical to the success of agile projects,
	but transitioning an organization from traditional cubicles to an
	open office environment can be difficult and uncomfortable. Our company
	successfully accomplished this in a stepwise fashion that allowed
	us to gain acceptance from the developers and management; the end
	result was an office environment that allows our agile teams to excel.
	Part of this transition included an open office experiment where
	we moved 38 engineers into an open office environment and studied
	the impact and implications. This report describes our findings from
	the open office experiment.},
  doi = {10.1109/AGILE.2007.21},
  keywords = {agile project;open office environment;open office experiment;traditional
	cubicles;office environment;}
}

@INPROCEEDINGS{4293623,
  author = {Bradley, R.},
  title = {Push to Pull: How Lean Concepts Improve a Data Migration},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {365 -370},
  month = {aug.},
  __markedentry = {[kimi:1]},
  abstract = {A complex enterprise relationship planning (ERP) data migration was
	in trouble: low quality, poor performance, instability, and an overworked
	team threatened project success. Facing failure, a small group of
	the original developers achieved a tremendous turnaround by applying
	lean and theory of constraints (TOC) concepts directly to the data
	migration architecture. Their success shows how agile applies beyond
	software development, and can help others look for new ways to solve
	problems.},
  doi = {10.1109/AGILE.2007.48},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {complex enterprise relationship planning;data migration architecture;software
	development;theory of constraints;data handling;enterprise resource
	planning;software engineering;}
}

@INPROCEEDINGS{4293594,
  author = {Tengshe, A. and Noble, S.},
  title = {Establishing the Agile PMO: Managing variability across Projects
	and Portfolios},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {188 -193},
  month = {aug.},
  abstract = {Our portfolio management office helps to balance the demand on the
	firm's resources from multiple competing and sometimes inter-dependent
	projects. Traditional project/portfolio management office supports
	the project/portfolio managers. As more and more of our project managers
	become scrum masters and the portfolio managers becomes the group
	scrum master, our portfolio management office needed to become agile
	itself. We converted our traditional PMO that supported the project
	managers to an agile PMO that staffed experienced agile coaches who
	supported the different portfolio and agile project teams. The services
	included conducting agile training, starting up new agile teams,
	encouraging team empowerment, transforming existing roles, artifacts
	and processes to become more agile, capturing metrics across portfolio
	and project teams and creating the management reports. We are sharing
	the lessons learned and hopeful that it will benefit those starting
	on the Agile adoption journey.},
  doi = {10.1109/AGILE.2007.24},
  keywords = {agile PMO;agile training;interdependent projects;portfolio management
	office;scrum masters;team empowerment;traditional project;financial
	data processing;software development management;}
}

@INPROCEEDINGS{4293568,
  title = {Message from the Program Chairs},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {xi},
  month = {aug.},
  __markedentry = {[kimi:1]},
  abstract = {Agile 2007 is the premier international conference on Agile Software
	Development. Looking back on the conference series shows that the
	agile community has come a long way. The first Agile Conference in
	North America was called XP Universe 2001 and was held in Raleigh.
	At that time, about 230 people attended the conference. For the following
	years, this conference was renamed XP Agile Universe. Growing slowly,
	it moved to different locations in North America: Chicago (2002),
	New Orleans (2003, about 250 participants), and Calgary (2004, about
	320 participants). In 2003, a second North American conference started.
	The Agile Development Conference was held in Salt Lake City in 2003
	and 2004. In 2005, both conference series were merged into the Agile
	20xx conference series. Agile 2005 was held in Denver, Agile 2006
	in Minneapolis, and Agile 2007 is now in Washington, DC. At the same
	time, Agile methods were taking off in the software industry and
	participation was exploding. For Agile 2007, we are now expecting
	1100+ participants????????? making it the largest international conference
	on agile approaches to software development. This year, the program
	of the conference covers a wide spectrum of topics and provides high-quality
	sessions for all levels of expertise on agile topics as well as many
	different job roles. Nearly 20 concurrent sessions ensure that at
	any time participants have many interesting presentations, hands-on
	sessions, tutorials, and workshops from which to choose. Agile 2007
	will be an exciting conference about techniques and technologies,
	attitudes and policies, research and experience, and the management
	and development sides of agile software development. The program
	was selected in a peer-review process from hundreds of submissions
	from world leading experts on agile methodologies. It contains introductory
	tutorials, advanced interactive sessions, cutting-edge research,
	and reports about the latest experiences. It will allow anyone to
	learn someth- ng new about the application of agile methods to real
	world software development problems.},
  doi = {10.1109/AGILE.2007.41},
  excluded = {Kimi, title},
  excludekimi = {title}
}

@INPROCEEDINGS{4293586,
  author = {Fry, C. and Greene, S.},
  title = {Large Scale Agile Transformation in an On-Demand World},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {136 -142},
  month = {aug.},
  abstract = {Salesforce.com has recently completed an agile transformation of a
	two hundred person team within a three month window. This is one
	of the largest and fastest "big-bang" agile rollouts. This experience
	report discusses why we chose to move to an agile process, how we
	accomplished the transformation and what we learned from applying
	agile at scale.},
  doi = {10.1109/AGILE.2007.38},
  keywords = {Salesforce.com;big-bang agile rollouts;large scale agile transformation;ondemand
	world;business data processing;transforms;}
}

@INPROCEEDINGS{4293595,
  author = {Hodgkins, P. and Hohmann, L.},
  title = {Agile Program Management: Lessons Learned from the VeriSign Managed
	Security Services Team},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {194 -199},
  month = {aug.},
  abstract = {This report examines how the VeriSign Managed Security Services (MSS)
	has successfully extended agile software development practices to
	deal with a complex, multi-product development organization. It showcases
	how VeriSign overcame several key challenges in the adoption of agile,
	such as the need to restructure the teams, and shows how the program
	management office provided organizational "glue" to hold things together
	to ensure a successful transition. It introduces several novel approaches
	to product-centric agile development, including the replacement of
	traditional market requirements documents (MRDs) with a "fast track"
	business concept, and shows how cross-functional prioritization processes
	enable agility. It demonstrates how VeriSign collaborated with external
	consultants to ensure that best-practices were adopted and suggests
	ways that other companies can effectively manage the client-consultant
	dynamic. We conclude with an exploration of areas for further development,
	focusing on project level metrics for corporate planning.},
  doi = {10.1109/AGILE.2007.11},
  keywords = {VeriSign Managed Security Services team;agile program management;agile
	software development practices;corporate planning;cross-functional
	prioritization processes;fast track business concept;market requirements
	documents;multiproduct development organization;product-centric agile
	development;program management office;project level metrics;DP industry;organisational
	aspects;product development;project management;software management;software
	metrics;}
}

@INPROCEEDINGS{4293600,
  author = {Silva, K. and Doss, C.},
  title = {The Growth of an Agile Coach Community at a Fortune 200 Company},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {225 -228},
  month = {aug.},
  abstract = {Adopting Agile takes courage, perseverance, and continued reinforcement.
	To meet these needs, a community of Agile coaches organically emerged
	at capital one to provide support and mentoring for projects and
	organizations seeking to adopt Agile. The community has evolved into
	an influential body of change agents, which routinely meets to address
	team or organizational initiatives in Agile projects across the enterprise.
	By creating an environment where true community can exist and grow,
	we have added sustainability to our Agile adoption processes and
	enabled continuous innovation of practices and principles.},
  doi = {10.1109/AGILE.2007.56},
  keywords = {Fortune 200 company;agile coach community;organizational initiatives;electronic
	commerce;organisational aspects;}
}

@INPROCEEDINGS{4293592,
  author = {Moore, R. and Reff, K. and Graham, J. and Hackerson, B.},
  title = {Scrum at a Fortune 500 Manufacturing Company},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {175 -180},
  month = {aug.},
  abstract = {In a mature fortune 500 manufacturing company, such as 3M Company,
	many processes and procedures for developing products have been put
	in place over the years. Many of these tools and procedures are very
	formal with a focus on developing and releasing products that are
	to be mass manufactured worldwide by the thousands. Software development
	at 3M has traditionally been force fit into these processes with
	less than optimal success. This paper outlines our experience in
	introducing the Scrum technique of agile software development into
	such a formalized environment.},
  doi = {10.1109/AGILE.2007.53},
  keywords = {3M Company;Scrum technique;agile software development;DP industry;product
	development;software engineering;}
}

@INPROCEEDINGS{4293618,
  author = {Williams, M. and Packlick, J. and Bellubbi, R. and Coburn, S.},
  title = {How We Made Onsite Customer Work - An Extreme Success Story},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {334 -338},
  month = {aug.},
  __markedentry = {[kimi:]},
  abstract = {The Agile Manifesto emphasizes customer collaboration over contract
	negotiation. No Extreme Programming practice embodies this more than
	onsite customer. This paper describes our experience in adopting
	onsite customer in an environment where the practice was long considered
	impractical. We successfully overcame many obstacles to bring busy
	airline employees for extended periods of time to our development
	site thousands of miles from their homes and have them work with
	our team. We have realized significant gains in productivity, quality,
	and customer satisfaction as a result. Onsite customer has now become
	a standard way of doing business.},
  doi = {10.1109/AGILE.2007.33},
  keywords = {Agile Manifesto;airline employee working;contract negotiation;customer
	satisfaction;extreme programming practice;onsite customer collaboration;productivity
	gain;quality gain;software development;contracts;customer satisfaction;groupware;personnel;programming;software
	engineering;travel industry;}
}

@INPROCEEDINGS{4293583,
  author = {Hanks, B.},
  title = {Becoming Agile using Service Learning in the Software Engineering
	Course},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {121 -127},
  month = {aug.},
  __markedentry = {[kimi:1]},
  abstract = {This experience report describes a three year journey toward agility
	in a software engineering course. Students in the course work in
	small project teams to develop an application for a real client using
	the service-learning model. In the first year, a formal plan-driven
	approach was used, and only two of four projects were completed successfully.
	A more agile approach was taken the second year, but there were still
	failing projects. In the third year a highly agile approach based
	on short iterations and user stories was used. This was more successful,
	as every project team delivered working software to their clients.
	This paper also discusses some of the challenges of managing and
	evaluating student work when using agile methods.},
  doi = {10.1109/AGILE.2007.18},
  excluded = {Verify (Kimi)},
  excludekimi = {title},
  keywords = {agile methods;service learning;software engineering course;working
	software;computer science education;educational courses;software
	engineering;}
}

@INPROCEEDINGS{4293603,
  author = {Cloke, G.},
  title = {GET YOUR AGILE FREAK ON! Agile Adoption at Yahoo! Music},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {240 -248},
  month = {aug.},
  abstract = {Few businesses are more volatile than the internet; few markets as
	fiercely contested as the still-emerging, passion-inducing and fast-paced
	world of digital music. What better opportunity, therefore, to apply
	agile principles as a means of delivering maximum value to a mass
	market while embracing chaotic change? Yet the elements that made
	Yahoo! Music cry out for an agile approach also presented major stumbling
	blocks - not least the challenge of harnessing teams and technology
	obtained by serial acquisition, with competing passions, perspectives
	and technical expertise. Ultimately the team was able to face and
	overcome these challenges by unifying around an increasingly agile
	business philosophy that addresses not only software development,
	but the entire Music organization. In this experience report, the
	lessons of agile adoption at Yahoo! Music are considered, applied
	and finally distilled into a set of general principles that we hope
	might inspire other teams to get their agile freak on!},
  doi = {10.1109/AGILE.2007.30},
  keywords = {Internet;Yahoo! Music;agile business philosophy;agile principles;digital
	music;mass market;serial acquisition;software development;Web sites;music;}
}

@INPROCEEDINGS{4293631,
  author = {Baker, S.W. and Thomas, J.C.},
  title = {Agile Principles as a Leadership Value System: How Agile Memes Survive
	and Thrive in a Corporate IT Culture},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {415 -420},
  month = {aug.},
  abstract = {What agile approaches are effective to introduce and sustain meaningful
	change in an IT organization? How can agile approaches be leveraged
	beyond project work? What processes are involved in introducing agile
	approaches into an organization, and how might a leader become more
	agile in adopting agile approaches? DTE Energy's Information Technology
	Services (ITS) organization continues to embrace and extend the agile
	mindset throughout its culture. Our organization first embraced agility
	eight years ago, and we continue to refine our agile methodologies
	as we deliver and support world-class business solutions. The more
	we apply agile methods to our project work, the more we find them
	to be of value to leadership as well as operational work. In this
	report we discuss our experiences applying agile methods outside
	of software development projects in a broader context of operational
	work and organizational leadership. We assert that agile principals
	and techniques associated with software development projects can
	be readily applied in other types of organizational work and in creating
	and sustaining an effective leadership culture.},
  doi = {10.1109/AGILE.2007.10},
  keywords = {agile method;corporate IT culture;leadership value system;software
	development project;DP industry;project management;software development
	management;}
}

@INPROCEEDINGS{4293607,
  author = {Packlick, J.},
  title = {The Agile Maturity Map A Goal Oriented Approach to Agile Improvement},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {266 -271},
  month = {aug.},
  abstract = {Fulfilling the potential of agile development depends on people truly
	wanting to change how they work. Transitioning to new methods of
	development is particularly daunting in a large organization that
	already has a sizeable existing code base and a broad set of existing
	customers. In our experience, development teams tend to reach a plateau
	implementing a subset of agile practices, and those tend to be generally
	focused on the planning and iterative aspects of agile. This paper
	describes our experience in overcoming the barriers to increasing
	the adoption of agile practices. Drawing from agile principles, we
	have developed an approach for improvement that enables teams to
	accelerate change, deepen their degree of understanding, and increase
	their success in execution. We have found this helps teams to overcome
	the plateau effect.},
  doi = {10.1109/AGILE.2007.55},
  keywords = {agile maturity map;planning;agile manufacturing;planning;}
}

@INPROCEEDINGS{4293572,
  author = {Johnson, P.M. and Hongbing Kou},
  title = {Automated Recognition of Test-Driven Development with Zorro},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {15 -25},
  month = {aug.},
  __markedentry = {[kimi:2]},
  abstract = {Zorro is a system designed to automatically determine whether a developer
	is complying with an operational definition of test-driven development
	(TDD) practices. Automated recognition of TDD can benefit the software
	development community in a variety of ways, from inquiry into the
	"true nature" of TDD, to pedagogical aids to support the practice
	of test-driven development, to support for more rigorous empirical
	studies on the effectiveness of TDD in both laboratory and real world
	settings. This paper introduces the Zorro system, its operational
	definition of TDD, the analyses made possible by Zorro, and our ongoing
	efforts to validate the system.},
  doi = {10.1109/AGILE.2007.16},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {Zorro system;automated recognition;software development;test-driven
	development;program testing;software engineering;}
}

@INPROCEEDINGS{4293602,
  author = {Lawrence, R.},
  title = {XP and Junior Developers: 7 Mistakes (and how to avoid them)},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {234 -239},
  month = {aug.},
  abstract = {In two years of leading agile projects at Avanade, an organization
	heavy in recent college hires, the author learned a number of lessons
	about how to be successful with junior developers on an agile team.
	Indeed, my most successful team has been my most junior. The author
	discovered that my biggest mistakes with junior teams were related
	to partially adopting XP. Where a senior team, by virtue of its experience,
	can adapt to replace missing XP practices, a junior team reveals
	the extent to which the XP practices form a whole and are best adopted
	together.},
  doi = {10.1109/AGILE.2007.67},
  excluded = {Kimi, title},
  keywords = {agile projects;extreme programming;junior developers;programming;software
	development management;}
}

@INPROCEEDINGS{4293604,
  author = {Borges, S. and Gilmore, J. and Oliveira, S.E.},
  title = {Agile: Adopting a New Methodology at Harvard Business School},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {249 -254},
  month = {aug.},
  abstract = {As academic institutions become more reliant on Information Technology
	for everyday work and learning, Harvard Business School needed to
	find a better way to meet the ever-increasing demands of the faculty,
	staff, and student body without increasing resources. Adopting the
	Agile methodology was our way of responding proactively to these
	changes and in little over a year we have successfully implemented
	many projects with impressive results. This paper will discuss how
	we were able to become Agile, our challenges, lessons learned, and
	what we gained from this change.},
  doi = {10.1109/AGILE.2007.12},
  keywords = {Harvard Business School;academic institution;agile methodology;organisational
	aspects;educational institutions;organisational aspects;}
}

@INPROCEEDINGS{4293627,
  author = {Lewis, J. and Neher, K.},
  title = {Over the Waterfall in a Barrel - MSIT Adventures in Scrum},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {389 -394},
  month = {aug.},
  abstract = {This paper describes how a large, traditional amp; globally distributed
	IT organization is responding to the grassroots introduction of agile
	methodologies into a strongly waterfall based development culture.},
  doi = {10.1109/AGILE.2007.45},
  keywords = {MSIT adventures;agile methodologies;barrel;globally distributed IT
	organization;waterfall;DP industry;}
}

@INPROCEEDINGS{4293622,
  author = {Simpson, J. and Shane Duan},
  title = {Large Build Teams: Help or Hindrance?},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {359 -364},
  month = {aug.},
  abstract = {Should we use build and deployment teams on large projects? Build
	and deployment work often emerges as a specialization on project
	teams. This specialization becomes important on medium to large projects
	as the complexity of deploying code and configuring enterprise environments
	increases. However, how do we coordinate the work of this team with
	the work of the development teams and how do we ensure this team
	helps the development team that it serves rather than hinders it?
	In this report we share the experience of an eight person distributed
	agile build team on a large bespoke software project at an investment
	bank. The report spans the formation of the team from the USA, the
	UK and India to the adjournment of the team after finishing the deployment
	to production on time without fuss. Topics include: how we worked
	in a distributed agile 8-10 person team in San Francisco and London,
	how we used agile methods to track build and deployment tasks; how
	we worked in iterations, estimated the work for each iteration, and
	tracked velocity over time.},
  doi = {10.1109/AGILE.2007.37},
  keywords = {deployment work;development team;distributed agile build team;investment
	bank;project team;software project;project management;software management;team
	working;}
}

@INPROCEEDINGS{4293593,
  author = {Armitage, A. and Wisniewski, P. and de-Ste-Croix, A.},
  title = {Greater successes by using Agile Techniques closer to the light bulb
	moment},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {181 -193},
  month = {aug.},
  abstract = {BT, as part of its Agile transformation, has widened its Agile footprint
	into the demand-side of its business. This is being achieved by using
	Agile techniques in a forum called an Agile round table (ART), which
	is run as early as possible in the decision making process for new
	concepts. In this context, we present an overview of this forum as
	created and used in BT. Using an early example, this experience report
	illustrates the preparation and running of this forum and how, by
	working closer to "the light bulb moment", we have derived further
	successes by using Agile techniques.},
  doi = {10.1109/AGILE.2007.31},
  keywords = {Agile round table;Agile techniques;business value;decision making
	process;decision making;electronic commerce;}
}

@INPROCEEDINGS{4293630,
  author = {Rowley, D. and Lange, M.},
  title = {Forming to Performing: The Evolution of an Agile Team},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {408 -414},
  month = {aug.},
  abstract = {Using Bruce Tuckman 's [1] "Forming - Storming - Norming - Performing"
	model of team development we review the effects of change on our
	team through each stage. We go on to show how in certain cases this
	change is cyclic and techniques abandoned in one phase may well be
	re-introduced in another. While tools, techniques and processes may
	change we observed that despite the cultural change there is one
	thing that remains constant: The agile principles and values.},
  doi = {10.1109/AGILE.2007.28},
  keywords = {agile team;team development;software development management;}
}

@INPROCEEDINGS{4293617,
  author = {Lowery, M. and Evans, M.},
  title = {Scaling Product Ownership},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {328 -333},
  month = {aug.},
  abstract = {Many people ask the question "Does Scrum scale?" especially those
	who have been scarred by Scrum done badly or those who are resistant
	to change. Our experience has led us to believe that Scrum can be
	scaled effectively but not without a few bloody noses along the way.
	Scrum teams with Scrum masters seems to scale naturally especially
	where strong technical leadership is applied. However, we ran into
	problems in scaling the role of product owner. This report shows
	what we did to scale product ownership and the highs and lows of
	the journey we took getting there.},
  doi = {10.1109/AGILE.2007.51},
  keywords = {Scrum;scaling product ownership;technical leadership;product development;project
	management;}
}

@INPROCEEDINGS{4293596,
  author = {Seffernick, T.R.},
  title = {Enabling Agile in a Large Organization Our Journey Down the Yellow
	Brick Road},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {200 -206},
  month = {aug.},
  abstract = {KeyCorp, a financial institution with $90 billion in assets, has been
	working hard to transition from a waterfall approach to an agile
	approach for software development. This paper shares the story of
	KeyCorp's journey down the Yellow Brick Road to the Land of Agile.},
  doi = {10.1109/AGILE.2007.23},
  keywords = {KeyCorp financial institution;agile approach;software development;waterfall
	approach;financial data processing;software engineering;}
}

@INPROCEEDINGS{4293601,
  author = {Jochems, R. and Rodgers, S.},
  title = {The Rollercoaster of Required Agile Transition},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {229 -233},
  month = {aug.},
  abstract = {How do you move from a waterfall world to an agile world rapidly without
	upsetting the apple cart and all the people that are involved in
	the project? This Experience Report focuses on the transition of
	a project team being forced by management to use agile principles
	and practices and the trials and tribulations of the experience.},
  doi = {10.1109/AGILE.2007.59},
  keywords = {IT management;agile transition;project managament;software development
	management;project management;software development management;}
}

@INPROCEEDINGS{4293584,
  author = {Davies, R. and Martin, A.},
  title = {Introduction: Experience Reports},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {128},
  month = {aug.},
  __markedentry = {[kimi:1]},
  abstract = {Experience reports are written by agile practitioners to share their
	project stories with the wider agile community. Our authors explain
	- what they tried, how their teams battled with obstacles along the
	way and summarize their lessons learned. You will find that reports
	presented here offer unique insights on how agile methods can be
	applied in a variety of challenging industrial contexts and you will
	hear personal perspectives on how well agile approaches work in the
	real world.},
  doi = {10.1109/AGILE.2007.35},
  excludekimi = {title}
}

@INPROCEEDINGS{4293612,
  author = {Beavers, P.A.},
  title = {Managing a Large "Agile" Software Engineering Organization},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {296 -303},
  month = {aug.},
  abstract = {This is the story of my business and personal transformation as our
	department adopted the Agile methodology. The bumps and bruises along
	the way forced a shift in management philosophy. Embracing the transformation
	has enabled significant success within the company. The confidence
	of our customers and internal organizations in our ability to deliver
	high quality software has increased dramatically. Software releases
	are now delivered on time with an improved level of quality. However,
	this success did not necessarily come easily. There were many obstacles
	to overcome as this large organization transformed itself from a
	largely waterfall development organization into a high-output agile
	development machine. This article presents this transformation and
	the impact it had on the organization's leadership and management
	styles.},
  doi = {10.1109/AGILE.2007.40},
  keywords = {agile development machine;agile software engineering organization;management
	philosophy;organization leadership;organization management;quality
	software;organisational aspects;software management;software quality;}
}

@INPROCEEDINGS{4293609,
  author = {Hai Ton},
  title = {A Strategy for Balancing Business Value and Story Size},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {279 -284},
  month = {aug.},
  abstract = {What would your analyst team do when torn between meeting customer
	versus developer demands? When their needs conflict with one another,
	how do you appease them both? The report outlines the successful
	strategy one team used to decompose their stories to serve both the
	development team needs to demonstrate progress as well as address
	customer needs to see value. Teams adopting agile for the first time
	in an enterprise environment will no doubt encounter these very same
	challenges. Faced with similar start-up challenges on future projects,
	with this decomposition strategy, teams will no longer have to make
	the trade-off between business value and story size; stories of happy
	customers, happy developers and successful projects can still be
	told.},
  doi = {10.1109/AGILE.2007.2},
  excluded = {Kimi, title},
  keywords = {agile development;business value balancing;customer needs;enterprise
	environment;business data processing;customer satisfaction;software
	engineering;team working;}
}

@INPROCEEDINGS{4293576,
  author = {Lee, J.C. and McCrickard, D.S.},
  title = {Towards Extreme(ly) Usable Software: Exploring Tensions Between Usability
	and Agile Software Development},
  booktitle = {Agile Conference (AGILE), 2007},
  year = {2007},
  pages = {59 -71},
  month = {aug.},
  abstract = {Design is an inherently multidisciplinary endeavor. This raises the
	question of how to develop systems in ways that can best leverage
	the perspectives, practices, and knowledge bases of these different
	areas. Agile software development and usability engineering both
	address important aspects of system design, but there are tensions
	between the methods that make them difficult to integrate. This work
	presents a development approach that draws from extreme programming
	(XP), a widely practiced agile software development process, and
	scenario-based design (SBD), an established usability engineering
	process. It describes three key questions that need to be addressed
	for agile software development methods and usability engineering
	practices to work together effectively, and it introduces interface
	architectures and design representations that can address these questions.},
  doi = {10.1109/AGILE.2007.63},
  excluded = {Kimi, title},
  keywords = {agile software development;design representations;extreme programming;interface
	architectures;scenario-based design;usability engineering;usable
	software;software engineering;}
}

@INPROCEEDINGS{5562811,
  author = {Ghanam, Y. and Andreychuk, D. and Maurer, F.},
  title = {Reactive Variability Management in Agile Software Development},
  booktitle = {Agile Conference (AGILE), 2010},
  year = {2010},
  pages = {27 -34},
  month = {aug.},
  abstract = {Agile organizations focus on developing software systems that satisfy
	their current customer base, without worrying about best practices
	to handle variations of requirements in the system. Scaling agile
	methods up to adopt variability management practices in their traditional
	form is challenging. In this paper, we discuss the challenges and
	we contribute a lightweight, iterative approach that enables agile
	organizations to manage variability on demand in a reactive manner.
	The approach relies on agile practices like iterative development,
	refactoring, and continuous integration and testing. We present a
	case study to show how the approach was used to handle variability
	arising from technical and usability issues, and we provide a discussion
	of the advantages and limitations of the approach.},
  doi = {10.1109/AGILE.2010.6},
  excluded = {Kimi, title},
  keywords = {Scaling Agile Methods;agile software development;iterative approach;reactive
	variability management;iterative methods;management information systems;software
	development management;software prototyping;}
}

@INPROCEEDINGS{5562809,
  author = {Bernhart, M. and Mauczka, A. and Grechenig, T.},
  title = {Adopting Code Reviews for Agile Software Development},
  booktitle = {Agile Conference (AGILE), 2010},
  year = {2010},
  pages = {44 -47},
  month = {aug.},
  abstract = {Code reviews have many benefits, most importantly to find bugs early
	in the development phase and to enforce coding standards. Still,
	it is widely accepted that formal code reviews are time-consuming
	and the practical applicability in agile development is controversial.
	This work presents a continuous differential-based method and tool
	for code reviews. By using a continuous approach to code reviews,
	the review overhead can be reduced and the effectiveness and applicability
	in agile environments shall be improved.},
  doi = {10.1109/AGILE.2010.18},
  keywords = {agile development;agile software development;code review;coding standards;continuous
	differential based method;program debugging;software development
	management;software prototyping;software tools;}
}

@INPROCEEDINGS{5562805,
  author = {Power, K.},
  title = {Stakeholder Identification in Agile Software Product Development
	Organizations: A Model for Understanding Who and What Really Counts},
  booktitle = {Agile Conference (AGILE), 2010},
  year = {2010},
  pages = {87 -94},
  month = {aug.},
  abstract = {Stakeholder Theory is an area of strategic management that defines
	a stakeholder as someone who affects or is affected by the actions
	of the organization. The principles and concepts of stakeholder theory
	can be applied to software development organizations to give managers
	a better understanding of the diverse community of stakeholders that
	influence product development efforts. A deeper understanding of
	the broad community of stakeholders can help an organization that
	is transitioning to agile methods by highlighting the stakeholders
	that are affected. This paper describes the application of stakeholder
	theory to product development organizations in the context of a global
	product development company undergoing a multi-year transition to
	agile development. A model is presented for mapping stakeholders
	into stakeholder groups, and for quantifying the influence of stakeholders.
	This paper further uses a stakeholder approach to demonstrate how
	traditional organization roles map to roles in an agile product development
	organization.},
  doi = {10.1109/AGILE.2010.17},
  keywords = {agile software product development organization;global product development
	company;multiyear transition;stakeholder identification;stakeholder
	theory;stakeholders mapping;strategic management;product development;software
	development management;software houses;software prototyping;}
}

@INPROCEEDINGS{5562810,
  author = {Esfahani, H.C. and Yu, E. and Annosi, M.C.},
  title = {Capitalizing on Empirical Evidence during Agile Adoption},
  booktitle = {Agile Conference (AGILE), 2010},
  year = {2010},
  pages = {21 -24},
  month = {aug.},
  abstract = {Despite high expectations, agile methods have not always produced
	the desired results. The suitability of various agile practices depends
	on many situational factors, such as team size, project complexity,
	individuals competence, etc. As agile practices have become increasingly
	widespread, there is a growing body of literature that reports on
	empirical experiences, including factors that contribute to successful
	or problematic adoptions. However, this considerable body of knowledge
	is hard for the busy practitioner to digest, synthesize, and put
	to practice for the specific context at hand. Our previous work introduced
	a repository of agile methods that provides evidential knowledge
	about the needed conditions (requisites) and promised benefits (objectives)
	of various Agile Method Fragments (AMFs). The knowledge was gathered
	through systematic review of empirical studies which investigated
	the enactment of agile methods in various project situations. This
	paper reports the use of repository in a software process improvement
	initiative in one of the R amp;D units of Ericsson Company in Italy.},
  doi = {10.1109/AGILE.2010.7},
  keywords = {agile method;software development;software process improvement;software
	repository;software prototyping;}
}

@INPROCEEDINGS{5562808,
  author = {Xiaocheng Ge and Paige, R.F. and McDermid, J.A.},
  title = {An Iterative Approach for Development of Safety-Critical Software
	and Safety Arguments},
  booktitle = {Agile Conference (AGILE), 2010},
  year = {2010},
  pages = {35 -43},
  month = {aug.},
  abstract = {The benefits ascribed to Agile methods are attractive to software
	engineers working in the safety-critical software domain. There is
	limited industrial experience and evidence of successful applications
	of Agile methods in this domain, however, academic research has identified
	some of the key challenges of their adoption and application, and
	has started to present feasibility studies. In this paper, we propose
	an iterative approach for developing safety-critical software, making
	two novel contributions. Firstly, we address the notion of up-front
	design in safety-critical software development, and describe the
	characteristics fan up-front design that is minimal from the perspective
	of achieving safety objectives. Secondly, we identify a key difficulty
	of using iterative development for building safety-critical software,
	and present a way to develop both a software system and a safety
	argument iteratively. We also give details of a proof-of-concept
	example illustrating the use of the approach.},
  doi = {10.1109/AGILE.2010.10},
  keywords = {iterative development;safety argument;safety critical software development;up-front
	design;iterative methods;safety-critical software;software prototyping;}
}

@INPROCEEDINGS{6005573,
  author = {O'Connor, C.P.},
  title = {Anatomy and Physiology of an Agile Transition},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {302 -306},
  month = {aug.},
  abstract = {A macro view of an enterprise transition from the point of view of
	a coach in the trenches. What brought about the transition that this
	group undertook, previously described in"Letters from the Edge of
	an Agile Transition?" What was the ecology the team metamorphosed
	in? Follow me as I uncover the answers to these questions and more.
	Read how a high level sponsor set out to alleviate the pain of an
	organization. Hear some of the details that lead him to champion
	that change. Find out how the organization continues to learn and
	grow now that the beginning of the transition is over.},
  doi = {10.1109/AGILE.2011.25},
  keywords = {agile transition;anatomy;ecology;enterprise transition;physiology;business
	process re-engineering;software prototyping;}
}

@INPROCEEDINGS{6005524,
  author = {Abdel-Hamid, A.N. and Abdel-Kader, M.A.},
  title = {Process Increments: An Agile Approach to Software Process Improvement},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {195 -200},
  month = {aug.},
  abstract = {Process Increments' is an iterative and incremental approach to manage
	software process improvement projects. It partitions the scope into
	user-story-like increments, and manages the whole project using agile
	estimating and planning techniques. This approach has been applied
	to five enterprises and showed sustained improvement velocity, good
	project visibility, and on-going learning experiences by project
	teams.},
  doi = {10.1109/AGILE.2011.26},
  keywords = {agile approach;planning techniques;process increments;software process
	improvement;software process improvement project;user story like
	increments;project management;software process improvement;software
	prototyping;}
}

@INPROCEEDINGS{6005829,
  title = {Message from the Conference Chairs},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {ix},
  month = {aug.},
  __markedentry = {[kimi:1]},
  abstract = {The accepted papers from the insights and research at work stages
	at Agile2011 are documented in the IEEE Xplore digital library. We
	are proud to present a set of high?????????quality papers, focusing
	on a variety of aspects such as lean software development, collaboration,
	explanations of agile methods, user?????????centered design, how
	agile practices can be spread, how to keep them effective, how various
	teams have combined agile and lean practices, and how decision making
	is done on agile projects. The Insights stage received 64 submissions,
	including several that were recommended from other stages. Only 28
	submissions were accepted for shepherding. This limit was due to
	the number of shepherds and the number of submissions each shepherd
	was able to adopt. Over two months, authors of accepted proposals
	completely wrote and revised their insights papers with helpful comments
	and review by their shepherds. After two months of intense interaction
	between insights authors and shepherds, 26 finished papers were accepted
	for publication in the IEEE proceedings and for presentation at the
	conference. We truly appreciate the hard work of all authors and
	shepherds who worked through many iterations of feedback. For the
	Research at Work stage we received in total 31 papers, 24 full papers
	and 7 workshop contributions. We rejected 4 full papers without review,
	the rest went through a double?????????blind review process. Thirteen
	papers were selected for presentation at the conference. For the
	New ideas and Emerging Results workshop, we accepted four, and further
	invited four of the rejected full papers to shorten their contribution.
	In addition, we got one workshop contribution transferred from another
	stage. We are very grateful to the program committee members, who
	along with additional reviewers wrote 94 reviews for the research
	papers, four for each full paper, and two for each workshop contribution.},
  doi = {10.1109/AGILE.2011.4},
  excluded = {Kimi, title},
  excludekimi = {title}
}

@INPROCEEDINGS{6005833,
  author = {van Solingen, R. and Sutherland, J. and de Waard, D.},
  title = {Scrum in Sales: How to Improve Account Management and Sales Processes},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {284 -288},
  month = {aug.},
  abstract = {Like most client service units, the sales and account management teams
	at iSense accepted that sales are a random, reactive process. After
	all, customers, not sales managers, decide whether or not to buy.
	Then, after deciding to learn more about a certain offering, Scrum
	training, the teams found a way to take more control over this process.
	In the fall of 2010, the iSense sales and account management teams
	decided to adopt Scrum internally as their best practice. Scrum transformed
	the random process, revealing early indicators related to final sales
	results, and showed that the direct causes for closing a deal could
	be detected and controlled. Once it became possible to predict and
	influence final order intake and sales numbers, the sales teams used
	early predictive indicators to proactively control their work. With
	the sales processes under better control, the teams could improve
	continuously and have more fun at work. Strategically implementing
	Scrum into sales and account management has lead to escalating revenue
	and a sustainable competitive advantage.},
  doi = {10.1109/AGILE.2011.12},
  keywords = {account management;early predictive indicators;iSense;sales processes;scrum
	training;sustainable competitive advantage;sales management;}
}

@INPROCEEDINGS{6005525,
  author = {Power, K.},
  title = {The Agile Office: Experience Report from Cisco's Unified Communications
	Business Unit},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {201 -208},
  month = {aug.},
  abstract = {Similar to the way a Project Management Office (PMO) defines standards
	for project management within the organization, an Agile Office governs
	the organization's ongoing agile adoption and continuous improvement
	through agile practices and is responsible for the successful ongoing
	adoption of agile practices throughout the organization. Agile transition
	takes time, it is not a discrete event. When transitioning to agility
	it is important to put in place structures that will ensure that
	agile survives long after the initial transition period. This paper
	describes the experiences of Cisco's Unified Communications Business
	Unit in establishing an Agile Office. It describes the history behind
	establishing the Agile Office, the governance model, where it fits
	in the organization structure, engagement model, primary activities,
	challenges faced, and the stakeholders with whom it operates.},
  doi = {10.1109/AGILE.2011.7},
  keywords = {Cisco;agile office;engagement model;project management office;unified
	communications business unit;professional communication;project management;software
	development management;}
}

@INPROCEEDINGS{6005835,
  author = {Tiwari, G. and Alikhan, Z.},
  title = {From "Team" to "Wow Team": An Agile Team's Journey},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {296 -301},
  month = {aug.},
  abstract = {This paper describes different approaches to successfully conquering
	complacency and ruts in agile practice. It relates how a team on
	a slide, that was drifting away from the "spirit" of agile, changed
	itself to a "wow" team by seeing every problem as an opportunity,
	converting small thoughts into great ideas and finding innovative
	solutions for problems.},
  doi = {10.1109/AGILE.2011.41},
  keywords = {agile team journey;conquering complacency;innovative solutions;wow
	team;software prototyping;}
}

@INPROCEEDINGS{6005516,
  author = {Smits, H. and Rilliet, K.},
  title = {Agile Experience Report: Transition and Complexity at Cisco Voice
	Technology Group},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {274 -278},
  month = {aug.},
  abstract = {The authors spent six month in the center of the roll-out of agile
	practices in the Cisco Voice Technology organization. The roll-out
	started earlier, and is continuing after this period, and many more
	people contributed to the implementation. We learned that following
	an organizational change pattern (we used Kotter's eight step process
	) is helpful to structure the program, and made us aware of where
	we were, and what needed doing first. We found some issues, and while
	working on this paper discovered that others have found similar patterns,
	most notably Linda Rising in her book "Fearless Change". Obstacles
	we found include the necessity to obtain and maintain support of
	leadership, the influence of tooling on the implementation, and the
	need to go step-by-step: get agile skills in teams before attempting
	to change the full Software Development Life Cycle. We had great
	results from made-to-measure training of the teams around the globe,
	from finding a pace-maker process in the development process, and
	from the support of people who lead actual development programs.},
  doi = {10.1109/AGILE.2011.14},
  keywords = {Cisco voice technology organization;agile experience report transition;agile
	practices;full software development life cycle;made-to-measure teams
	training;organizational change pattern;pacemaker process;software
	development management;software prototyping;team working;}
}

@INPROCEEDINGS{6005526,
  author = {Kirk, G.},
  title = {Democracy Unleashed: Bringing Agility to Citizen Engagement},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {209 -215},
  month = {aug.},
  __markedentry = {[kimi:2]},
  abstract = {Empowered individuals. Creative, participatory decision making. Connectedness
	and care for each other. These words apply equally to an Agile organization
	as to a healthy community. What might happen if we applied Agile
	values and methods to transform communities? The author shares his
	experiences from 2009-2011 to nurture citizen engagement in his home
	town and elsewhere, from a team kick start session for an elected
	council to citizen budget games to prioritize the budget. He covers
	tools and methods, trials and triumphs, how Agile applied to community
	differs from organization. This is bleeding edge stuff, an area of
	opportunity for Agile consultants to do work that transforms the
	world.},
  doi = {10.1109/AGILE.2011.39},
  excludekimi = {abstract},
  keywords = {agile organization;bleeding edge stuff;citizen budget games;citizen
	engagement;elected council;participatory decision making;team kick
	start session;decision making;government;public administration;}
}

@INPROCEEDINGS{6005510,
  author = {Ratner, I.M. and Harvey, J.},
  title = {Vertical Slicing: Smaller is Better},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {240 -245},
  month = {aug.},
  abstract = {The technique of vertical slicing was introduced as a mechanism to
	combat our agile software development teams developing tendency toward
	building software in horizontal layers, building one service at a
	time, or grouping stories then breaking them down into layers. Those
	practices resulted in sprint reviews where no functionality could
	be demonstrated to the users and several iterations before all of
	the pieces were working together with useful functionality to show
	to users. Those habits continued when the next wave of projects with
	user interfaces came along. In this paper, we highlight the stories
	of four of our agile teams who tried vertical slicing, the challenges
	they faced, the victories, and the lessons learned.},
  doi = {10.1109/AGILE.2011.46},
  keywords = {agile software development;user interfaces;vertical slicing;program
	slicing;software prototyping;user interfaces;}
}

@INPROCEEDINGS{6005519,
  author = {Wijewardena, T.},
  title = {Do You Dare to Ask Your HR Manager to Practice KANBAN? The Experience
	Report of an Offshore Software Company in Sri Lanka Introducing Agile
	Practices into its Human Resource (HR) Department},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {161 -167},
  month = {aug.},
  abstract = {This paper describes how a mid-sized offshore software development
	company in Sri Lanka, introduced agile practices to its HR department.
	The HR team now facilitates its own proactive agile project organization,
	thus overcoming most of the impediments often experienced by traditional
	HR departments.},
  doi = {10.1109/AGILE.2011.20},
  keywords = {HR manager;KANBAN;Sri Lanka;human resource department;offshore software
	development company;proactive agile project organization;DP industry;human
	resource management;kanban;}
}

@INPROCEEDINGS{6005517,
  author = {Cowan, C.L.},
  title = {When the VP is a Scrum Master, You Hit the Ground Running},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {279 -283},
  month = {aug.},
  abstract = {Companies adopting Scrum as a software development framework often
	start with a pilot project and slowly grow adoption across the organization.
	Unlike this typical incremental implementation of Scrum, Unisys Cloud
	Engineering adopted Scrum throughout the entire organization at the
	same time. The adoption was initiated and supported by upper management.
	This paper describes how the effort started, provides an assessment
	of why this method worked, and details lessons learned that could
	benefit others considering this rollout method.},
  doi = {10.1109/AGILE.2011.31},
  keywords = {Unisys cloud engineering;ground running;rollout method;scrum master;software
	development framework;cloud computing;software prototyping;}
}

@INPROCEEDINGS{6005511,
  author = {Willeke, M.H.H.},
  title = {Agile in Academics: Applying Agile to Instructional Design},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {246 -251},
  month = {aug.},
  __markedentry = {[kimi:2]},
  abstract = {This paper discusses the challenges and strategies of applying agile
	methodology in an academic environment. Both cultural implications
	and quantitative results are discussed. The journey shared provides
	insights for non-software industries on how agile is not a set of
	rules with rigid tools, rather, it is a philosophy with a need to
	understand the intent of the tools in order to identify the appropriate
	application for not just effective results, but maximally effective
	results with a mindset for continued change.},
  doi = {10.1109/AGILE.2011.17},
  excluded = {Verify (Kimi)},
  excludekimi = {abstract},
  keywords = {academic environment;agile methodology;instructional design;nonsoftware
	industries;educational institutions;educational technology;}
}

@INPROCEEDINGS{6005492,
  author = {Senapathi, M. and Srinivasan, A.},
  title = {Understanding Post-Adoptive Agile Usage -- An Exploratory Cross-Case
	Analysis},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {117 -126},
  month = {aug.},
  abstract = {The widespread adoption of agile methodologies raises the question
	of their continued and effective usage in organizations. An agile
	usage model consisting of innovation, sociological, technological,
	team, and organizational factors is used to inform an analysis of
	post-adoptive usage of agile practices in two major organizations.
	Analysis of the two case studies found that a methodology champion
	and top management support were the most important factors influencing
	continued usage, while innovation factors such as compatibility seemed
	less influential. Both horizontal and vertical usage was found to
	have significant impact on the effectiveness of agile usage.},
  doi = {10.1109/AGILE.2011.19},
  keywords = {exploratory cross-case analysis;horizontal usage;innovation model;methodology
	champion;organizational factors;postadoptive agile usage methodology;sociological
	model;team model;technological model;top management support;vertical
	usage;organisational aspects;software prototyping;}
}

@INPROCEEDINGS{6005507,
  author = {Haniotis, J.},
  title = {Innovation Jams: Lessons in Agile Product Development -- An Experience
	Report},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {223 -229},
  month = {aug.},
  abstract = {Accept Corporation, a supplier of software for product innovation
	management that uses crowd-sourcing for ideas and feedback, drank
	some of its own Kool-Aid. The outcome resulted in a much more egalitarian
	culture which both fortified its product team and accelerated its
	rollout of new innovations.},
  doi = {10.1109/AGILE.2011.49},
  excluded = {Kimi, title},
  keywords = {Accept Corporation;Innovation Jam;agile product development;crowd-sourcing;egalitarian
	culture;product innovation management;product team;software supplier;DP
	industry;innovation management;production engineering computing;software
	development management;software prototyping;team working;}
}

@INPROCEEDINGS{6005501,
  author = {Bocock, L. and Martin, A.},
  title = {There's Something about Lean: A Case Study},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {10 -19},
  month = {aug.},
  abstract = {One of the ideas gaining significant interest at the moment is "how
	can we apply Lean manufacturing principles to software development?"
	There is however, limited information on how Lean is being used by
	industry practitioners and if the principles and practices are as
	effective as current interest levels suggest it might be. We have
	used a case study to explore the practicalities of how one high-performing,
	open source team, has adopted Lean practices. We found that the existing
	meritocratic decision-making culture of the team under study appears
	to have greatly assisted the team's application of Lean principles
	to their software development processes.},
  doi = {10.1109/AGILE.2011.44},
  keywords = {high-performing open source team;lean manufacturing principles;lean
	practice;lean principles;software development process;public domain
	software;software development management;team working;}
}

@INPROCEEDINGS{6005486,
  author = {Melo, C. and Cruzes, D.S. and Kon, F. and Conradi, R.},
  title = {Agile Team Perceptions of Productivity Factors},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {57 -66},
  month = {aug.},
  abstract = {In this paper, we investigate agile team perceptions of factors impacting
	their productivity. Within this overall goal, we also investigate
	which productivity concept was adopted by the agile teams studied.
	We here conducted two case studies in the industry and analyzed data
	from two projects that we followed for six months. From the perspective
	of agile team members, the three most perceived factors impacting
	on their productivity were appropriate team composition and allocation,
	external dependencies, and staff turnover. Teams also mentioned pair
	programming and collocation as agile practices that impact productivity.
	As a secondary finding, most team members did not share the same
	understanding of the concept of productivity. While some known factors
	still impact agile team productivity, new factors emerged from the
	interviews as potential productivity factors impacting agile teams.},
  doi = {10.1109/AGILE.2011.35},
  keywords = {agile team member;agile team perception;agile team productivity;pair
	programming;potential productivity factor;productivity factor;staff
	turnover;team composition;productivity;software development management;software
	prototyping;team working;}
}

@INPROCEEDINGS{6005512,
  author = {Nottonson, K.},
  title = {Yahoo! Sports: Sprint 100 and Beyond},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {252 -255},
  month = {aug.},
  abstract = {Yahoo! Sports is the web's leading sports destination. This paper
	examines three transformative events that enabled the Yahoo! Sports
	team to perform daily code releases, deliver innovative features
	to users quicker and learn from their defect and task data faster.},
  doi = {10.1109/AGILE.2011.42},
  keywords = {Web;Yahoo! sports;Internet;sport;}
}

@INPROCEEDINGS{6005499,
  author = {Lv Yi},
  title = {Manager as Scrum Master},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {151 -153},
  month = {aug.},
  abstract = {Manager as Scrum Master? You can not do that! It goes against the
	conventional wisdom, which assumes command and control managers cannot
	lead and coach as Scrum Masters. However, as an important aspect
	in Agile change, self-managing means a management transformation
	from command and control to leading and coaching. This experience
	report will explain how one large-scale organization adopted Agile
	over three years, with the focus on the evolution of Scrum Master
	and manager role and the way they work together. It describes how
	the change regarding self-management was introduced and adapted,
	then how we have tried to sustain the change by creating consistency
	between the values and principles behind Agile into the organization
	and the management capability to practice them.},
  doi = {10.1109/AGILE.2011.8},
  keywords = {agile change;large scale organization;management transformation;scrum
	master;organisational aspects;software prototyping;}
}

@INPROCEEDINGS{6005523,
  author = {Ranganath, P.},
  title = {Elevating Teams from 'Doing' Agile to 'Being' and 'Living' Agile},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {187 -194},
  month = {aug.},
  abstract = {This paper shares experiences steering an agile transformation from
	only focusing on executing (doing) the tenets of a methodology towards
	a direction towards a more sustainable approach that considers such
	'soft' factors as employee productivity, motivation and commitment.},
  doi = {10.1109/AGILE.2011.40},
  keywords = {agile transformation;employee commitment;employee motivation;employee
	productivity;sustainable approach;team evaluation;human resource
	management;personnel;team working;}
}

@INPROCEEDINGS{6005509,
  author = {Block, M.},
  title = {Evolving to Agile: A Story of Agile Adoption at a Small SaaS Company},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {234 -239},
  month = {aug.},
  abstract = {Adopting agile practices is often a long process and one for which
	there is no existing formula for success. Some common patterns are
	beginning to emerge, but many of them focus on adoption within larger
	organizations. While we went through the process of adopting agile
	practices at IASTA, we experienced several challenges that seemed
	to be somewhat unique, or at least more common, in a small, organic
	growth organization. Finding advice and guidance on these challenges
	that could be implemented in our environment from the popular resources
	was challenging. This paper tells the story of our agile adoption
	process in hopes that other organizations in similar situations can
	learn from our experience.},
  doi = {10.1109/AGILE.2011.16},
  keywords = {IASTA;agile adoption process;organic growth organization;small SaaS
	company;cloud computing;software prototyping;}
}

@INPROCEEDINGS{6005491,
  author = {Hellmann, T.D. and Maurer, F.},
  title = {Rule-Based Exploratory Testing of Graphical User Interfaces},
  booktitle = {Agile Conference (AGILE), 2011},
  year = {2011},
  pages = {107 -116},
  month = {aug.},
  __markedentry = {[kimi:2]},
  abstract = {This paper introduces rule-based exploratory testing, an approach
	to GUI testing that combines aspects of manual exploratory testing
	with rule-based test automation. This approach uses short, automated
	rules to increase the bug-detection capability of recorded exploratory
	test sessions. A preliminary evaluation found that this approach
	can be used to detect both general and application-specific bugs,
	but that rules for general bugs are easier to transfer between applications.
	Also, despite the advantages of keyword-based testing, it interferes
	with the transfer of rules between applications.},
  doi = {10.1109/AGILE.2011.23},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {GUI;bug detection;graphical user interfaces;keyword based testing;rule
	based exploratory testing;rule based test automation;graphical user
	interfaces;program debugging;program testing;}
}

@INPROCEEDINGS{6298103,
  author = {Samios, H.-P.},
  title = {Overcoming Traditional Project Release Reporting with an Agile Approach
	Focused on Change},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {131 -135},
  month = {aug.},
  abstract = {If you are an Executive in a large organization Scrum / agile helps
	address a number of issues that you face in releasing products -
	improving quality, predictability, engagement of your people, and
	productivity. You've got help in the form of an Agile Coach and you
	understand that change is required to get these benefits, not only
	for the Scrum teams directly affected but also in the way you think
	about and approach development projects. The transition is making
	progress, and you are seeing improvements at all levels but you cannot
	help feeling that you've lost an understanding of the key decisions
	that the organization needs to make. You still have to run the business,
	to make commitments, and to release products. In the past you had
	information from the product teams that allowed you to understand
	where the issues were. That information seems to have disappeared.
	When you ask for it, you are given a #x201C;release burn-up chart
	#x201D; and are told that #x201C;Scrum means we respond to change
	#x201D; and #x201C;we don't do big upfront planning any more. #x201D;
	How can you get what you need and still be #x201C;Scrum #x201D;,
	still be #x201C;agile #x201D;?},
  doi = {10.1109/Agile.2012.31},
  keywords = {Scrum teams;agile coach;executive management;organization needs;product
	release;product teams;productivity improvement;quality improvement;release
	burn-up chart;business data processing;organisational aspects;productivity;project
	management;software quality;}
}

@INPROCEEDINGS{6298112,
  author = {Prokhorenko, S.},
  title = {Skiing and Boxing: Coaching Product and Enterprise Teams},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {191 -196},
  month = {aug.},
  abstract = {Successful Agile transitions depend on a coaching approach just as
	much as the development of a good sports team. One is not going to
	assign the same exercise programs to a pro skier and a boxer; the
	same applies to different software development teams. In this study
	we summarize experiences from two Agile transformation projects,
	a travel website and investment bank risk management software. We
	discuss common points and distinctive features in requirements management,
	innovations, customer collaboration and team motivation.},
  doi = {10.1109/Agile.2012.30},
  keywords = {agile transformation;agile transitions;coaching product;customer collaboration;enterprise
	teams;innovations;investment bank risk management software;requirements
	management;team motivation;travel Website;Web sites;human resource
	management;innovation management;investment;risk management;software
	prototyping;team working;}
}

@INPROCEEDINGS{6298113,
  author = {Mazzanti, G.},
  title = {Agile in the Bathtub: Developing and Producing Bathtubs the Agile
	Way},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {197 -203},
  month = {aug.},
  __markedentry = {[kimi:1]},
  abstract = {This is a report about the introduction of Agile/Lean methodologies
	at an Italian company producing luxury hydromassage bathtubs and
	showers. Initially focused on product development and portfolio management,
	the Agile/Lean transition has been extended to other departments
	of the company. This has been a significant experience in combining
	Agile and Lean in a non-software context.},
  doi = {10.1109/Agile.2012.27},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {Italian company;agile/lean methodologies;bathtub development;bathtub
	production;luxury hydromassage bathtubs;portfolio management;product
	development;agile manufacturing;lean production;product development;}
}

@INPROCEEDINGS{6298086,
  author = {Isomursu, M. and Sirotkin, A. and Voltti, P. and Halonen, M.},
  title = {User Experience Design Goes Agile in Lean Transformation -- A Case
	Study},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {1 -10},
  month = {aug.},
  abstract = {This paper describes the results of a single-case case study, exploring
	the role of user experience (UX) work in agile software development.
	The case study company is a large multinational telecommunication
	company undergoing a lean transformation process. In this case, lean
	transformation includes the adoption of agile software development
	practices. Transformation to agile practices had taken place one
	year prior to the analysis. The analysis is based on documentation
	analysis and semi-structured interviews of seven software development
	professionals. The results show that there were difficulties integrating
	UX design and software engineering work in an agile and iterative
	manner. The transition process succeeded in shifting UX and related
	documentation to a central planning role. The roles of the UX designers
	in the teams were still under re-definition. There was also a clear
	need to establish new ways of collaboration between UX professionals
	and software designers.},
  doi = {10.1109/Agile.2012.10},
  keywords = {UX design;agile software development;central planning role;documentation
	analysis;iterative manner;large multinational telecommunication company;lean
	transformation process;semi-structured interviews;software engineering;user
	experience design;software prototyping;user centred design;}
}

@INPROCEEDINGS{6298110,
  author = {Casady, C.},
  title = {Applying Agile through Total Immersion -- Going All-In with Agile
	at PH Tech},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {179 -184},
  month = {aug.},
  abstract = {This paper describes a multi-year journey of a growing small business
	and the transition from the blissful ignorance of cowboy-coding through
	the misery and despair of a sinking, dysfunctional organization,
	and on to the satisfaction and exhilaration that comes with a high-functioning
	agile team. This writer wishes that you, dear reader, learns from
	the mistakes in sections II through IV, and starts their team at
	section V.},
  doi = {10.1109/Agile.2012.26},
  keywords = {agile immersion;agile software development;cowboy coding;dysfunctional
	organization;extreme programming;high-functioning agile team;team
	development;software prototyping;}
}

@INPROCEEDINGS{6298109,
  author = {Green, P.},
  title = {Adobe Premiere Pro Scrum Adoption: How an Agile Approach Enabled
	Success in a Hyper-competitive Landscape},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {172 -178},
  month = {aug.},
  abstract = {Adobe Premiere Pro began an agile adoption in 2008, and has had gains
	in product quality, team work-life balance, and market fitness and
	responsiveness. This paper describes how an agile mindset has helped
	Premiere Pro make significant gains in market share and perception,
	improved quality, and created a sustainable pace of development for
	team members.},
  doi = {10.1109/Agile.2012.28},
  keywords = {Adobe Premiere Pro scrum adoption;agile adoption;agile approach;hyper-competitive
	landscape;market fitness;market perception;market responsiveness;market
	share;product quality;team work-life balance;software development
	management;software prototyping;}
}

@INPROCEEDINGS{6298091,
  author = {Soundararajan, S. and Arthur, J.D. and Balci, O.},
  title = {A Methodology for Assessing Agile Software Development Methods},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {51 -54},
  month = {aug.},
  abstract = {Agile methods provide an organization or a team with the flexibility
	to adopt a selected subset of principles and practices based on their
	culture, their values, and the types of systems that they develop.
	More specifically, every organization or team implements a customized
	agile method, tailored to better accommodate its needs. However,
	the extent to which a customized method supports the organizational
	objectives, i.e. the `goodness' of that method, is questionable.
	Existing agile assessment approaches focus on comparative analyses,
	or are limited in scope and application. In this research, we propose
	a structured, systematic, and comprehensive approach to assessing
	the `goodness' of agile methods. We examine an agile method based
	on (1) its adequacy, (2) the capability of the organization to support
	the adopted principles and practices specified by the method, and
	(3) the method's effectiveness. We propose the Objectives, Principles
	and Practices (OPP) Framework to guide our assessment. The Framework
	identifies (1) objectives of the agile philosophy, (2) principles
	that support the objectives, (3) practices that are reflective of
	the principles, (4) linkages among the objectives, principles and
	practices, and (5) indicators for assessing the extent to which an
	organization supports the implementation and the effectiveness of
	that practice. In this paper, we discuss our solution approach, preliminary
	results, and future work.},
  doi = {10.1109/Agile.2012.24},
  excluded = {Kimi, title},
  keywords = {OPP framework;agile assessment approach;agile philosophy;agile software
	development method;customized agile method;objectives-principles-practices;organizational
	objective;team;software prototyping;}
}

@INPROCEEDINGS{6298095,
  author = {Maranzato, R.P. and Neubert, M. and Herculano, P.},
  title = {Scaling Scrum Step by Step: The Mega Framework},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {79 -85},
  month = {aug.},
  abstract = {We report the experience of scaling Scrum from one single team to
	seven feature teams. Our case study is the leading online payment
	system in Brazil. We introduce the background of the experiment and
	describe how we were able to scale Scrum in a team that had been
	previously unsuccessful in implementing it. Then we present #x201C;The
	Mega Framework #x201D; - a consistent set of practices and meetings
	derived from our experience for coordinating the teams and the stakeholders.
	It improves communication, aligns expectations and ultimately enables
	scaling agile development. We also discuss the lessons we learned
	while creating this framework and how we continuously improve it.},
  doi = {10.1109/Agile.2012.22},
  keywords = {Brazil;Scrum scaling;The Mega Framework;agile development;online payment
	system;Internet;financial data processing;software prototyping;}
}

@INPROCEEDINGS{6298094,
  author = {Sochova, Z. and Kunce, E.},
  title = {A Story about a Dinosaur Called Mainframe and a Small Fly Agile},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {74 -78},
  month = {aug.},
  abstract = {Once, long time ago, there was a very old dinosaur living on the planet
	Earth. Big yet invisible to most, living in the dark places full
	of cold, dust and cables; surrounded by several groups of faithful
	- very specialized software teams, the only ones who truly understood
	him. But the life on the planet Earth had never been steady and recently
	spinning faster and faster around, so it happen that even this group
	had to be changed and follow the fast changing business environment
	outside, unless they all die. And here our story begins. The story
	is based on our experiences from multiple companies and projects
	operating on high-performing applications environment - mainframes.
	The companies are mainly from banking services, insurance systems
	and other very specific software industry areas where mainframes
	are still very popular.},
  doi = {10.1109/Agile.2012.11},
  keywords = {banking services;business environment;dinosaur;insurance systems;mainframe;old
	dinosaur;planet earth;small fly agile;software industry;software
	teams;software prototyping;}
}

@INPROCEEDINGS{1609810,
  author = { Nair, S. and Ramnath, P.},
  title = {Teaching a goliath to fly [Primavera Systems adoption of agile methodologies]},
  booktitle = {Agile Conference, 2005. Proceedings},
  year = {2005},
  pages = { 111 - 124},
  month = {july},
  abstract = { When Primavera Systems decided to adopt agile methodologies for the
	development of their project management suite, no one expected it
	to be easy. One part of the suite is a desktop solution with about
	1.5 M lines of code in Delphi comprised of several applications.
	The other part is a set of Web enabled applications using J2EE and
	Java. The development has tight release cycles and a high demand
	from marketing for new features. This paper describes from a software-architecture
	perspective, the transformation of a largely waterfall-based development
	strategy into an agile, test-driven practice. It looks at the obstacles
	and difficulties we faced during this change in the context of the
	desktop application and, the way we approached refactoring legacy
	code to make it testable. We describe how a Business Object Framework
	was created in an evolutionary manner as part of this process. The
	lessons learned from this year long process is summarized in the
	form of 5 axioms.},
  doi = {10.1109/ADC.2005.44},
  keywords = { Delphi; J2EE; Java; Primavera Systems; Web enabled application; agile
	methodology; business object framework; project management suite;
	software architecture; waterfall-based development; DP industry;
	Internet; Java; project management; software architecture;}
}

@INPROCEEDINGS{1609834,
  author = { Coupal, C. and Boechler, K.},
  title = {Introducing agile into a software development Capstone project},
  booktitle = {Agile Conference, 2005. Proceedings},
  year = {2005},
  pages = { 289 - 297},
  month = {july},
  __markedentry = {[kimi:1]},
  abstract = { Conveying principles of software analysis, design and implementation
	in a classroom setting is problematic. When the course involves actual
	hands on development with clients drawn from industry, the challenges
	are magnified. This paper discusses the experiences and observations
	of a set of 10 month independent external projects undertaken by
	final year students in the computer systems technology program using
	agile for the first time. We compare situations and observations
	of projects developed following an agile approach with XP programming
	by K. Beck in "embracing change with extreme programming" (1999),
	to our previous projects developed in a traditional approach. Based
	on these observations, an agile approach seems to support learning,
	provide a valuable practical experience and produce useable software
	within an academic environment.},
  doi = {10.1109/ADC.2005.32},
  excluded = {Verify (Kimi)},
  excludekimi = {title},
  keywords = { Capstone project; academic environment; extreme programming; software
	analysis; software design; software development; software implementation;
	computer science education; software development management; systems
	analysis;}
}

@INPROCEEDINGS{1609837,
  author = { Read, K. and Melnik, G. and Maurer, F.},
  title = {Student experiences with executable acceptance testing},
  booktitle = {Agile Conference, 2005. Proceedings},
  year = {2005},
  pages = { 312 - 317},
  month = {july},
  __markedentry = {[kimi:1]},
  abstract = { This report describes experiences of introducing executable acceptance
	testing in senior software engineering courses. Students in an agile
	environment completed a five iteration project with significant portion
	of requirements specified as executable acceptance tests. Furthermore,
	students were required to write their test suites for an additional
	component. Ability to learn and utilize the FIT acceptance testing
	framework is evaluated to find out if FIT tests can be used to replace
	requirement documents. The results of a survey of students' perceptions
	and experiences were encouraging.},
  doi = {10.1109/ADC.2005.43},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = { FIT acceptance testing; agile environment; executable acceptance
	testing; software engineering courses; student experience; computer
	science education; program testing; software engineering;}
}

@INPROCEEDINGS{1609821,
  author = { Anderson, D.J.},
  title = {Stretching agile to fit CMMI level 3 - the story of creating MSF
	for CMMI reg; process improvement at Microsoft corporation},
  booktitle = {Agile Conference, 2005. Proceedings},
  year = {2005},
  pages = { 193 - 201},
  month = {july},
  abstract = { Agile practitioners pride themselves on highly productive, responsive,
	low ceremony, lightweight, tacit knowledge processes with little
	waste, adaptive planning and frequent iterative delivery of value.
	It is often assumed that CMMI compliant processes need to be heavyweight,
	bureaucratic, slow moving, high ceremony and plan driven. Agile developers
	often skeptically perceive formal process improvement initiatives
	as management generated inefficiency that gets in the way of productivity.
	At Microsoft, we've adopted the teachings of W. Edwards Deming and
	stretched our MSF for agile software development method to fit the
	requirements for CMMI level 3. The resultant MSF for CMMI process
	improvement is a highly iterative, adaptive planning method, light
	on documentation, and heavily automated through tooling. It enables
	management and organization of software engineering through use of
	agile metrics such as velocity and cumulative flow but with an added
	dimension of an understanding of variation - adapted from Deming's
	teachings. This is the story of how mixing Deming with Agile produced
	a lightweight CMMI solution for .Net developers everywhere.},
  doi = {10.1109/ADC.2005.42},
  keywords = { .Net developers; CMMI level 3; CMMI process improvement; Microsoft
	corporation; adaptive planning; agile metrics; agile software development;
	formal process improvement; software engineering; Capability Maturity
	Model; software development management;}
}

@INPROCEEDINGS{1609831,
  author = { Striebeck, M.},
  title = {Ongoing quality improvement, or: how we all learned to trust XP},
  booktitle = {Agile Conference, 2005. Proceedings},
  year = {2005},
  pages = { 267 - 271},
  month = {july},
  abstract = { Since VA Software adopted XP 2 1/2 years ago, the understanding of
	quality and the product quality itself have changed dramatically.
	Before we started with XP our code had alpha quality. Features were
	tolerably implemented, the UI was very bad and documentation was
	not even started. Today, the complete product (code, UI, documentation,
	SDKs) is constantly at pre-GA level. At any point in our development
	we can provide prereleases to our customers without any additional
	testing or release effort. Before we adopted XP it took us up to
	1 1/2 man years (6 QA engineers for 3 months) to bring a product
	release from development end to release. Our first XP release required
	6 man months (4 QA engineers for 6 weeks). Now we are down to 4.5
	man weeks (1 1/2 QA engineers for 3 weeks). For experienced XP practitioners
	it might seem strange that the quality did not immediately jump to
	the high level that we have today after adopting XP. This was caused
	by a scenario that seems to be very typical for companies that have
	an established waterfall based development process: the engineering
	team was enthusiastic about the new way of development, the product
	management team was indifferent and the QA team was highly skeptical
	of the promise of XP to generate an (almost) bug-free product without
	a long and manual testing effort after development was done. Nobody
	in the engineering or product management team had any experience
	with XP, so it was impossible to convince the QA team otherwise.
	(In fact, reports of bug-free code from other XP teams were more
	intimidating than inspiring). So, we started our XP process without
	full QA involvement and a full system test phase after development
	was done. This paper recounts the evolution of our development process.
	It shows all the phases that our process went through, major changes
	that we made and what the overall impact was.},
  doi = {10.1109/ADC.2005.35},
  keywords = { extreme programming; ongoing quality improvement; product management
	team; software development process; software product quality; waterfall
	development process; software development management; software quality;}
}

@INPROCEEDINGS{1609836,
  author = { Chao, J.},
  title = {Balancing hands-on and research activities: a graduate level agile
	software development course},
  booktitle = {Agile Conference, 2005. Proceedings},
  year = {2005},
  pages = { 306 - 311},
  month = {july},
  __markedentry = {[kimi:1]},
  abstract = { Agile software methodologies promote developing better software faster
	and have been gaining popularity in industry. However, agile methods
	are still unfamiliar in the academic world. While it is important
	to introduce agile methods to undergraduate students, we believe
	that having a graduate level course in agile development is as crucial.
	We offer a graduate level topic course that is dedicated to teaching
	agile software development while emphasizing both hands-on experience
	and research activities. In this course, students first work on a
	series of projects with real customers and then propose and conduct
	research on topics in agile development. The result of this approach
	has been well received by students and has stimulated student research
	interests in the area. This paper describes our experiences in offering
	the course.},
  doi = {10.1109/ADC.2005.15},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = { graduate level agile software development course; hands-on experience;
	research activities; teaching; computer science education; educational
	courses; software engineering; teaching;}
}

@INPROCEEDINGS{1609805,
  author = { Hazzan, O. and Yael Dubinsky},
  title = {Clashes between culture and software development methods: the case
	of the Israeli hi-tech industry and extreme programming},
  booktitle = {Agile Conference, 2005. Proceedings},
  year = {2005},
  pages = { 59 - 69},
  month = {july},
  abstract = { This paper discusses connections between a national culture and the
	culture inspired by software development methods (SDMs). Specifically,
	based on our research on cultural issues related to software development
	teams, we propose a model that can help predict whether a specific
	SDM fits a specific national culture. This model first defines the
	terms 'tightness of an SDM' and 'tightness of a national culture1.
	With respect to an SDM, this term articulates the idea that the tighter
	an SDM is, the more ordered the software development process and
	environment it inspires will be; with respect to a national culture,
	the term 'tightness' reflects the degree to which a culture accepts
	and adopts ordered, planned and procedural work habits. The model
	then goes on to outline means that can help in the mapping of a given
	SDM, as well as a given national culture, along the following five
	dimensions: Project plan, procedures and standards, responsibility,
	time estimation, and individual need satisfaction. Finally, based
	on these mappings, the fitness of a given SDM and a national culture
	is examined. It is proposed that this fitness can serve as a tool
	for predicting the degree to which a given SDM will be accepted by
	a specific national culture in general, and by a specific team that
	is part of that culture, in particular. The model is illustrated
	using the Israeli hi-tech industry as an example of a national culture
	and Extreme Programming (XP) as an example of an SDM.},
  doi = {10.1109/ADC.2005.17},
  keywords = { Israeli hi-tech industry; cultural issues; extreme programming; national
	culture; software development process; organisational aspects; software
	engineering;}
}

@INPROCEEDINGS{1609822,
  author = { Cunningham, J.J.},
  title = {Costs of compliance: agile in an inelastic organization},
  booktitle = {Agile Conference, 2005. Proceedings},
  year = {2005},
  pages = { 202 - 211},
  month = {july},
  abstract = { Doing agile development in a relatively inelastic environment, where
	policies and procedures are virtually unchangeable, creates an impedance
	mismatch between the agile team and its host organization. Our experience
	on a variety of embedded Java projects has shed some light on the
	costs of complying (or failing to comply), where we trialed everything
	from "refusal to comply" to "full compliance". Regardless of approach,
	there was always an associated cost, whether in redrafting documents,
	reducing functionality, spending time in meetings, losing focus on
	deliverables, or deteriorating morale. In keeping with the Agile
	philosophy, when our efforts were failing, we refactored our approach
	to managing the project in an effort to minimize the costs of compliance
	without adopting more risk to ensure success. In the end we were
	faced with the questions "How did we fare in the end? Which costs
	were worth bearing? Was it all worth it?".},
  doi = {10.1109/ADC.2005.18},
  keywords = { agile development; agile philosophy; compliance cost; embedded Java
	project; inelastic organization; Java; software engineering;}
}

@INPROCEEDINGS{1609820,
  author = { Baker, S.W.},
  title = {Formalizing agility: an agile organization's journey toward CMMI
	accreditation},
  booktitle = {Agile Conference, 2005. Proceedings},
  year = {2005},
  pages = { 185 - 192},
  month = {july},
  abstract = { Agile methods are compatible with formal process improvement frameworks.
	Rather than casting discipline and documentation to the wind, agile
	methods, when seriously applied, are actually very focused and comprehensive.
	Likewise, a framework such as the SEI capability maturity model integration
	(CMMI) need not be an overwhelming excess of paperwork and bureaucracy;
	when appropriately implemented, the CMMI encourages and enables significant
	and sustainable improvements. This paper describes the ongoing journey
	of DTE energy's large IT organization in realizing agility and process
	improvement in a Fortune 300 corporation. From following waterfall-based
	approaches to embracing agile methods, and from early attempts with
	the CMM to a renewed commitment to continuous improvement by adopting
	the CMMI, it explores cultural and organizational changes that enable
	real-world process improvements.},
  doi = {10.1109/ADC.2005.27},
  keywords = { CMMI accreditation; SEI capability maturity model integration; agile
	organization; formal process improvement framework; sustainable improvement;
	waterfall-based approach; Capability Maturity Model; software development
	management;}
}

@INPROCEEDINGS{1609827,
  author = { Hodgetts, P.},
  title = {Experiences integrating sophisticated user experience design practices
	into agile processes},
  booktitle = {Agile Conference, 2005. Proceedings},
  year = {2005},
  pages = { 235 - 242},
  month = {july},
  __markedentry = {[kimi:]},
  abstract = { Most significant software processes involve a wide range of disciplines,
	from programming to testing, and from documentation to database development.
	Unfortunately, agile processes are typically presented from the point
	of view of programmers, with the other disciplines often left feeling
	excluded and disenfranchised. One such discipline is that of user
	experience design (often abbreviated UED), a discipline encompassing
	several key specialties including user research, interface design,
	visual design and usability testing. UED activities span the full
	lifecycle of product development from early requirements analysis
	to construction and testing, spanning both large scale system issues
	and detailed components, with its work products forming key inputs
	and deliverables of many development activities. In this experience
	report, we discuss the author's coaching experiences integrating
	sophisticated UED practices into the agile process initiatives of
	several organizations. His background is initially that of a programmer
	and later that of an agile process coach, and we'll explore his journey
	understanding UED practices and how they map to popular agile processes,
	mainly Scrum in "agile software development with Scrum" by K. Schwaber
	and M. Beedle (2002) and extreme programming in "extreme programming
	explained: embrace change" by K. Beck (2000). We'll chronicle the
	teams' struggles to come to grips with the often programming centric
	orientation of agile processes, and their ongoing efforts to integrate
	their UED best practices into the incremental, collaborative world
	of agile processes.},
  doi = {10.1109/ADC.2005.24},
  excluded = {Verify (Kimi)},
  keywords = { agile process; extreme programming; interface design; product development
	lifecycle; requirements analysis; software process; usability testing;
	user experience design; user research; visual design; software engineering;
	user centred design;}
}

@INPROCEEDINGS{1609832,
  author = { Spence, J.W.},
  title = {There has to be a better way! [software development]},
  booktitle = {Agile Conference, 2005. Proceedings},
  year = {2005},
  pages = { 272 - 278},
  month = {july},
  abstract = { This is a story about how we influenced an organization developing
	class III medical device systems and software to adopt agile software
	development practices. Our story describes our frustrations with
	waterfall and plan based methods, how we came to be interested in
	agile and why, and how we facilitated the necessary changes. Finally,
	our story talks about surveys of our development teams that exhibit
	powerful evidence that we may actually be on the path to a "better
	way".},
  doi = {10.1109/ADC.2005.47},
  keywords = { agile software development practice; class III medical device system;
	software development team; software engineering;}
}

@INPROCEEDINGS{1609814,
  author = { Ganis, M. and Leip, D. and Grossman, F. and Bergin, J.},
  title = {Introducing agile development (XP) into a corporate Webmaster environment
	- an experience report},
  booktitle = {Agile Conference, 2005. Proceedings},
  year = {2005},
  pages = { 145 - 152},
  month = {july},
  abstract = { In this paper we examine the challenges of moving a large, traditionally
	waterfall-driven organization toward an agile development methodology.
	In particular we address the problems/successes we encountered in
	our attempts to adhere to the 12 practices of extreme programming
	given: 1) this was a first attempt with agile techniques and in particular
	extreme programming and 2) an organization that while supportive,
	is still driven by its own set of governance processes which seem
	to be in contradiction to extreme programming. We discuss how we
	prepared our development and customer teams in order to achieve an
	agile mindset along with the issues we encountered in our attempts
	to mesh IBM's internal processes with our implementation of extreme
	programming. Finally we address some of the lessons learned as revealed
	by our final project retrospective and out future plans using agile
	techniques.},
  doi = {10.1109/ADC.2005.31},
  keywords = { agile development; corporate Web master environment; extreme programming;
	waterfall-driven organization; Internet; software engineering;}
}

@INPROCEEDINGS{1609823,
  author = { Mc Cormick, J.P.},
  title = {Agile phase I - the pragmatic case study of Schneider National},
  booktitle = {Agile Conference, 2005. Proceedings},
  year = {2005},
  pages = { 212 - 213},
  month = {july},
  abstract = { Schneider National began the journey toward Agile software development
	last year (2004). After doing some research the company sent three
	representatives to the 2004 conference in Calgary. Using some of
	the learnings gathered from the conference, Schneider began using
	Agile in a pilot mode. Schneider's approach was pragmatic in the
	sense that it took its current three release a year waterfall process
	and made changes in an incremental fashion. The steps included getting
	organizational buyoff for the pilot, forming the pilot team, breaking
	up a release into three 6-week iterations, constructing an open pod
	area for the group, integrating a offshore (on-site and remote site)
	element comprising 50% of the 25 person project team, and as of late
	introducing an offshore testing team strategy. Why is this a neat
	story? Because the first project incorporated delivering 17,000 hours+
	in a 4.5 month time frame... ahead of schedule and under budget with
	a substantial offshore component!.},
  doi = {10.1109/ADC.2005.10},
  keywords = { Schneider National; agile development; offshore testing team strategy;
	waterfall process; project management; software development management;}
}

@INPROCEEDINGS{1609806,
  author = { Mann, C. and Maurer, F.},
  title = {A case study on the impact of scrum on overtime and customer satisfaction},
  booktitle = {Agile Conference, 2005. Proceedings},
  year = {2005},
  pages = { 70 - 79},
  month = {july},
  abstract = { This paper provides results, and experiences from a longitudinal,
	2 year industrial case study. The quantitative results indicate that
	after the introduction of a scrum process into an existing software
	development organization the amount of overtime decreased, allowing
	the developers to work at a more sustainable pace while at the same
	time the qualitative results indicate that there was an increase
	in customer satisfaction.},
  doi = {10.1109/ADC.2005.1},
  keywords = { customer satisfaction; scrum process; software development; customer
	satisfaction; software engineering;}
}

@INPROCEEDINGS{1667595,
  author = {Hogan, B.},
  title = {Lessons learned from an extremely distributed project},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {6 pp. -326},
  month = {july},
  abstract = {Distributed development projects are highly complex and introduce
	new challenges for organizations in areas such as communication,
	collaboration and knowledge transfer. On a recent 30-person, mixed
	skill team distributed across Australia, India and the UK we attempted
	to overcome these challenges using a number of techniques such as
	daily stand-ups, exchanging ambassadors, small autonomous teams and
	a dedicated build team. We also used a number of tools such as instant
	messaging to assist with distributed communication. This experience
	report describes each tool and technique we used and the lessons
	learned in their application},
  doi = {10.1109/AGILE.2006.37},
  keywords = {build team;distributed communication;distributed development projects;instant
	messaging;project management;software development management;team
	working;}
}

@INPROCEEDINGS{1667579,
  author = {Striebeck, M.},
  title = {Ssh! We are adding a process... [agile practices]},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {9 pp. -193},
  month = {july},
  abstract = {Google is very successful in maintaining its startup culture which
	is very open and engineering-centric. Project teams don't have a
	project manager, but organize themselves and communicate directly
	with all stakeholders. Most feature decisions are made by the engineering
	teams themselves. As well as this works for products like search,
	gmail... it creates issues for the AdWords frontend (AWFE) application.
	AWFE is much more product management and release date driven then
	other Google applications. This presentation discusses how we carefully
	introduced agile practices to coordinate the AWFE development teams
	and made the process more efficient and predictable},
  doi = {10.1109/AGILE.2006.48},
  keywords = {AWFE development teams;AdWords frontend application;Google;agile practices;engineering
	teams;product management;project teams;DP industry;project management;software
	development management;team working;}
}

@INPROCEEDINGS{1667567,
  author = {Adolph, S.},
  title = {What lessons can the agile community learn from a maverick fighter
	pilot?},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {6 pp. -99},
  month = {july},
  abstract = {For the agile software development community, agility is defined by
	the values expressed in the agile manifesto. But in concrete terms,
	what does it mean for a software project to be agile? US Air Force
	Colonel John Boyd defined agility as the ability to operate the observation-orientation-decision-action
	(OODA) loop faster than an adversary. Agility therefore depends on
	the tempo at which we can exploit the OODA loop, and it is culture,
	not methodologies or tools that determine our OODA loop speed. This
	definition of agility has implications for the software development
	community. This short paper introduces Colonel Boyd, the OODA loop,
	the factors which influence OODA loop speed and the possible research
	opportunities into software engineering culture we are considering},
  doi = {10.1109/AGILE.2006.63},
  excluded = {Kimi, title},
  keywords = {OODA loop;agile manifesto;agile software development community;observation-orientation-decision-action
	loop;software engineering culture;software project;project management;software
	development management;}
}

@INPROCEEDINGS{1667580,
  author = {Hanly, S. and Wai, L. and Meadows, L. and Leaton, R.},
  title = {Agile coaching in British Telecom: making strawberry jam},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {9 pp. -202},
  month = {july},
  abstract = {When BT began to look at how you transform an organization of approximately
	14,000 people to become an agile organisation a key challenge faced
	was how to support this size of a transformation from a coaching
	perspective i.e. how do you leverage a relatively small finite coaching
	resource so that it can be effective. BT drew inspiration from the
	"Law of Strawberry Jam" and intentionally set out to build internal
	agile coaching capability. Based on positive experience with "pair
	coaching" an "apprentice coaching" model was chosen as an effective
	approach for building this internal coaching capability. This provided
	a rich and experience based learning environment while also allowing
	the group to be effective as it engaged with the BT Exact organisation},
  doi = {10.1109/AGILE.2006.13},
  keywords = {British Telecom;agile coaching;agile organisation;apprentice coaching
	model;pair coaching model;DP industry;software development management;team
	working;telecommunication services;}
}

@INPROCEEDINGS{1667574,
  author = {Baker, S.W.},
  title = {Formalizing agility, part 2: how an agile organization embraced the
	CMMI},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {8 pp. -154},
  month = {july},
  abstract = {Most large IT organizations need the best of both worlds - working
	software that supports ever-changing business needs, and a process
	for delivering software that is predictable, trainable, and auditable.
	Organizations with agile software teams often receive timely, cost-effective
	solutions of sufficient quality. Organizations with formal processes
	often benefit from industry-recognized certifications and robust
	process improvement mechanisms. Rarely does a single, large IT organization
	achieve both. DTE Energy has such a combination: its lightweight
	yet CMMI-compatible methodology is now used within its 600+ person
	IT organization to deliver and support working software. Its small
	teams embrace core agile principles as they provide "just enough"
	solutions that satisfy maturing business needs. Yet they passed two
	SCAMPI appraisals toward formal CMMI Level III accreditation, scheduled
	for mid-2006. This report extends the Agile 2005 experience report
	on DTE Energy's agile IT organization's journey toward CMMI staged
	maturity accreditation. This report briefly recaps their seven years
	of agile experience, presents governance mechanisms and change management
	techniques, and highlights their four-release, one-year plan for
	CMMI Level III accreditation. Finally, this report offers suggestions
	on embracing a formal process framework that are applicable to any
	organization},
  doi = {10.1109/AGILE.2006.30},
  keywords = {Agile 2005 experience report;CMMI Level III accreditation;IT organizations;SCAMPI
	appraisals;agile organization;agile software teams;change management;formal
	process framework;formal processes;governance mechanisms;industry-recognized
	certifications;maturity accreditation;process improvement;Capability
	Maturity Model;DP management;accreditation;formal specification;management
	of change;software development management;team working;}
}

@INPROCEEDINGS{1667589,
  author = {Holmes, A. and Kellogg, M.},
  title = {Automating functional tests using Selenium},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {6 pp. -275},
  month = {july},
  __markedentry = {[kimi:1]},
  abstract = {Ever in search of a silver bullet for automated functional testing
	for Web applications, many folks have turned to Selenium. Selenium
	is an open-source project for in-browser testing, originally developed
	by ThoughtWorks and now boasting an active community of developers
	and users. One of Selenium's stated goals is to become the de facto
	open-source replacement for proprietary tools such as WinRunner.
	Of particular interest to the agile community is that it offers the
	possibility of test-first design of Web applications, red-green signals
	for customer acceptance tests, and an automated regression test bed
	for the Web tier. This experience report describes the standard environment
	for testing with Selenium, as well as modifications we performed
	to incorporate our script pages into a wiki. It includes lessons
	we learned about continuous integration, script writing, and using
	the Selenium Recorder (renamed IDE). We also discuss how long it
	took to write and maintain the scripts in the iterative development
	environment, how close we came to covering all of the functional
	requirements with tests, how often the tests should be (and were)
	run, and whether additional automated functional testing below the
	GUI layer was still necessary and/or appropriate. While no silver
	bullet, Selenium has become a valuable addition to our agile testing
	toolkit, and is used on the majority of our Web application projects.
	It promises to become even more valuable as it gains widespread adoption
	and continues to be actively developed},
  doi = {10.1109/AGILE.2006.19},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {GUI layer;Selenium Recorder;Selenium open-source project;Web application
	projects;Web tier;WinRunner;agile community;agile testing toolkit;automated
	regression test;continuous integration;customer acceptance tests;functional
	requirements;functional test automation;in-browser testing;iterative
	development environment;open-source replacement;proprietary tools;script
	pages;script writing;test-first design;Internet;program testing;program
	verification;project management;public domain software;software development
	management;}
}

@INPROCEEDINGS{1667605,
  author = {Wellington, C. and Briggs, T. and Girard, C.D.},
  title = {The impact of agility on a bachelor's degree in computer science},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {5 pp. -404},
  month = {july},
  __markedentry = {[kimi:1]},
  abstract = {Shippensburg University offers a computer science degree with the
	choice of five concentrations including software engineering. We
	first introduced agility as an XP component in part of our two-semester
	product development sequence. Within the software engineering concentration,
	agile concepts spread into our course on software metrics and process
	management. With that experience, our faculty have become interested
	in including agile concepts into other courses. This paper describes
	how a number of our undergraduate courses, the content of our computer
	science core, and our department's general health have been affected
	by agile techniques and philosophies},
  doi = {10.1109/AGILE.2006.54},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {Shippensburg University;XP;agile philosophies;computer science degree;process
	management;product development sequence;software engineering;software
	metrics;undergraduate courses;computer science education;educational
	courses;educational institutions;programming;software management;software
	metrics;}
}

@INPROCEEDINGS{1667609,
  author = {Chao, J. and Pollice, G.},
  title = {Give It Your Best Shot: Favorite Lectures from Agile Teachers},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = { 423},
  month = {july},
  __markedentry = {[kimi:2]},
  abstract = { College instructors are incorporating agile methods into their courses
	throughout the curriculum. Industrial trainers are focusing on effective
	ways of introducing agile techniques to their clients. We now have
	a significant amount of experience from which to draw upon for adding
	agile to our courses. This panel brings together four experienced
	teachers of agile methods to present their most effective techniques
	for teaching one or more agile practices to their class members.
	Each panelist will present a 10-15 minute mini-lecture and explain
	why they find it to be their most effective. After the presentations
	there will be a half hour question-and-answer period with time for
	discussions with the panelists. Audience members will be encouraged
	to discuss their experiences with the type of teaching presented
	by the panelists, and share their own favorite techniques.},
  doi = {10.1109/AGILE.2006.32},
  excludekimi = {abstract}
}

@INPROCEEDINGS{1667586,
  author = {Yale, M.},
  title = {Optimizing major release frequency using agile practices},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {6 pp. -254},
  month = {july},
  abstract = {My experience report focuses on the Image Processing Toolbox story,
	how we transitioned to agile practices to address the problem of
	needing more frequent major releases of our shrink-wrapped product,
	and how we have continually adapted our processes in the context
	of an evolving business environment. Over the last three major releases
	of the product, we have evolved from being primarily scope-driven
	to finely balancing scope and schedule over the entire span of the
	release. The most recent major release was planned to be diversified
	in scope and was delivered right on its planned schedule, fifteen
	months after the previous major release},
  doi = {10.1109/AGILE.2006.42},
  keywords = {Image Processing Toolbox;agile practices;major release frequency;product
	release scheduling;image processing;project management;scheduling;software
	development management;}
}

@INPROCEEDINGS{1667592,
  author = {Heimgartner, S. and Locke, M.},
  title = {A tale of two writing teams},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {10 pp. -304},
  month = {july},
  __markedentry = {[kimi:]},
  abstract = {Our report compares and contrasts the agile experiences of technical
	writers from two companies. In both cases, the writers had to integrate
	themselves into medium-sized agile development projects. However,
	the writing teams differed in their approaches during the necessary
	transition and integration to the agile methodology. Writers assigned
	to these agile projects found themselves adapting to new team dynamics
	in ways that were quite agile, including creative time-slicing, scaling
	across multiple teams, and finding ways to save time while focusing
	on business value. We also found that, even though writers can be
	uncomfortable while adapting the documentation process to conform
	to agile practices, they can rise to the challenges and assist their
	product teams in becoming more proficient and efficient in an agile
	world. For writers to become truly agile, their management must invest
	in the tools, technologies, and personnel to enable their writers-and
	overall project team-to succeed},
  doi = {10.1109/AGILE.2006.4},
  excluded = {Verify (Kimi)},
  keywords = {agile projects;business value;creative time slicing;medium-sized agile
	development projects;technical writers;writing teams;project management;software
	development management;system documentation;team working;}
}

@INPROCEEDINGS{1667560,
  author = {Haugen, N.C.},
  title = {An empirical study of using planning poker for user story estimation},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {9 pp. -34},
  month = {july},
  abstract = {Group estimation of user stories is an important part of extreme programming
	(XP), used for both planning releases and iterations. Research has
	shown that although group estimation in many cases is superior to
	individual estimation, there is still room for improvement. For instance,
	group estimation performance can be reduced by dominant personalities
	and anchoring effects. Through the analysis of 101 user story estimates,
	made by an XP team for release planning, we investigate whether the
	introduction of the planning poker estimation process improved the
	estimation ability of the team. The results show that planning poker
	improved the team's estimation performance in most cases, but that
	it increased estimation error in the extreme cases},
  doi = {10.1109/AGILE.2006.16},
  excluded = {Kimi, title},
  keywords = {Extreme Programming;group estimation;planning poker estimation;user
	story estimation;planning;project management;software development
	management;software process improvement;}
}

@INPROCEEDINGS{1667593,
  author = {Puleio, M.},
  title = {How not to do agile testing},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {7 pp. -314},
  month = {july},
  abstract = {When our team adopted extreme programming and Scrum, there were a
	number of challenges. Integrating an agile team in a "traditional"
	organization created friction and conflict within the team and with
	management. The team consisted of volunteers new to agile practices.
	We had difficulties with planning, estimation, task breakdown, managing
	requirements and working together in a collocated space. However,
	the biggest challenge the team encountered was not in any of these
	other areas, but in one that most of the team figured was simple:
	testing. This paper describes how difficult it was to actually get
	the various testing practices in place and functioning properly.
	In particular, the author discusses challenges we faced in coming
	to a common understanding of the practices, estimating testing effort,
	allocating the time required to do automated tests in a feature-driven
	culture, and getting a team of diverse individuals to understand
	how to apply principles that sound great but are challenging to implement},
  doi = {10.1109/AGILE.2006.34},
  keywords = {Scrum;agile practices;agile team;agile testing;automated tests;extreme
	programming;DP management;program testing;project management;software
	development management;team working;}
}

@INPROCEEDINGS{1667584,
  author = {Parnell-Klabo, E.},
  title = {Introducing lean principles with agile practices at a Fortune 500
	company},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {8 pp. -242},
  month = {july},
  abstract = {Why does the introduction of agile software practices within a large
	corporation pose a difficult and challenging prospect? How can lean
	principles mitigate development challenges and enhance your success?
	What does an approach born in manufacturing have to offer to software
	development? This experience report sets out to answer these questions
	and offer insights into achieving a smoother transition to agile
	through the application of lean tools and principles},
  doi = {10.1109/AGILE.2006.35},
  keywords = {Fortune 500 company;agile software practices;lean principles;lean
	tools;software development;lean production;project management;software
	development management;}
}

@INPROCEEDINGS{1667600,
  author = {Tudor, D. and Walter, G.A.},
  title = {Using an agile approach in a large, traditional organization},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {7 pp. -373},
  month = {july},
  abstract = {Can agile approaches be used successfully in large organizations,
	where traditional methods and high levels of governance are the norm?
	Although the iterative, agile approaches have been seen to work well
	in small, flexible organizations, or on smaller projects, they frequently
	fall foul of the larger organization's need for governance, investment
	appraisal and control. Formed in 1967, OCLC develops software for
	use by libraries and their users, museums, and academic institutions.
	Researchers, students, faculty, scholars, professional librarians
	and other information seekers use OCLC services to obtain bibliographic,
	abstract and full-text information. OCLC aims to be the leading global
	library cooperative. More than 54,000 libraries in 96 countries and
	territories around the world use OCLC services to locate, acquire,
	catalog, lend and preserve library materials. This paper examines
	how TCC, a training and consultancy company from Cheshire, England
	has worked with OCLC, the Online Computer Library Center based in
	Dublin, Ohio to incorporate the Dynamic Systems Development Method
	(DSDM) into a development culture that was deeply-rooted in "traditional"
	software development methods. Examples from multiple projects illustrate
	how the adoption of DSDM helped OCLC change its culture and achieve
	success in software development and deployment. OCLC's TLC dashboard
	was used to track the effectiveness of the development cycle, and
	to collect metrics from 2003 to the present. We discuss some of the
	challenges we faced and the six agile steps to success},
  doi = {10.1109/AGILE.2006.60},
  keywords = {Dynamic Systems Development Method;OCLC services;Online Computer Library
	Center;TCC;TLC dashboard;agile approach;consultancy company;development
	cycle;global library cooperative;large traditional organization;software
	deployment;software development;training company;DP industry;consultancies;project
	management;software development management;}
}

@INPROCEEDINGS{1667575,
  author = {Coffin, R.},
  title = {A tale of two projects [agile projects]},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {7 pp. -164},
  month = {july},
  abstract = {The author had a unique opportunity to experience and analyze the
	adoption of agile practices on two projects at a major car rental
	company which, although sharing many similarities including staff,
	professed commitment to agile process, architecture, and programming
	environment, experienced two drastically different outcomes. The
	first became bogged down and eventually went to production late,
	over-budget, with fewer features then expected, and was only reluctantly
	embraced by its user community. The second was ready for its first
	production milestone after only 9 weeks, was enthusiastically embraced
	by its users, and went on to become an unqualified success and a
	model for other software development projects at this company. In
	this report the author illustrates the similarities between these
	two projects, highlight the differences, and draw conclusions about
	the factors critical to the success of agile projects in large corporate
	environments},
  doi = {10.1109/AGILE.2006.3},
  keywords = {agile practices;agile projects;car rental company;software development
	projects;project management;software development management;}
}

@INPROCEEDINGS{1667598,
  author = {Poon, D.},
  title = {A self funding agile transformation},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {9 pp. -350},
  month = {july},
  abstract = {Funding is often seen an impediment to going agile. If cash is tight,
	you are not going to be able to pay for a "big-up-front-agile-transformation".
	However, transitioning to agile can be self-funding. If people take
	the first bold step themselves, they will find that the funding will
	sort itself out along the way},
  doi = {10.1109/AGILE.2006.2},
  keywords = {agile practices;self funding agile transformation;software development;project
	management;software development management;}
}

@INPROCEEDINGS{1667587,
  author = {Lawrence, R. and Yslas, B.},
  title = {Three-way cultural change: introducing agile within two non-agile
	companies and a non-agile methodology},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {5 pp. -262},
  month = {july},
  abstract = {The introduction of an agile methodology into a non-agile company
	raises both pragmatic and cultural considerations. This is an account
	of our experience introducing agile to our consulting firm and one
	of our customers (themselves a consulting firm). We cover both what
	practically did and did not work on our project, as well as some
	of the cultural issues involved in using a new methodology},
  doi = {10.1109/AGILE.2006.57},
  keywords = {agile methodology;consulting firm;cultural change;nonagile companies;DP
	industry;consultancies;project management;software development management;}
}

@INPROCEEDINGS{1667597,
  author = {Rasmusson, J.},
  title = {Agile project initiation techniques - the inception deck amp; boot
	camp},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {5 pp. -341},
  month = {july},
  abstract = {Many agile projects are doomed to fail before they even begin. Most
	projects fail not because of the technical ability of the team, but
	because project goals, objectives and context have not been taken
	into account when forming the project plan. Further, most teams new
	to agile often lack the basic training required to be successful
	on their first agile project. Using a lightweight project initiation
	framework (an inception deck), combined with an agile boot camp,
	teams can drastically improve their project's chances of success.
	This will both ensure more agile projects are delivered successfully,
	and aid agile's adoption into the greater software community},
  doi = {10.1109/AGILE.2006.14},
  keywords = {agile boot camp;agile project initiation;inception deck;project context;project
	goals;project objectives;project plan;project teams;software community;DP
	management;planning;project management;software development management;team
	working;training;}
}

@INPROCEEDINGS{1667572,
  author = {Shore, J.},
  title = {Introduction: Experience Reports},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = { 135},
  month = {july},
  __markedentry = {[kimi:1]},
  abstract = { I love stories. I love hearing them; I love telling them. Stories
	connect me to ideas in a way that dry recitals of facts and findings
	never could. Perhaps it #146;s my love of stories that makes the
	experience reports track my favorite at conferences. A great experience
	report is a story: a personal account of what somebody experienced
	while trying an idea. Of course, there #146;s more to an experience
	report than a story. Experience reports are grounded in facts. They
	#146;re reported by people working on real projects under real constraints.
	Their stories tell us what they tried, what worked out... and what
	didn #146;t. If experience is the best teacher, then perhaps these
	reports are the second-best teacher. We have an excellent program
	this year. We received nearly 100 proposals. Whittling the proposals
	down to the final 30 reports was a grueling process. Our 16-person
	review committee didn #146;t just read every proposal; we personally
	conducted a phone interview with the primary author of every proposal.
	Once the papers were accepted, each paper was our experienced reviewers.},
  doi = {10.1109/AGILE.2006.36},
  excludekimi = {title}
}

@INPROCEEDINGS{1667582,
  author = {Weyrauch, K.},
  title = {What are we arguing about? A framework for defining agile in our
	organization},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {8 pp. -220},
  month = {july},
  abstract = {How do we implement agile? Is agile a good thing for my organization?
	What barriers will have to overcome? All of these are important questions
	when deciding whether and how to apply agile software development
	to an organization that is used to working in a different way. To
	enable a good discussion, the language of that discussion must be
	established. As Medtronic adopted agile, we realized how important
	it was to put effort into the language. We established a framework
	for that language, organizing our thoughts into three areas: principles,
	practices, and benefits. When talking with visionaries or evangelists,
	we speak in terms of principles to understand why agile is the way
	it is. With practitioners or pragmatists, we speak in terms of practices
	to understand how to do agile. With skeptics, we speak in terms of
	benefits to determine whether agile is a good thing for us. In most
	cases, an effective conversation needs to address all three perspectives.
	The framework and language help us determine whether issues are related
	simply to communication barriers, or are related to the decisions
	of whether and how to apply agile to our world},
  doi = {10.1109/AGILE.2006.62},
  keywords = {Medtronic;agile software development;organization;software development
	management;team working;}
}

@INPROCEEDINGS{1667581,
  author = {Honious, J. and Clark, J.},
  title = {Something to believe in [Reed Elsevier]},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {8 pp. -212},
  month = {july},
  __markedentry = {},
  abstract = {Reed Elsevier implemented a "learn by doing" strategy and a managed
	approach to enable a large organization in an agile development process.
	CEO support and the promise of the benefits the process would yield
	were critical success factors. Picking the right project, assembling
	a strong team, and partnering with experts were all key in delivering
	on the promise. The appointment of a dedicated person accountable
	for the successful enablement was essential. During the journey,
	important lessons were learned about integrating User-Centered Design,
	managing release plans, and working with other teams. In addition,
	a stage-gate governance model was overlaid on the agile development
	process. This not only gave the business the means to manage investment
	but also provided an effective avenue for familiarizing senior management
	with agile principles},
  doi = {10.1109/AGILE.2006.47},
  keywords = {Reed Elsevier;agile development process;investment management;large
	organization;learn by doing strategy;managed approach;release plans;senior
	management;stage-gate governance model;team working;user-centered
	design;personnel;project management;software development management;team
	working;}
}

@INPROCEEDINGS{1667569,
  author = {Humble, J. and Read, C. and North, D.},
  title = {The deployment production line},
  booktitle = {Agile Conference, 2006},
  year = {2006},
  pages = {6 pp. -118},
  month = {july},
  __markedentry = {[kimi:2]},
  abstract = {Testing and deployment can be a difficult and time-consuming process
	in complex environments comprising application servers, messaging
	infrastructure and interfaces to external systems. We have seen deployments
	take several days, even in cases where teams have used automated
	builds to ensure their code is fully tested. In this paper we describe
	principles and practices which allow new environments to be created,
	configured and deployed to at the click of a button. We show how
	to fully automate your testing and deployment process using a multi-stage
	automated workflow. Using this "deployment production line", it is
	possible to deploy fully tested code into production environments
	quickly and with full confidence that you can fall back to a previous
	version easily should a problem occur},
  doi = {10.1109/AGILE.2006.53},
  excludekimi = {abstract},
  keywords = {automated deployment;automated testing;deployment production line;multistage
	automated workflow;production environments;automatic testing;program
	compilers;program testing;workflow management software;}
}

@INPROCEEDINGS{5261066,
  author = {Abernathy, P.},
  title = {Hook, Line and Sinker: The Role of Line Management in Relation to
	Agile Teams},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {314 -319},
  month = {aug.},
  abstract = {If agile is to be successfully introduced on a medium or large scale
	into any organization it is vital that there is a symbiotic relationship
	between line management and the agile teams that carry out the work.
	Line management form the organizational hierarchies and silos in
	any major corporation and their interaction with the cross functional
	Agile teams, either permanent or temporary, that are formed by drawing
	resources from various organizational silos, is a key success factor
	on the agile journey. This experience report outlines the dysfunctions
	that initially appeared between line management and the Agile teams
	early on in the agile journey and the steps taken to help overcome
	them. It outlines the key steps taken to enable the change and the
	benefits that accrued from this journey.},
  doi = {10.1109/AGILE.2009.43},
  keywords = {agile journey;cross functional agile teams;line management;organizational
	hierarchies;business data processing;organisational aspects;}
}

@INPROCEEDINGS{5261079,
  author = {Fewell, J.},
  title = {Marriott's Agile Turnaround},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {219 -222},
  month = {aug.},
  abstract = {When Marriott began to build its brand management intranet, the tech
	vendor ran into several problems that jeopardized the whole program.
	The introduction of Agile began a long recovery process: When should
	you be covert/overt with Agile practices? How do you convince stakeholders
	a daily concall is more efficient than a weekly concall? Why would
	you pay for the tech vendorpsilas Agile training? How do you structure
	Firm Fixed pricing to be Agile? This is the story of how applying
	Agile techniques, first covertly, then out in the open, slowly steered
	the ship on course.},
  doi = {10.1109/AGILE.2009.55},
  keywords = {Firm Fixed pricing;Marriott Agile turnaround;brand management intranet;tech
	vendor;back-up procedures;software engineering;}
}

@INPROCEEDINGS{5261081,
  author = {Kalliney, M.},
  title = {Transitioning from Agile Development to Enterprise Product Management
	Agility},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {209 -213},
  month = {aug.},
  abstract = {By now, your company has made the transition to Scrum. "Sprints",
	"backlogs", and "retrospectives" are everyday words, but you have
	discovered the complications that arise within product management.
	product owners and managers who have been scattered across multiple
	teams are no longer in sync, and at the senior management level,
	there is not very much visibility into what the Scrum teams are working
	on unless backlogs are scrutinized. Even then, it is difficult to
	connect the user stories to managementpsilas high level goals. In
	addition, cross-product dependencies are not being effectively recognized
	and managed. The necessity of tracing high level business objectives
	and portfolio initiatives down to the user story level is essential
	to any high performing agile development organization. This experience
	report details how Ultimate Software has successfully transitioned
	from agile development to an agile enterprise.},
  doi = {10.1109/AGILE.2009.64},
  keywords = {Scrum team;Ultimate Software transition;agile development;business
	objective;cross-product dependency;enterprise product management
	agility;product portfolio;product development;software development
	management;}
}

@INPROCEEDINGS{5261106,
  author = {Sheth, B.},
  title = {Scrum 911! Using Scrum to Overhaul a Support Organization},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {74 -78},
  month = {aug.},
  abstract = {The Support 2.0 team at our IT organization has recently completed
	Phase 1 of the Support 2.0 project. Phase 1 was a four month endeavor
	with a primary focus of collecting data to understand why support
	was so costly and identify the root cause for each support request.
	The team strongly believed that this initial phase would be critical
	to making significant impacts to the quality and supportability of
	applications. This experience report describes the challenge for
	the Support 2.0 team and shares the successful adoption of agile
	practices in redefining the support organization. In the spirit of
	the agile transition to software development one year prior, our
	IT organization decided to rethink the approach to application support.
	By embracing agile principles and utilizing agile concepts, such
	as a cross functional team, a team collaboration approach with frequent
	reviews to inspect and adapt as needed, etc, the business was able
	to reap immediate benefits. It was a challenging journey for the
	team, where the mix of onshore-offshore support engineers and an
	integrated client-vendor relationship within an agile team and focused
	framework helped to transform the support organization from an operational
	cost center to a value added thought partner. This resulted in a
	significantly improved culture and effectiveness of the support organization.
	This unique organization of an agile, cross-functional and team-based
	approach to handle support requests improved the customer experience,
	reduced support costs, and ultimately provided greater opportunity
	for the business to fund new development efforts.},
  doi = {10.1109/AGILE.2009.23},
  keywords = {Support 2.0 project team;agile practices adoption;application quality;application
	supportability;cross functional team;integrated client-vendor relationship;onshore-offshore
	support engineers;organizational support;software development;team
	collaboration;organisational aspects;software development management;team
	working;}
}

@INPROCEEDINGS{5261047,
  author = {Cho, L.},
  title = {Adopting an Agile Culture A User Experience Team's Journey},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {416 -421},
  month = {aug.},
  abstract = {Success in adopting an agile culture depends on the organizationpsilas
	ability to adapt, while at the same time establishing common objectives
	and principles across the organization. This experience report observes
	this theme via the lens of a project team at Liquidnet, specifically
	through the user experience group.},
  doi = {10.1109/AGILE.2009.76},
  keywords = {Liquidnet company;agile culture adaptiveness;organization ability;project
	team;user experience teams journey;agile manufacturing;organisational
	aspects;team working;}
}

@INPROCEEDINGS{5261085,
  author = {Rendell, A.},
  title = {Descending from the Architect's Ivory Tower},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {180 -185},
  month = {aug.},
  abstract = {This experience report, by a projectpsilas technical architect, details
	the adoption of Agile methods across several teams after one high
	profile success. The organization had a long history of waterfall
	development and a clearly defined remit for technical architects.
	Years of refinement had led to a set of techniques which contradicted
	many of the ideals held by Agile practitioners. The authorpsilas
	challenge was to maintain agility and fulfill responsibilities inherited
	from waterfall processes without reverting to the conventional practices
	that ultimately lead to the architectpsilas ivory tower.},
  doi = {10.1109/AGILE.2009.17},
  excluded = {Kimi, title},
  keywords = {agile method;agile practitioner;architect ivory tower;project technical
	architect;waterfall development;waterfall process;organisational
	aspects;professional aspects;}
}

@INPROCEEDINGS{5261053,
  author = {Andersen, T.J. and Amdor, L.E.},
  title = {Leveraging Maven 2 for Agility},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {383 -386},
  month = {aug.},
  __markedentry = {[kimi:2]},
  abstract = {Software developers at Iowa Student Loan improved their technical
	approach for building Java applications by switching from Apache
	Ant to Apache Maven. In 2003 we started using Ant. We had a lot of
	success with Ant and became very dependent upon it. At first, no
	one was comfortable switching to a new tool because Ant seemed to
	be working just fine. In 2007, we decided to use Maven. Throughout
	this transition, it was necessary for us to overcome many obstacles
	including the learning curve and the infrastructure needs. This report
	illustrates the problems we had with our Ant builds and identifies
	why we decided to switch to Maven. Finally, it acknowledges the benefits
	we have realized and describes how Maven has augmented our agility.},
  doi = {10.1109/AGILE.2009.20},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {Apache Ant;Apache Maven;Iowa student loan;Java application;infrastructure
	needs;learning curve;project management;software developer;Java;computer
	science education;project management;software development management;}
}

@INPROCEEDINGS{5261092,
  author = {Rasmussen, R. and Hughes, T. and Jenks, J.R. and Skach, J.},
  title = {Adopting Agile in an FDA Regulated Environment},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {151 -155},
  month = {aug.},
  abstract = {This paper is an experience report describing Abbottpsilas adoption
	of agile software development practices in its molecular diagnostics
	division. We will compare two medical device projects; one before
	agile and one after. Both of these projects required submission to
	the FDA (the U.S. Food and Drug Administration). We will describe
	the adoption of agile practices from realization of the need to the
	selection of a mentor to implementation and fine-tuning and finally
	to results and lessons learned. This experience has convinced us
	that an agile approach is the approach best suited to development
	of FDA-regulated medical devices.},
  doi = {10.1109/AGILE.2009.50},
  keywords = {Abbott;Food and Drug Administration;agile software development;medical
	devices;molecular diagnostics division;pharmaceutical industry;software
	engineering;}
}

@INPROCEEDINGS{5261069,
  author = {Hansen, M.T. and Baggesen, H.},
  title = {From CMMI and Isolation to Scrum, Agile, Lean and Collaboration},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {283 -288},
  month = {aug.},
  abstract = {This paper describes a journey from 2004 to 2008 when SoftwarePeople
	in Denmark, together with a partner from Bangladesh, established
	a subsidiary company more than 7000 km away from Denmark. We hired
	20 people in one week in Bangladesh and started to use CMMI processes
	to integrate development teams between the two locations with the
	goal of receiving a CMMI level 3 certification in 1.5 years. After
	some challenging time we stopped the CMMI project and switched back
	to agile and lean techniques with more collaboration. Here we describe
	our experience with implementing global big bang Scrum and building
	a Kaizen culture. A journey from long running projects, technical
	dept and integration nightmares to small batches of work, continuous
	integration and faster delivery of business value. This is reported
	by Hans Baggesen, Team Lead for one of the Danish R amp;D teams (2007-2008)
	and Mads Troels Hansen, CTO and co-founder (2004-2007).},
  doi = {10.1109/AGILE.2009.18},
  keywords = {CMMI level 3 certification;Kaizen culture;Scrum;SoftwarePeople;agile
	manufacturing;continuous improvement;lean production;production engineering
	computing;}
}

@INPROCEEDINGS{5261061,
  author = {Jakobsen, C.R. and Sutherland, J.},
  title = {Scrum and CMMI Going from Good to Great},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {333 -337},
  month = {aug.},
  abstract = {Projects combining agile methods with CMMI combine adaptability with
	predictability to better serve large customer needs. The introduction
	of Scrum at Systematic, a CMMI level 5 company, doubled productivity
	and cut defects by 40% compared to waterfall projects in 2006 by
	focusing on early testing and time to fix builds. Systematic institutionalized
	Scrum across all projects and used data driven tools like story process
	efficiency to surface product backlog impediments. This allowed them
	to systematically develop a strategy for a second doubling in productivity.
	Two teams have achieved a sustainable quadrupling of productivity
	compared to waterfall projects. We discuss here the strategy to bring
	the entire company to that level. Our experiences shows that Scrum
	and CMMI together bring a more powerful combination of adaptability
	and predictability than either one alone and suggest how other companies
	can combine them to achieve Toyota level performance - 4 times the
	productivity and 12 times the quality of waterfall teams.},
  doi = {10.1109/AGILE.2009.31},
  keywords = {CMMI;Scrum;Systematic;agile methods;customer needs;surface product
	backlog;Capability Maturity Model;DP industry;productivity;project
	management;}
}

@INPROCEEDINGS{5261095,
  author = {Morsicato, R.},
  title = {We Are Naked Volunteers: How an Agile Users Group Rediscovered Itself},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {125 -128},
  month = {aug.},
  abstract = {A splendid way to know if you will succeed at agile in the workplace
	is to be guided by an agile experience in a volunteer organization,
	where little is masked. Volunteers became volunteers because, despite
	jobs, families and sundry other time consuming responsibilities,
	they see a unique reward from the donation of their time and efforts.
	The danger of the workplace is that, rather than keeping the eye
	on the prize, it is too easy for someone to replace the underlying
	motivational reward by the paycheck. This report shows how a volunteer
	organization was able to experience and learn the power of agile
	values.},
  doi = {10.1109/AGILE.2009.11},
  keywords = {agile users group;agile workplace;volunteer organization experience;DP
	management;}
}

@INPROCEEDINGS{5261049,
  author = {Illmensee, T. and Muff, A.},
  title = {5 Users Every Friday: A Case Study in Applied Research},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {404 -409},
  month = {aug.},
  abstract = {In 2007 a large consumer electronics retailer faced significant business
	challenges. In pursuit of new modes of strategic flexibility and
	fast execution, the e-commerce division transformed its culture around
	Agile principles and the user experience team adapted its practices
	to the new paradigm. How would increased velocity affect the quality
	of the functionality produced? How would time-intensive activities
	like usability research be affected? This paper presents a case study
	describing successes and failures while integrating continuous research
	into Agile projects.},
  doi = {10.1109/AGILE.2009.45},
  excluded = {Kimi, title},
  keywords = {agile projects;case study;e-commerce;business process re-engineering;electronic
	commerce;}
}

@INPROCEEDINGS{5261054,
  author = {Lacoste, F.J.},
  title = {Killing the Gatekeeper: Introducing a Continuous Integration System},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {387 -392},
  month = {aug.},
  abstract = {This is the story of how the Launchpad (https://launchpad.net) development
	team switched to a continuous integration system to increase several
	flows in their development process: flow of changes on trunk; flow
	of changes requiring database schema upgrade; flow of deployed changes
	to end users. The switch to a buildbot based system meant violating
	a very old company taboo: a trunk that doesn't pass its test suite.
	The risk of a broken trunk was offset by allowing each developer
	to run the full test suite in the Amazon EC2 cloud.},
  doi = {10.1109/AGILE.2009.35},
  keywords = {Amazon EC2 cloud;Launchpad development team;buildbot based system;continuous
	integration system;database schema upgrade;development process;test
	suite;lean production;software engineering;software houses;}
}

@INPROCEEDINGS{5261050,
  author = {Sharma, R. and Wherry, B.},
  title = {Software Development for Disney Animated Feature Film Production},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {410 -415},
  month = {aug.},
  abstract = {This report describes our experience in adapting the Scrum process
	to develop complex tools and user interfaces for use in computer-generated
	(CG) animated feature film production at the Walt Disney Animation
	Studios. We describe the movie making process and how the need for
	tools with good interaction led us to adopt a Scrum-based iterative
	design and development process.},
  doi = {10.1109/AGILE.2009.60},
  keywords = {Disney animated feature film production;Scrum process;Scrum-based
	development process;Scrum-based iterative design;Walt Disney Animation
	Studios;computer-generated animated feature film production;movie
	making process;software development;computer animation;entertainment;software
	engineering;}
}

@INPROCEEDINGS{5261086,
  author = {Shinkle, C.M.},
  title = {Applying the Dreyfus Model of Skill Acquisition to the Adoption of
	Kanban Systems at Software Engineering Professionals (SEP)},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {186 -191},
  month = {aug.},
  abstract = {In 2004, SEP tried adopting agile practices. However, agile failed
	to have the desired lasting impact across the entire organization.
	Things changed in 2007, when SEP implemented a kanban system for
	the first time. Kanban created an effective means for institutionalization
	of lean by providing a unique method of discovering and learning
	practices and principles. Upon examining multiple teams using kanban
	systems it was apparent that teams followed similar patterns of adoption
	and learning. They appeared to follow the Dreyfus model for skill
	acquisition.},
  doi = {10.1109/AGILE.2009.25},
  excluded = {Kimi, title},
  keywords = {Dreyfus model of skill acquisition;Software Engineering Professionals;kanban
	system;lean institutionalization;project team;DP industry;kanban;personnel;project
	management;team working;}
}

@INPROCEEDINGS{5261055,
  author = {Stolberg, S.},
  title = {Enabling Agile Testing through Continuous Integration},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {369 -374},
  month = {aug.},
  abstract = {A continuous integration system is often considered one of the key
	elements involved in supporting an agile software development and
	testing environment. As a traditional software tester transitioning
	to an agile development environment it became clear to me that I
	would need to put this essential infrastructure in place and promote
	improved development practices in order to make the transition to
	agile testing possible. This experience report discusses a continuous
	integration implementation I led last year. The initial motivations
	for implementing continuous integration are discussed and a pre and
	post-assessment using Martin Fowler's" practices of continuous integration"
	is provided along with the technical specifics of the implementation.
	The report concludes with a retrospective of my experiences implementing
	and promoting continuous integration within the context of agile
	testing.},
  doi = {10.1109/AGILE.2009.16},
  keywords = {agile development environment;agile software development;agile testing;continuous
	integration system;integrated software;program testing;software engineering;}
}

@INPROCEEDINGS{5261097,
  author = {Mun-Wai Chung and Drummond, B.},
  title = {Agile at Yahoo! From the Trenches},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {113 -118},
  month = {aug.},
  abstract = {Yahoo! is a great proving ground for Agile. Since the introduction
	of Agile methods and practices into the company over five years ago,
	many contests of the Agile process have played out across the expansive
	Yahoo! software development landscape. Throughout its history, the
	spirit of Agile has survived, often in surprising and unexpected
	ways. Whether being mandated from the executive-level or arising
	from self-motivated small teams, one theme is constant - Agile has
	embedded itself into the DNA of Yahoo!. And to the present day, Agile
	continues to emerge and re-emerge in many forms from the dedicated
	individuals who use the tools of Agile to create some of the most
	innovative user experiences on the Internet. This paper offers an
	informal retrospective of the relative successes and failures of
	enterprise Agile adoption at Yahoo! from the period 2004 to 2009.},
  doi = {10.1109/AGILE.2009.41},
  keywords = {Agile method;Agile process;Internet;Yahoo! software development landscape;self-motivated
	team;DP industry;software development management;software houses;}
}

@INPROCEEDINGS{5261077,
  author = {Wilby, D.},
  title = {Roadmap Transformation: From Obstacle to Catalyst},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {229 -234},
  month = {aug.},
  abstract = {When charting new territory - enterprise-scale agile - traditional
	roadmaps only take you so far. When landscapes change in weeks, product
	management must find a way to reconcile sprint plans and backlogs
	from multiple teams with longer-term product direction. In this paper,
	I will share how my teams tackled the roadmap challenge during Borlandpsilas
	Agile transformation. Ipsilall cover how roadmaps became a barrier
	to scaling Agile, how we adopted Agile road mapping, the challenges
	we faced and the impact the new practices have had on our Agile transformation.},
  doi = {10.1109/AGILE.2009.71},
  keywords = {Borland Agile transformation;enterprise-scale agile;longer-term product
	direction;roadmap transformation;software development management;}
}

@INPROCEEDINGS{5261102,
  author = {Babuscio, J.},
  title = {How the FBI Learned to Catch Bad Guys One Iteration at a Time},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {96 -100},
  month = {aug.},
  abstract = {Because the Federal Bureau of Investigation (FBI) never stops evolving,
	High Performance Technologies, Inc. (HPTi) found itself struggling
	to keep up with the changes while maintaining its CMMI III certification.
	Developers were complaining, clients were getting anxious, software
	releases were slipping. But what was the problem? Was it CMMI? Was
	it the environment? Was it HPTi? Through a disciplined approach to
	agile development, HPTi was able to successfully deliver above expectations.
	This experience report outlines HPTipsilas successful journey through
	a CMMI III certification on an FBI software development project and
	the even more successful transition into agile development.},
  doi = {10.1109/AGILE.2009.52},
  keywords = {CMMI III certification;Federal Bureau of Investigation;High Performance
	Technologies, Inc;agile development;software development project;software
	releases;Capability Maturity Model;certification;police data processing;software
	development management;}
}

@INPROCEEDINGS{5261063,
  author = {Frank, A. and Hartel, C.},
  title = {Feature Teams Collaboratively Building Products from READY to DONE},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {320 -325},
  month = {aug.},
  abstract = {In this paper we describe our Project Teampsilas journey from a process
	where design and planning work was performed away from development
	team to one where small cross-functional Feature Teams self-organized
	to complete design, planning, and construction within the same sprint.
	We introduced a process that allows User Interaction Designers and
	Business Analysts to work in sync with the Developers and QA Analysts
	within a sprint. Each member of the Feature Team is involved in getting
	READY, planning, executing and being DONE. By introducing this process,
	we observed an increase in team morale, better, more predictable
	results and accumulation of less debt, while at the same time maintaining
	a constant velocity. Our process is a deviation from the established
	approach where upfront work needs to be ready before starting a sprint.},
  doi = {10.1109/AGILE.2009.51},
  keywords = {QA analysts;business analysts;collaborative work;design;planning;user
	interaction;commerce;design;groupware;planning;quality assurance;user
	interfaces;}
}

@INPROCEEDINGS{5261060,
  author = {Sutherland, J. and Altman, I.},
  title = {Take No Prisoners: How a Venture Capital Group Does Scrum},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {350 -355},
  month = {aug.},
  abstract = {In 2007, OpenView Venture Partners decided to adopt Scrum as best
	practice in software development in its portfolio companies and Scrum
	as the standard practice in internal operations. It is one of the
	first high-performance non-software Scrums that delivers twice as
	much value in fewer working hours. The model at OpenView provides
	data and a working manual on how to do Scrum outside of software
	development. Their aggressive removal of impediments (take no prisoners!)
	distinguishes them from Scrum implementations that are unable to
	remove institutionalized waste.},
  doi = {10.1109/AGILE.2009.29},
  keywords = {OpenView Venture Partner;Scrum;project management;software development
	management;venture capital group;project management;software development
	management;venture capital;}
}

@INPROCEEDINGS{5261096,
  author = {Howard, K.R.},
  title = {The Covert Agilist},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {131 -134},
  month = {aug.},
  abstract = {A team of consultants introduces agile software development practices
	in an ldquoagile hostilerdquo environment. This paper describes the
	chain of events that allowed them to covertly introduce and exercise
	agile practices. There were three distinctly different coaching approaches
	at play, and it was the combination of the three that resulted in
	successes. Enterprise change requires more than a single win, however,
	and lack of top-down support prevented wider scale adoption of agile
	practices.},
  doi = {10.1109/AGILE.2009.37},
  keywords = {agile hostile environment;agile software development;software development
	management;}
}

@INPROCEEDINGS{5261090,
  author = {Ahmed, E.-M. and Sidky, A.},
  title = {25 percent Ahead of Schedule and just at Step 2 of the SAMI},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {162 -169},
  month = {aug.},
  abstract = {The Sidky agile measurement index (SAMI) is a 5-step value-based roadmap
	to agility. The SAMI is designed to help guide organizations seeking
	to become more agile. Each of SAMIpsilas 5 steps (collaborative,
	evolutionary, integrated, adaptive and encompassing) aims to instill
	a new value in teams and organizations. This report shows how an
	organization that is just at Step 2 of the SAMI has realized a number
	of tangible business benefits. Some of these notable benefits are
	(a) 25% increase in the speed to market, (b) 45% decrease in the
	number of bugs reported after delivery of the system, (c) unprecedented
	customer satisfaction, and (d) 19% decrease in employee turnover
	because of the substantial increase in the team moral.},
  doi = {10.1109/AGILE.2009.63},
  keywords = {SAMI;Sidky agile measurement index;customer satisfaction;agile manufacturing;customer
	satisfaction;}
}

@INPROCEEDINGS{5261056,
  author = {Kessler, D. and Andersen, T.J.},
  title = {Herding Cats: Managing Large Test Suites},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {375 -380},
  month = {aug.},
  abstract = {This is the story of staying green in the midst of the challenges
	we faced as we accumulated an increasing number of automated tests.
	Iowa Student Loan (ISL) is well beyond the adoption phase of agile.
	Our commitment to writing tests has resulted in an enormous set of
	tests. We faced many challenges in keeping our tests under control.
	A few of the challenges that surfaced include: overly coupled tests,
	volatile dependencies and turned off tests. It took a lot of energy,
	discipline, and resources to overcome these challenges. We would
	like to share the techniques and experiences that emerged as we struggled
	to stay on green bar.},
  doi = {10.1109/AGILE.2009.38},
  excluded = {Kimi, title},
  keywords = {Iowa Student Loan;agile software development;large test suite management;financial
	management;program testing;software development management;}
}

@INPROCEEDINGS{5261093,
  author = {Atlas, A.},
  title = {Accidental Adoption: The Story of Scrum at Amazon.com},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {135 -140},
  month = {aug.},
  abstract = {By late 2004, Scrum had been chosen independently as a development
	process by several teams at Amazon.com. From then until 2009, Scrum
	spread to a large portion of the software development teams at Amazon.
	This widespread adoption occurred in part due to the actions of a
	single individual and in part due to the natural match between Scrumpsilas
	characteristics and the culture prevalent at Amazon.com. Widespread
	use of small, independent teams and a general empowerment at the
	team level made Scrum a smaller step to take for development teams
	at Amazon than it would be at many companies of equal or greater
	size. The success of Scrum at Amazon shows how important the prevailing
	culture of the company can be in terms of supporting an Agile transformation.
	These lessons are relevant to Scrum transformations being undertaken
	at many companies today.},
  doi = {10.1109/AGILE.2009.10},
  keywords = {Amazon.com;Scrum;accidental adoption;agile transformation;software
	development process;software development management;}
}

@INPROCEEDINGS{5261052,
  author = {Cho, L.},
  title = {Adopting an Agile Culture},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {400 -403},
  month = {aug.},
  abstract = {Success in adopting an agile culture depends on the organizationpsilas
	ability to adapt, while at the same time establishing common objectives
	and principles across the organization. This experience report observes
	this theme via the lens of a project team at Liquidnet, specifically
	through the user experience group.},
  doi = {10.1109/AGILE.2009.47},
  keywords = {Liquidnet;agile culture;project team;user experience group;electronic
	commerce;}
}

@INPROCEEDINGS{5261071,
  author = {Victor, B. and Jacobson, N.},
  title = {We Didn't Quite Get It},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {271 -274},
  month = {aug.},
  abstract = {Brian Victor and Noah Jacobson are developers at Abraxas Applications
	who led the initial adoption of agile practices at the company. They
	discovered that agile is a social process but that their background
	as developers prevented them from implementing it as effectively
	as they could. They relate several anecdotes that illustrate problems
	in developer led transitions and describe how their environment looked
	before and after a coach provided assistance.},
  doi = {10.1109/AGILE.2009.22},
  keywords = {Abraxas applications;agile technology;social process development;DP
	management;social aspects of automation;}
}

@INPROCEEDINGS{5261046,
  title = {[Title page i]},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {i},
  month = {aug.},
  __markedentry = {[kimi:1]},
  abstract = {The following topics are dealt with: agile usability; agile project
	management; extreme product line engineering; agile software organisation;
	agile adoption; software engineering; CMMI; agile product management;
	team working and software testing.},
  doi = {10.1109/AGILE.2009.1},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {CMMI;agile adoption;agile product management;agile project management;agile
	software organisation;agile usability;extreme product line engineering;software
	engineering;software testing;team working;project management;software
	engineering;}
}

@INPROCEEDINGS{5261080,
  author = {Fisher, K.G. and Bankston, A.},
  title = {From Cradle to Sprint: Creating a Full-Lifecycle Request Pipeline
	at Nationwide Insurance},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {223 -228},
  month = {aug.},
  abstract = {After a successful transition from a prescriptive waterfall process
	to Scrum and XP, the Corporate Internet Solutions group at Nationwide
	Insurance found velocity and efficiency stumbling due to the competing
	and vague priorities of corporate silos. This presentation discusses
	how the team evolved the traditional Scrum process to better manage
	17 dependent projects, and reluctant internal business partners,
	through a combination of activities including clear Pre-Discovery
	activities, scenario planning, RITE usability testing, and kanban-style
	visual management systems.},
  doi = {10.1109/AGILE.2009.72},
  keywords = {Corporate Internet Solution;Nationwide Insurance;Scrum process;business
	partners;corporate silos;full lifecycle request pipeline;kanban-style
	visual management system;scenario planning;usability testing;waterfall
	process;kanban;software development management;software houses;}
}

@INPROCEEDINGS{5261100,
  author = {Marchi, M.},
  title = {Weaponized Scrum},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {107 -112},
  month = {aug.},
  abstract = {Scrum provides a framework for managing agile development projects.
	It encourages transparency at all times, which helps reinforce the
	cycle of trust that must exist between development teams, management
	and the customer. Over the course of two years, our team had used
	Scrum to successfully deliver three revisions of our product with
	a degree of predictability that had been unattainable prior to adopting
	the agile method. When the projected schedule of our next project
	didnpsilat align with the business needs of the organization, we
	found ourselves on the fast-track to conflict. And we had given them
	all the ammunition they needed to turn our gesture of trust into
	a weapon of unimaginable destruction.},
  doi = {10.1109/AGILE.2009.33},
  keywords = {agile development project management;projected schedule;software development
	team;weaponized scrum;project management;software development management;team
	working;}
}

@INPROCEEDINGS{5261094,
  author = {Roche, G. and Vasquez-McCall, B.},
  title = {The Amazing Team Race A Team Based Agile Adoption},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {141 -146},
  month = {aug.},
  abstract = {In 2008, our organization successfully implemented an agile software
	development approach (Scrum) across the Application Development department
	after piloting Scrum in 2007 with a few projects. In just four months,
	our department consisting of over 200 contractors and 70 full time
	employees transitioned from a traditional waterfall-style approach
	(RUP) to Scrum. Less then 2 months later, we were running 40 development
	projects that were time boxed to three months. In the previous year,
	we had 20 active projects with duration of 9 to 18 months. After
	a year of introducing Agile, members of our organization were well
	aware of what Scrum was, but growing weary of training. There was
	a clear need to create excitement around the adoption and scaling
	of Scrum within the application development group. This led us to
	develop what we called dasiaThe Amazing Team Race.psila This experience
	report is about how an agile transition team used a team-based approach
	for creating excitement while scaling Scrum in a globally distributed
	organization.},
  doi = {10.1109/AGILE.2009.67},
  keywords = {Scrum;The Amazing Team Race;agile software development approach;team
	based agile adoption;waterfall-style approach;software development
	management;team working;}
}

@INPROCEEDINGS{5261091,
  author = {Figueiredo, A.M.},
  title = {An Executive Scrum Team},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {147 -150},
  month = {aug.},
  abstract = {Scrum, like most of the agile processes, was created with the software
	projects world pains in mind. However, more and more itpsilas getting
	clearer that those pains are not exclusive to the software world,
	and they are present in whatever projects where change is a constant.
	In the executive business world today, change is a constant, and
	be prepared to them is a must. This way, Scrum reveals to be an appropriate
	framework to be used in executive business teams once they start
	to work focused on ROI (Return On Investment) and in the business
	goals, acquire teamwork spirit, making strategy and execution nearer,
	improve continuously and deliver value quickly. In this work the
	author will talk about his experience on using Scrum with senior
	management and how the results supported Scrum promotion for other
	projects inside the company.},
  doi = {10.1109/AGILE.2009.56},
  keywords = {agile process;business goal;executive business team;executive scrum
	team;senior management;software project;teamwork spirit;project management;software
	management;team working;}
}

@INPROCEEDINGS{5261109,
  author = {Martin, A. and Biddle, R. and Noble, J.},
  title = {XP Customer Practices: A Grounded Theory},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {33 -40},
  month = {aug.},
  abstract = {The customer is a critical role in XP, but almost all XP practices
	are presented for developers by developers. While XP calls for real
	customer involvement, it does not explain what XP customers should
	do, nor how they should do it. Using grounded theory, we discovered
	eight customer practices used by successful XP teams: customer boot
	camp, customerpsilas apprentice, customer pairing, and programmerpsilas
	holiday support the well-being and effectiveness of customers; programmer
	on-site and road shows support team and organization interactions;
	and big picture up front and re-calibration support customers steering
	the whole project. By adopting these processes, XP customers and
	teams can work faster and more sustainably.},
  doi = {10.1109/AGILE.2009.68},
  keywords = {XP customer practices;big picture up front;customer apprentice;customer
	boot camp;customer pairing;customers steering;grounded theory;programmer
	onsite;real customer involvement;recalibration;roadshows support
	team;DP industry;organisational aspects;}
}

@INPROCEEDINGS{5261107,
  author = {Faegri, T.E.},
  title = {Improving General Knowledge in Agile Software Organizations: Experiences
	with Job Rotation in Customer Support},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {49 -56},
  month = {aug.},
  abstract = {For many organizations the transition to agile methods is problematic
	due to history of bureaucratization and subsequent extensive specialization
	of knowledge among people. Specialist knowledge inhibits self-organization
	and role interchangeability which are key elements of agile development.
	Knowing that bureaucracies are hard to counteract once established,
	how can development of general knowledge in software organizations
	be improved? Job rotation is a well-known practice often used to
	improve general knowledge. The reported action research evaluated
	job rotation among developers in customer support. The findings suggest
	that general knowledge is considered interesting and valuable among
	the participants. However, the findings also show that general knowledge
	acquisition can be found irrelevant and therefore counter-efficient
	for day-to-day work among participants if the perceived applicability
	to own projects is too low. Therefore, using job rotation to improve
	general knowledge requires careful considerations. Implications for
	research and practice are discussed.},
  doi = {10.1109/AGILE.2009.69},
  keywords = {agile development;agile software organization;customer support;job
	rotation;knowledge acquisition;knowledge specialization;role interchangeability;self-organization;knowledge
	management;multiskilling;organisational aspects;software development
	management;}
}

@INPROCEEDINGS{5261101,
  author = {Maples, C.},
  title = {Enterprise Agile Transformation: The Two-Year Wall},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {90 -95},
  month = {aug.},
  abstract = {As Agile is adopted by large enterprises, the number of transformation
	success stories has grown. But, transformation is an ongoing process,
	and maintaining organizational change is difficult. So, what happens
	after the success stories have been told? What can IT leaders expect
	once the Agile transformation honeymoon is over? This paper addresses
	these questions head-on, sharing Borlandpsilas transformation experiences
	and the challenges that emerged after the initial phases gave way
	to a new stage in our journey.},
  doi = {10.1109/AGILE.2009.62},
  keywords = {Borland development organization;IT leaders;enterprise agile transformation;organisational
	aspects;virtual enterprises;}
}

@INPROCEEDINGS{5261099,
  author = {Goebel, C.J.},
  title = {How Being Agile Changed Our Human Resources Policies},
  booktitle = {Agile Conference, 2009. AGILE '09.},
  year = {2009},
  pages = {101 -106},
  month = {aug.},
  abstract = {Menlo Innovations adopted agile software development practices in
	order to build highly effective software development teams that could
	produce software for Menlopsilas clients. As client needs changed
	during projects, it was often appropriate to change the size of the
	team working on the project. In order to accommodate the effective
	integration of new staff, and to remain productive when staffing
	was reduced, knowledge transfer skills became critical. Menlo found
	that many of the agile engineering practices, when performed well,
	form the basis for effective knowledge transfer. What Menlo did not
	expect was that the flexibility provided by being able to move resources
	from project to project would ultimately allow the ability to offer
	creative human resource policies. These policies have resulted in
	Menlo winning many awards, including the Alfred P Sloan Award for
	Workforce Flexibility.},
  doi = {10.1109/AGILE.2009.49},
  keywords = {Menlo client;agile software development;human resources policy;individual
	software project management;knowledge transfer;matching staffing
	level;team working;human resource management;project management;software
	development management;team working;}
}

@INPROCEEDINGS{1231459,
  author = {Boelsterli, B.},
  title = {Iteration advocate/iteration transition meeting: small sampling of
	new agile techniques used at a major telecommunications firm},
  booktitle = {Agile Development Conference, 2003. ADC 2003. Proceedings of the},
  year = {2003},
  pages = { 109 - 113},
  month = {june},
  abstract = { We document a successful implementation of agile at a major telecommunications
	firm. Critical aspects to mention about this particular software
	endeavor include: a) this could be one of the largest implementations
	of agile documented thus far (approximately 275 immediate and over
	3,000 supportive contributors involved), b) the team practicing agile
	did so under the constraints of a waterfall-gated (both milestone
	and financial) environment, c) a 'practice tapestry' approach was
	used to 'weave' together elements of agile that would work for this
	organization, and finally, d) new practices, not previously documented
	to the agile community were applied in addition to those well known
	thus far. We focus on these new practices in an effort to share them
	with the agile community. The weaving together of existing and new
	practices, enabled this major telecommunications firm to deliver
	a major software release to its large customer base.},
  doi = {10.1109/ADC.2003.1231459},
  keywords = { SDLC; agile techniques; iteration advocate meeting; iteration specification;
	iteration transition meeting; software development; software endeavor;
	team practicing agile; telecommunications firm; waterfall-gated constraints;
	formal specification; software development management; software prototyping;
	team working; telecommunication services;}
}

@INPROCEEDINGS{1231455,
  author = {Vanhanen, J. and Itkonen, J. and Sulonen, P.},
  title = {Improving the interface between business and product development
	using agile practices and the cycles of control framework},
  booktitle = {Agile Development Conference, 2003. ADC 2003. Proceedings of the},
  year = {2003},
  pages = { 71 - 80},
  month = {june},
  abstract = { We describe how we created and adopted an agile product development
	process in a small software company based on the cycles of control
	framework by combining selected agile practices and principles from
	the scrum and XP methodologies. Describing the development process
	using the framework helped in identifying the crucial control points
	between business and development and enabled defining practical and
	well-functioning connections between them. The control points enable
	visibility and flexible management of product development status
	and direction. Currently business understands development status
	better, which has led to fewer interruptions between the control
	points, and thus improved working conditions for development. Positive
	experiences are reported of newly adopted practices such as scrum
	meetings, pair programming, and unit testing. However, finding and
	adopting technical tools to facilitate the process proved to be challenging.},
  doi = {10.1109/ADC.2003.1231455},
  keywords = { XP methodologies; agile practices; agile product development process;
	business control points; control framework; pair programming; release
	cycle; scrum cycle; scrum meetings; scrum principles; software company;
	sprint cycle; strategic planning cycle; technical tools; unit testing;
	organisational aspects; product development; program testing; quality
	assurance; strategic planning;}
}

@INPROCEEDINGS{1231462,
  author = {Derbier, G.},
  title = {Agile development in the old economy},
  booktitle = {Agile Development Conference, 2003. ADC 2003. Proceedings of the},
  year = {2003},
  pages = { 125 - 131},
  month = {june},
  abstract = { As part of the delivery an automated hub for a postal operator, the
	Solystic company has to build a complex and feature rich information
	system that supports a highly automated process with multiple intricate
	sub-processes and exceptions. The effort has several challenges:
	1) it is business critical for the customer, and the output of the
	project will give the customer a leading position; 2) it is the first
	time Solystic is managing a complete system project, although its
	mother company Northrop Grumman had previous experience of this business;
	3) the program is one of the first business of the Solystic company
	in the international field; 4) it is a fixed price, fixed time contract
	with a short time frame. To face all these challenges, the software
	development group in charge of the information system has adopted
	a number of agile practices and techniques to manage the project.
	The major project settings are adapted from Alistair Cockburn's crystal
	set of methodologies, SCRUM and Jim Coplien's work on organizational
	patterns. We present the findings and lessons learned by the team
	and its manager.},
  doi = {10.1109/ADC.2003.1231462},
  keywords = { Alistair Cockburn crystal method; agile development; information
	system; project support environment; information systems; project
	support environments; software development management; team working;}
}

@INPROCEEDINGS{1231463,
  author = {Kane, D.},
  title = {Introducing agile development into bioinformatics: an experience
	report},
  booktitle = {Agile Development Conference, 2003. ADC 2003. Proceedings of the},
  year = {2003},
  pages = { 132 - 139},
  month = {june},
  abstract = { This experience report describes our efforts to introduce agile development
	techniques incrementally into our customer's organization in the
	National Cancer Institute and develop a partnering relationship in
	the process. The report addresses the steps we have taken not only
	to deploy the practices, but also to gain customer support for them.
	It addresses variations we have used to adapt to our customer's environment,
	including our approach to involving customer personnel at remote
	locations. We also address challenges we still must face, including
	how best to manage a product-line with agile development techniques.},
  doi = {10.1109/ADC.2003.1231463},
  keywords = { agile development technique; bioinformatics; configuration management;
	customer organization; biology computing; configuration management;
	software engineering;}
}

@INPROCEEDINGS{1231464,
  author = {Sepulveda, C.},
  title = {Agile development and remote teams: learning to love the phone},
  booktitle = {Agile Development Conference, 2003. ADC 2003. Proceedings of the},
  year = {2003},
  pages = { 140 - 145},
  month = {june},
  abstract = { We currently work on a project where we adopted an agile process
	that integrates elements of extreme programming and agile modelling.
	Our approach is unconventional however; instead of the team being
	co-located, we work remotely as the lead developer. The risk of increased
	communication costs can be mitigated rather easily. However, trust
	is the most complicated element of team dynamics to establish and
	maintain. A virtual team must address this issue in order to succeed.
	Remote teams can work quite well. We have been delivering quality
	software in a timely manner, within the expectations of management
	for the last two years. We actually are more efficient and successful
	with a virtual team than when we were all co-located in the same
	room.},
  doi = {10.1109/ADC.2003.1231464},
  keywords = { agile development; communication cost; extreme programming element
	integration; remote team; team dynamics; virtual team; groupware;
	interactive systems; project management; software development management;
	team working; teleworking;}
}

@INPROCEEDINGS{1231446,
  title = {Proceedings of the Agile Development Conference. ADC 2003},
  booktitle = {Agile Development Conference, 2003. ADC 2003. Proceedings of the},
  year = {2003},
  pages = {iii},
  month = {june},
  __markedentry = {[kimi:1]},
  abstract = {The following topics are dealt with: urban simulation; agile reengineering
	process; agile software development; test driven development; organizational
	aspects; boxcar development; bioinformatics agile development; acceptance
	test framework; software iteration transition meeting.},
  doi = {10.1109/ADC.2003.1231446},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {acceptance test framework;agile reengineering process;agile software
	development;boxcar development;organizational aspects;software iteration
	transition meeting;test driven development;urban simulation;organisational
	aspects;software engineering;}
}

@INPROCEEDINGS{1359804,
  author = {Luck, G.},
  title = {Subclassing XP: breaking its rules the right way},
  booktitle = {Agile Development Conference, 2004},
  year = {2004},
  pages = { 114 - 119},
  month = {june},
  abstract = { Extreme programming encourages adoption of all of its practices.
	In practice many projects drop practices. What remains can be an
	incomplete methodology, which is dangerous. This problem can be overcome
	by replacing each removed dropped practice with a compensating practice
	tailored to the circumstances of the project - effectively subclassing
	XP. This experience report recounts the experiences of subclassing
	of XP at Wotif.com, where pair programming was replaced with "pairing"
	and refactoring was replaced with "team refactoring".},
  doi = {10.1109/ADEVC.2004.19},
  keywords = { Wotif.com; XP subclassing; extreme programming; pair programming;
	team refactoring; programming; project management; software prototyping;
	systems re-engineering; team working;}
}

@INPROCEEDINGS{1359793,
  author = {Layman, L. and Williams, L. and Cunningham, L.},
  title = {Exploring extreme programming in context: an industrial case study},
  booktitle = {Agile Development Conference, 2004},
  year = {2004},
  pages = { 32 - 41},
  month = {june},
  abstract = {A longitudinal case study evaluating the effects of adopting the extreme
	programming (XP) methodology was performed at Sabre Airline Solutions
	trade;. The Sabre team was a characteristically agile team in that
	they had no need to scale or re-scope XP for their project parameters
	and organizational environment. The case study compares two releases
	of the same product. One release was completed just prior to the
	team's adoption of the XP methodology, and the other was completed
	after approximately two years of XP use. Comparisons of the new release
	project results to the old release project results show a 50% increase
	in productivity, a 65% improvement in pre-release quality, and a
	35% improvement in post-release quality. These findings suggest that,
	over time, adopting the XP process can result in increased productivity
	and quality.},
  doi = {10.1109/ADEVC.2004.15},
  keywords = { Sabre Airline Solutions; XP projects; agile team; extreme programming;
	industrial case study; organizational environment; programming; project
	management; team working;}
}

@INPROCEEDINGS{1359799,
  author = {Kuranuki, Y. and Hiranabe, K.},
  title = {AntiPractices: AntiPatterns for XP practices},
  booktitle = {Agile Development Conference, 2004},
  year = {2004},
  pages = { 83 - 86},
  month = {june},
  abstract = { When you introduce extreme programming (XP) to your project, the
	team gets fresh energy and high efficiency. However, sustaining the
	good condition becomes difficult when you are attacked by its side
	effects. We call these XP side effects "AntiPractices", just as AntiPatterns
	come from Patterns. "Turning all the knobs up to 10" is the XP way,
	but AntiPractices show bad symptoms of the overdrive. In this experience
	report, we identify AntiPractices discovered from our projects. We
	add prescriptions so that XPers can share the countermeasures.},
  doi = {10.1109/ADEVC.2004.7},
  keywords = { AntiPatterns; AntiPractices; XP practices; contracts; extreme programming;
	team working; contracts; object-oriented methods; programming; project
	management; software management; team working;}
}

@INPROCEEDINGS{1359803,
  author = {Hodgetts, P.},
  title = {Refactoring the development process: experiences with the incremental
	adoption of agile practices},
  booktitle = {Agile Development Conference, 2004},
  year = {2004},
  pages = { 106 - 113},
  month = {june},
  abstract = { The goal of many current process improvement efforts is to become
	more agile by adopting an agile process. However, the results of
	several recent projects suggest that when attempting to become more
	agile, adopting an agile process is exactly the wrong thing to do!
	In this experience report, the author discuss his failures with wholesale
	process adoption and his successes using an incremental adoption
	strategy based on metric- and retrospection-driven feedback. Similar
	to refactoring practices for design and code, this strategy identifies
	"process smells," and targets the worst of them with specific agile
	practices drawn from several popular agile processes.},
  doi = {10.1109/ADEVC.2004.17},
  keywords = { agile process; incremental adoption strategy; process smells; refactoring
	practices; retrospection-driven feedback; wholesale process adoption;
	project management; software process improvement; team working; wholesale
	data processing;}
}

@INPROCEEDINGS{1359800,
  author = {Jackson, A. and Shiu Lun Tsang and Gray, A. and Driver, C. and Clarke,
	S.},
  title = {Behind the rules: XP experiences},
  booktitle = {Agile Development Conference, 2004},
  year = {2004},
  pages = { 87 - 94},
  month = {june},
  abstract = { Agile processes such as XP (extreme programming) have been recognised
	for their potential benefits of improving software. During adoption
	of the XP process, teams can misapply the XP principles by following
	them verbatim, ignoring the context in which they are applied. In
	this paper we document our experiences where naive applications of
	XP principles were altered in recognition of context. We detail our
	observations of how teams "looked behind" the rules and began fitting
	XP to the problem rather than attempting to fit the problem to XP.
	We conclude by reflectively focusing on how this transformation occurred
	and suggest that it is buying into the XP ethos that drives this
	change of perspective on the XP process and principles.},
  doi = {10.1109/ADEVC.2004.9},
  keywords = { XP experiences; XP principles; agile process; extreme programming;
	project management; team working; programming; project management;
	software management; software process improvement; team working;}
}

@INPROCEEDINGS{6170011,
  author = {Wagh, R.},
  title = {Using Scrum for Software Engineering Class Projects},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {68 -71},
  month = {feb.},
  abstract = {Imparting industry relevant skills and knowledge for the graduating
	students in the field of Software Engineering is difficult but is
	necessary to make the students employable and productive right from
	the time of joining on the job. With outdated curriculum and slow
	process of revision of syllabi it is difficult to achieve this objective.
	This paper discusses how one of the popular agile project management
	frameworks, Scrum can be taught and used to teach basic concepts
	of software project management without necessitating revision of
	the syllabus. It also discusses the rise in motivation and interest
	level of students due to adoption of this approach. It also shows
	the flexibility of this agile approach to adapt to a situation different
	than a normal software development scenario in an organization.},
  doi = {10.1109/AgileIndia.2012.17},
  excluded = {Kimi, title},
  keywords = {Scrum;agile project management;software engineering class project;software
	project management;computer science education;project management;software
	prototyping;}
}

@INPROCEEDINGS{6170012,
  author = {Bhasin, S.},
  title = {Quality Assurance in Agile: A Study towards Achieving Excellence},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {64 -67},
  month = {feb.},
  abstract = {Agile Methods are known to have built-in quality management system,
	however there are still challenges seen in the real life scenarios
	within the software organizations that are transitioning from traditional
	method to Agile development methods. Traditional Quality Assurance
	techniques are reporting based and rely on heavy weight inspection
	methods whereas Agile Quality Assurance techniques are built-in daily
	activities by teams. Research proposal here aims to study various
	challenges faced in terms of assuring quality in Agile, what are
	the key drivers or indicators of Quality in agile and proposing the
	framework to evaluate what aspects of Agile improve the quality of
	the product in terms of bug rates, development time and costs. Through
	this study we aim to provide some suggestions to help organizations
	overcome obstacles expected in adopting the agile method as software
	development tool and ensuring quality.},
  doi = {10.1109/AgileIndia.2012.18},
  excluded = {Kimi, title},
  keywords = {agile development methods;agile quality assurance techniques;bug rates;costs;development
	time;inspection methods;product quality;quality management system;software
	development tool;software organizations;inspection;organisational
	aspects;quality assurance;software prototyping;software quality;}
}

@INPROCEEDINGS{6170015,
  author = {Kamat, V. and Sardessai, S.},
  title = {Agile Practices in Higher Education: A Case Study},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {48 -55},
  month = {feb.},
  __markedentry = {[kimi:2]},
  abstract = {Indian higher education is looking forward to major reforms. In the
	past, much of the efforts to bring in reforms have proved to be counter
	productive. There is so much of wastage of talent and resources that
	one is compelled to think whether the agile practices that have met
	with so much of success in manufacturing and in software industry
	can be of any help in education sector as well. With this guided
	inquiry we carried out an experiment to practice few of these principles
	and the results are very encouraging. In this paper we discuss the
	motivation behind applying agile practices in higher education and
	the methodology adopted by us with the help of a case study.},
  doi = {10.1109/AgileIndia.2012.10},
  excluded = {Verify (Kimi)},
  excludekimi = {abstract},
  keywords = {Indian higher education;agile practice;education sector;resource wastage;software
	industry;talent wastage;computer aided instruction;further education;}
}

@INPROCEEDINGS{6170016,
  author = {Sonia, S. and Singhal, A.},
  title = {Integration Analysis of Security Activities from the Perspective
	of Agility},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {40 -47},
  month = {feb.},
  __markedentry = {[kimi:2]},
  abstract = {To combat the increasing trends of security breaches reported nowadays,
	there is a need to deploy strict security activities with various
	development methodologies. In the present work we are focusing on
	an extremely popular agile development Methodology. These methodologies
	are informal and lightweight in nature having short timescales. But
	integration of security activities with agile activities always falls
	short of expectations, as security practices are not able to adapt
	such characteristics possessed by agile software easily. Therefore
	a proper integration methodology is required to achieve this aim.
	Here we propose a novel approach which provides quantitative measure
	of agility for security activities in terms of real agility degree
	(RAD). It determines the degree of compatibility of a security activity
	with agile process. We have also presented a comparative analysis
	of security activities with each other in context of RAD and risk
	removal efficiency factor (RREF). RREF is an assessment of how much
	effective a security activity is for removing the risk. This comparison
	will assist a developer during software development in deciding which
	security activity is beneficial than the other for integration.},
  doi = {10.1109/AgileIndia.2012.9},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {agile software;integration analysis;real agility degree;risk removal
	efficiency factor;security activities;security breaches;security
	of data;software prototyping;}
}

@INPROCEEDINGS{6170020,
  author = {Bass, J.M.},
  title = {Influences on Agile Practice Tailoring in Enterprise Software Development},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {1 -9},
  month = {feb.},
  abstract = {Agile development projects have become a reality in large enterprises
	using offshore development models. A case study involving seven international
	companies with offices in Bangalore, India, and London, UK was conducted,
	including interviews with 19 practitioners. The contribution of this
	paper is to illustrate the reasons for tailoring Agile practices
	within the context of large enterprises. The findings show that scrum
	roles and practices did not conflict with enterprise policies or
	processes and were thought to improve product quality and productivity.
	However, agile practices from the XP tradition were not so widely
	adopted. Test driven development did not integrate well within enterprises
	where independent quality assurance teams were constituted as separate
	departments. Continuous integration was found to be challenging where
	enterprise software products required time consuming regression testing
	and elaborate code release processes. While adoption of coding standards
	and collective code ownership are necessary to facilitate interaction
	between disparate stakeholder groups.},
  doi = {10.1109/AgileIndia.2012.15},
  keywords = {Scrum;XP;agile development project;agile practice tailoring;code release
	process;coding standard;collective code ownership;enterprise software
	development;enterprise software product;international companies;offshore
	development model;regression testing;test driven development;business
	data processing;regression analysis;software prototyping;}
}

@INPROCEEDINGS{6170013,
  author = {Asnawi, A.L. and Gravell, A.M. and Wills, G.B.},
  title = {Factor Analysis: Investigating Important Aspects for Agile Adoption
	in Malaysia},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {60 -63},
  month = {feb.},
  abstract = {This paper focuses on identifying the important aspects of Agile adoption
	from software practitioners in Malaysia. We analyse 27 Agile adoption
	variables from a survey of early Agile users in Malaysia. Factor
	analysis is conducted to identify the clusters of the variables (or
	items) and how they are inter-related to produce factors. Most of
	the respondents are from software organisations in Kuala Lumpur and
	Selangor, in which most of the companies are located in Malaysia.
	The clusters of variables resulting from this analysis can serve
	as a reference to the practitioners planning to adopt the methodology.
	The top factors identified from this study are shown in terms of
	(i) developer involvement and organisation-related aspects, (ii)
	cultural and people related aspects and (iii) customer collaboration
	and the need for professional skills when using Agile methods. In
	addition, factor analysis discovered that practitioners disagreed
	about the importance of the technical aspects of Agile. While we
	believe that these findings are particularly important from the Malaysian
	perspective, however, they also help add to the body of evidence
	in the field of software engineering and software process particularly
	in terms of Agile methods adoption. Moreover, the study also can
	help adopters from the nearby geographical regions to understand
	and see the suitability of Agile methods for their organisations.},
  doi = {10.1109/AgileIndia.2012.13},
  keywords = {Kuala Lumpur;Malaysia;Selangor;agile adoption;agile users;cultural
	aspects;customer collaboration;factor analysis;geographical regions;organisation
	related aspects;people related aspects;professional skills;software
	engineering;software organisations;software practitioners;software
	process;cultural aspects;organisational aspects;software prototyping;}
}

@INPROCEEDINGS{6170014,
  author = {Waterman, M. and Noble, J. and Allan, G.},
  title = {How Much Architecture? Reducing the Up-Front Effort},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {56 -59},
  month = {feb.},
  abstract = {A key part of software architecture is the design of the high level
	structure of a software system -- an exercise in planning ahead.
	Agile software development methods discourage planning ahead, encapsulated
	by the Agile Manifesto philosophy "[we value] responding to change
	over following aplan". Development without architecture planning
	risks failure. This leads to an apparent paradox: how can you design
	an architecture while using a methodology that promotes not planning
	ahead? This paper introduces Grounded Theory research that is exploring
	the factors that affect how much architecture planning industry practitioners
	do up-front -- in other words, how much architecture? Early results
	show that the experience of the architects and predefined or template
	architectures both help to reduce the architectural effort required
	without sacrificing the benefits of a full architecture design.},
  doi = {10.1109/AgileIndia.2012.11},
  excluded = {Kimi, title},
  keywords = {agile manifesto philosophy;agile software development methods;architecture
	planning industry practitioners;architecture planning risks failure;grounded
	theory;high level structure;predefined architectures;software architecture;software
	system design;template architectures;up-front effort;software architecture;software
	prototyping;}
}

@INPROCEEDINGS{6170017,
  author = {Asnawi, A.L. and Gravell, A.M. and Wills, G.B.},
  title = {Emergence of Agile Methods: Perceptions from Software Practitioners
	in Malaysia},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {30 -39},
  month = {feb.},
  abstract = {Agile methods are an established process for developing software nowadays.
	There is, however, less evidence on their usage among software practitioners
	in Malaysia. While the methods have become mainstream in other regions,
	that is not the case in this country. This paper empirically investigates
	the perceptions of Agile methods usage from seven organisations involving
	14 software practitioners in Malaysia. Our participants are using
	Scrum and have a maximum of five years experience. We categorised
	our findings in terms of awareness, introduction, and challenges
	they are facing, together with the suggested and practiced solution
	from them. Interestingly, a change in mind set when practicing Agile
	was identified to be helpful in reducing the challenges. Lastly we
	present the practices in Agile they perceived to deliver the most
	benefits. We found that the use of Agile is still emerging in the
	country, and awareness is still lacking especially within the government
	sector. Although several challenges have been encountered when introducing
	Agile in their organisations, the benefits of Agile are reported
	to be in Agile practices such as: the involvement from all parties
	from the beginning, daily stand-up meeting, iterative and incremental,
	applying burn down chart, sprint and continuous integration. We aim
	to provide awareness and knowledge about Agile methods to the practitioners
	in the country and the nearby region. This paper can serve as a reference
	to the early adopters who intend to use Agile methods in the future.},
  doi = {10.1109/AgileIndia.2012.14},
  keywords = {Malaysia;agile methods;software development;software practitioners;software
	prototyping;}
}

@INPROCEEDINGS{4599507,
  author = {Therrien, E.},
  title = {Overcoming the Challenges of Building a Distributed Agile Organization},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {368 -372},
  month = {aug.},
  abstract = {First American Corelogic had adopted agile processes in 2005, but
	not all teams were operating successfully. The biggest challenges
	were experienced by the off-shore and distributed teams. This experience
	report discusses these challenges and how the distributed team adapted
	agile principles and roles to reach optimal team velocity and productivity.},
  doi = {10.1109/Agile.2008.9},
  keywords = {distributed agile organization;off-shore-distributed teams;optimal
	team velocity;software engineering;}
}

@INPROCEEDINGS{4599519,
  author = {Kniberg, H. and Farhang, R.},
  title = {Bootstrapping Scrum and XP under Crisis A Story from the Trenches},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {436 -444},
  month = {aug.},
  abstract = {During 2006 Tain, a Swedish gaming company, underwent a fast and dramatic
	agile transitioning process driven by a crisis situation. Many of
	the lessons learned are described in the book "Scrum and XP from
	the Trenches". This experience report focuses on the actual bootstrapping
	process - the critical decisions and changes made during the first
	few months that ultimately transformed a burning and sinking ship
	into a fairly well-oiled agile software development organization.},
  doi = {10.1109/Agile.2008.34},
  keywords = {agile software development;agile transitioning process;gaming software;trenches;computer
	bootstrapping;computer games;software engineering;}
}

@INPROCEEDINGS{4599458,
  author = {Lee, E.C.},
  title = {Forming to Performing: Transitioning Large-Scale Project Into Agile},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {106 -111},
  month = {aug.},
  abstract = {This experience report discusses a large scale team transitioning
	from waterfall to Agile while going through all phases of Tuckman's
	model. I describe the issues we encountered, lessons we learned,
	and how we coped with difficult situations in each of the four phases
	of the Tuckman's model of team development.},
  doi = {10.1109/Agile.2008.75},
  keywords = {Agile software development;Tuckman model;large-scale project;software
	engineering;}
}

@INPROCEEDINGS{4599529,
  author = {Cannizzo, F. and Clutton, R. and Ramesh, R.},
  title = {Pushing the Boundaries of Testing and Continuous Integration},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {501 -505},
  month = {aug.},
  abstract = {Agile and eXtreme Programming practices have popularized concepts
	of test driven development and continuous build cycles to the software
	community. Such practices are typically adopted to implement and
	deliver functionality early in the development process. However,
	some types of applications such as the one described in this report
	also require continuous tests for performance and robustness. This
	report shows the experiences of the authors in extending the continuous
	build loop to include additional tests for performance and robustness,
	with the intention of overcoming limitations of standard testing
	frameworks when applied to highly concurrent and real time applications.
	It also describes how they went about building the appropriate framework
	to support the execution and verification of the test results.},
  doi = {10.1109/Agile.2008.31},
  excluded = {Kimi, title},
  keywords = {continuous build cycles;extreme programming practices;software community;test
	driven development;program testing;software engineering;}
}

@INPROCEEDINGS{4599526,
  author = {Isham, M.},
  title = {Agile Architecture IS Possible You First Have to Believe!},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {484 -489},
  month = {aug.},
  abstract = {In early 2007, ChannelAdvisor undertook an ambitious project to rearchitect
	one of its core product offerings. Flush with early success from
	rapid customer adoption, the foundation for this product had grown
	well beyond its initial design. As defects grew in frequency and
	severity, pressure mounted to "fix it yesterday", but consensus on
	exactly how proved elusive. "Fix it right" ideals battled with "fix
	it now", ultimately resulting in a new architecture that was inefficient,
	incomplete, and, after 3 long months of "working harder, not smarter",
	cancelled. In this experience report I will recap my experience as
	a product development manager sponsoring this project; revealing
	how the project went awry, what the team learned, and how the utilization
	of the Scrum process not only created a scalable, reliable architecture,
	but also greatly improved the ongoing productivity and morale of
	the product team.},
  doi = {10.1109/Agile.2008.16},
  excluded = {Kimi, title},
  keywords = {ChannelAdvisor;agile architecture;product development;product team;rapid
	customer adoption;software architecture;}
}

@INPROCEEDINGS{4599467,
  author = {Valade, R.},
  title = {The Big Projects Always Fail: Taking an Enterprise Agile},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {148 -153},
  month = {aug.},
  abstract = {My overall approach to software development has been to decompose
	large efforts into smaller, tractable components, and to fail fast
	when things appear to be heading in the wrong direction. Though not
	a particularly unusual model, I have been able to road-test it over
	eight years of agile experience, including a stint at DaimerChrysler
	on an extreme programming (XP) team that included some of the members
	of the original C3 payroll project. This pattern has been a keystone
	of our direction at the technology division of Entertainment Publications,
	where we began our agile transformation about two years ago. Though
	it was originally a small pilot with an unspecified roll-out plan,
	we now use an agile approach for all our software development and
	support. This paper highlights the lessons we've learned in the process
	- some items for you to either avoid or embrace.},
  doi = {10.1109/Agile.2008.63},
  keywords = {C3 payroll project;DaimerChrysler;enterprise agile;extreme programming;software
	development;software engineering;}
}

@INPROCEEDINGS{4599459,
  author = {Goodman, D. and Elbaz, M.},
  title = {"It's Not the Pants, it's the People in the Pants" Learnings from
	the Gap Agile Transformation What Worked, How We Did it, and What
	Still Puzzles Us},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {112 -115},
  month = {aug.},
  __markedentry = {[kimi:]},
  abstract = {After 7 years of traditional IT delivery, Gap Inc.Direct decided to
	adopt Agile. This experience report discusses three key factors that
	contributed to our successful (and ongoing) Agile transformation:
	1. Ambitious Pilot Project, 2. Massive Investment in Continuous Integration,
	3. Rethinking our Assets. The choices we made might seem risky and
	even counter-intuitive, but understanding them could help other organizations
	consider different points of view and priorities as they embark on
	the transition to Agile. Additionally, we will identify ongoing challenges
	and what is left in our transformation backlog.},
  doi = {10.1109/Agile.2008.87},
  keywords = {Gap Inc;IT delivery;agile transformation;ambitious pilot project;assets
	rethinking;continuous integration;massive investment;project management;software
	engineering;software management;}
}

@INPROCEEDINGS{4599530,
  author = {Uy, E. and Rosendahl, R.},
  title = {Migrating from SharePoint to a Better Scrum Tool},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {506 -512},
  month = {aug.},
  __markedentry = {[kimi:]},
  abstract = {In 2007 the decision to broaden the adoption of Scrum to all development
	teams forced Kelley Blue Book (KBB) to seek out a more efficient
	and effective Scrum tool. KBBpsilas use of SharePoint was nascent
	at the time and was a fine tool for several small Scrum teams. However
	with the total number of teams now at fifteen, SharePoint alone was
	just not keeping pace with the needs of the organization. Deciding
	to move to a more robust tool to promote agility while keeping up
	with product release plans can be a complicated challenge. KBB chose
	VersionOne to replace SharePoint. Migration to VersionOne involved
	numerous departments and two offshore facilities. With KBB sharing
	their experience of this common situation, other companies can learn
	about and adopt proven techniques to ensure a successful tool migration.
	This paper will cover KBBpsilas Scrum implementation, goals of tool
	migration, the selection process, migration approach, and results.},
  doi = {10.1109/Agile.2008.69},
  excluded = {Kimi, title},
  keywords = {Scrum tool;SharePoint;VersionOne;development team;tool migration;software
	development management;software selection;software tools;team working;}
}

@INPROCEEDINGS{4599468,
  author = {Goos, J. and Melisse, A.},
  title = {An Ericsson Example of Enterprise Class Agility},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {154 -159},
  month = {aug.},
  abstract = {Agile practices have gained momentum within Ericsson. This report
	describes the experiences of a transition towards agile in a product
	development unit (PDU) of about 300 people. This is just a small
	part of the large agile roll out in Ericssonpsilas development organization
	for multimedia products. This paper describes the approach, results,
	choices made, lessons learned and next steps.},
  doi = {10.1109/Agile.2008.24},
  keywords = {Ericsson example;agile practice;enterprise class agility;multimedia
	product;product development unit;software development management;}
}

@INPROCEEDINGS{4599460,
  author = {Nottonson, K. and DeLong, K.},
  title = {Crawl, Walk, Run: 4 Years of Agile Adoption at BabyCenter.com},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {116 -120},
  month = {aug.},
  abstract = {Four years ago the BabyCenter team was tasked with more projects than
	actual developers while delivery dates were set long before projects
	were scoped or staffed. Now, four years later, the team has evolved
	into sprints with predictable, steady velocities and a comprehensive
	planning process wrapping the Scrum Sprints. Learn how BabyCenter
	grew up by adapting Scrum and modifying the planning process.},
  doi = {10.1109/Agile.2008.84},
  keywords = {BabyCenter team;BabyCenter.com;agile methodology adoption;project
	development;software development planning process;project management;software
	development management;team working;}
}

@INPROCEEDINGS{4599448,
  author = {Seger, T. and Hazzan, O. and Bar-Nahor, R.},
  title = {Agile Orientation and Psychological Needs, Self-Efficacy, and Perceived
	Support: A Two Job-Level Comparison},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {3 -14},
  month = {aug.},
  abstract = {Agile software development introduces a new paradigm into software
	engineering. The research presented in this paper questioned what
	individual characteristics, such as psychological needs, self-efficacy
	and perceived support from peers and managers, can tell us about
	the agile orientation of software practitioners. Data were gathered
	using questionnaires completed by 376 software developers employed
	in two divisions of an international Israeli company. In addition
	to the research description and findings, we also suggest specific
	implications derived from the research findings.},
  doi = {10.1109/Agile.2008.27},
  keywords = {agile orientation;agile software development;psychological needs;software
	engineering;software practitioners;personnel;psychology;software
	development management;}
}

@INPROCEEDINGS{4599488,
  author = {Berteig, M.},
  title = {Experience Report: Extremely Short Iterations as a Catalyst for Effective
	Prioritization of Work},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {265 -268},
  month = {aug.},
  abstract = {In this client organization, agile methods were not producing expected
	improvements, primarily because the stakeholders could not agree
	on priorities of the work the team was doing. This team decided to
	use extremely short iterations to expose the problems caused by a
	lack of prioritization. In this experience report, the author, who
	was a coach engaged by the organization, explores this experience.
	The author will present this extended case study in detail including
	organizational characteristics and history, the early stages of agile
	adoption by the team, the crisis, the experiment with two-day long
	iterations, the detailed stakeholder analysis, the importance of
	financial modelling in clarifying the crisis, and the resolution
	that emerged from the crisis and the financial modelling.},
  doi = {10.1109/Agile.2008.95},
  keywords = {agile methods;client organization;financial modelling;stakeholder
	analysis;software engineering;}
}

@INPROCEEDINGS{4599531,
  author = {Cannizzo, F. and Marcionetti, G. and Moser, P.},
  title = {Evolution of the Tools and Practices of a Large Distributed Agile
	Team},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {513 -518},
  month = {aug.},
  abstract = {Since its formation in 2005, the Web21C SDK team, has been using an
	agile methodology for the development of the BT Web21C SDK and related
	services. The team is made of 40 members distributed between the
	UK and the US. At the core of its agility is a continuously evolving
	toolbox consisting of tools selected by the team; it supports four
	core practices adopted to manage the development activities: maximum
	project status visibility, immediate feedback, ruthless automation
	and effective communication. This report shows which tools are currently
	in use, how the toolbox evolved to its current state and how these
	tools support the aforementioned core practices.},
  doi = {10.1109/Agile.2008.32},
  keywords = {Web service;Web21C SDK team;agile methodology;distributed agile team;software
	tool;Web services;software development management;software tools;team
	working;}
}

@INPROCEEDINGS{4599521,
  author = {Berteig, G.},
  title = {THE LEARNING CIRCLE: An Evolution of Agile for Learning Environments},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {453 -458},
  month = {aug.},
  __markedentry = {[kimi:2]},
  abstract = {Agile methods provide a framework for action. No two Agile projects
	are exactly alike; different strengths, participants, receptivity,
	time lines, and other variables help us to recognize that certain
	features of an Agile framework will be adopted more easily in one
	situation than in another. The learning circle is a framework for
	learning. It is a fresh way of viewing criteria for advancing the
	learning in a team. It is not only a call for flexibility, but also
	recognition that the movement of a team from one iteration to another
	is a seamless process of systematic, organic growth, rather than
	a hierarchical set of hurdles. Used in combination these two frameworks
	reinforce each other and can be used to establish a productive learning
	environment.},
  doi = {10.1109/Agile.2008.96},
  excludekimi = {abstract},
  keywords = {agile method;learning circle;productive learning environment;computer
	aided instruction;}
}

@INPROCEEDINGS{4599486,
  author = {Thomas, J.C. and Baker, S.W.},
  title = {Establishing an Agile Portfolio to Align IT Investments with Business
	Needs},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {252 -258},
  month = {aug.},
  abstract = {Those who implement agile software development and agile project management
	in a traditional corporate environment may encounter legacy corporate
	and IT processes that reflect legacy mindsets and cultures. These
	remnant processes, mindsets, and cultures represent opportunities
	to improve the systemic value that agile approaches are capable of
	enabling. For example, in many large corporations the annual budgeting
	cycle drives a mindset that scope, budget, and schedule must be established
	up front, often many months before project work begins. Success means
	delivering on that scope within the budget and schedule commitments.
	In turn, this mindset of defining business investment opportunities
	upfront, coupled with a project mentality where work must be completed
	before the next budgeting cycle begins, drives "big batch" (waterfall-type)
	project approaches and supporting IT processes. As our IT teams successfully
	applied agile methods at the project level, we began to address our
	approach for managing portfolios of projects to increase the amount
	of value we deliver with our business partners. As we did this, we
	ran headlong into inherent conflicts between agile and legacy corporate
	processes and mindsets. We recognized the need to transform those
	legacy processes and mindsets so that we manage the portfolios of
	project investments in an agile manner. This paper describes the
	challenges we faced as we applied agile methods to IT investment
	funding, change management, and governance; the success and failures
	we experienced; what we learned; and how we adapted to improve.},
  doi = {10.1109/Agile.2008.29},
  keywords = {IT investments;agile project management;agile software development;business
	needs;change management;corporate environment;legacy corporate;portfolio
	management;business data processing;investment;management of change;project
	management;software development management;}
}

@INPROCEEDINGS{4599469,
  author = {Long, K. and Starr, D.},
  title = {Agile Supports Improved Culture and Quality for Healthwise},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {160 -165},
  month = {aug.},
  abstract = {Five years ago, Healthwise began transitioning into an agile and lean
	organization. In 2007, four years after introduction to Agile, Healthwise
	was identified by the Wall Street Journal as one of the top 15 small
	employers in the United States [Spors, K., 2007]. Healthwise uses
	scrum and lean principles to manage multi-disciplinary product development
	teams. Teams create medical content in XML, produce interactive media
	in multiple formats,and develop software. This report describes Healthwisepsilas
	learning experience for agile adoption across multi-disciplinary
	teams, the measurable results, and how Agile supports the Healthwise
	culture.},
  doi = {10.1109/Agile.2008.61},
  keywords = {Healthwise;XML;agile adoption;agile supports;agile-lean organization;interactive
	media;multidisciplinary product development teams;multidisciplinary
	teams;XML;learning (artificial intelligence);medical computing;product
	development;software engineering;}
}

@INPROCEEDINGS{4599471,
  author = {Snapp, M.B. and Dagefoerde, D.},
  title = {The Accidental Agilists: One Team's Journey from Waterfall to Agile},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {171 -175},
  month = {aug.},
  abstract = {This case study outlines one team's shift from the traditional waterfall
	methodology to an agile approach for Web and custom application development.
	The transformation occurred by accident over the course of a Web
	advising system project at The Ohio State University. Using the five
	stages of grieving as a metaphor, we will describe how the team moved
	from denial that the waterfall approach was failing to acceptance
	that agile practices would be the best way to deliver the mission-critical
	application. In the end, the entire team re-envisioned itself, transformed
	its business practices, and has evolved into a significantly more
	agile organization.},
  doi = {10.1109/Agile.2008.68},
  keywords = {Web advising system project;Web application development;accidental
	agilists;custom application development;mission-critical application;waterfall
	methodology;Internet;software engineering;}
}

@INPROCEEDINGS{4599449,
  author = {Marchenko, A. and Abrahamsson, P.},
  title = {Scrum in a Multiproject Environment: An Ethnographically-Inspired
	Case Study on the Adoption Challenges},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {15 -26},
  month = {aug.},
  abstract = {Agile methods continue to gain popularity. In particular, the Scrum
	method appears to be on the verge of becoming a de-facto standard
	in the industry, leading the so called Agile movement. While there
	are success stories and recommendations, there is little scientifically
	valid evidence of the challenges in the adoption of Agile methods
	in general, and Scrum in particular. Little, if anything, is empirically
	known about the application and adoption of Scrum in a multi-team
	and multi-project situation. The authors carried out an ethnographically
	informed longitudinal case study in industrial settings and closely
	followed how the Scrum method was adopted in a 20-person department,
	working in a simultaneous multi-project R amp;D environment. Altogether
	10 challenges pertinent to the case of multi-team multi-project Scrum
	adoption were identified in the study. The authors contend that these
	results carry great relevance for other industrial teams. Future
	research avenues arising from the study are indicated.},
  doi = {10.1109/Agile.2008.77},
  keywords = {agile methods;agile movement;de-facto standard;ethnographically informed
	longitudinal case study;multiproject R amp;D environment;scrum method;project
	management;software development management;}
}

@INPROCEEDINGS{4599537,
  author = {Ohlhauser, J.},
  title = {Experience Report: Design to Delivery in 7 Weeks},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {549 -554},
  month = {aug.},
  abstract = {Last fall I received an email with the software requirements from
	a potential customer that would establish us in an important new
	market. We had been brought in when the client had only two months
	left before deploying their chosen solution. The customer requirements
	list is vague and long, but the prize is big. Could we design and
	deploy major functionality in just two months? Thanks to agile development
	and some fortunate circumstances, our team of four delivered the
	functionality, won the deal, pleased the users, and didnpsilat work
	an hour of overtime.},
  doi = {10.1109/Agile.2008.90},
  keywords = {Agile software development;software project management;software engineering;}
}

@INPROCEEDINGS{4599489,
  author = {Franklin, T.},
  title = {Adventures in Agile Contracting: Evolving from Time and Materials
	to Fixed Price, Fixed Scope Contracts},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {269 -273},
  month = {aug.},
  abstract = {For Info Tech, Inc., the transition to agile practices three years
	ago lead to a change in the way we collaborate and contract with
	our long term, mostly government customers. Our evolution covered
	time and materials (T amp;M) contracts, a hybrid of T amp;M and fixed
	price and most recently a fixed price, fixed scope, Fixed schedule
	contract that supports agile development. Our goal has been to meet
	our customerpsilas needs for predictable results while maintaining
	our commitment to agile practices. Key success factors include developing
	a responsive contract modification process that allows for quick
	change management and identifying non-tangible scope deliverables
	beyond the software components.},
  doi = {10.1109/Agile.2008.88},
  keywords = {Info Tech, Inc;agile contracting;change management;fixed price contract;fixed
	schedule contract;fixed scope contract;software components;time and
	materials contracts;DP industry;contracts;customer services;management
	of change;pricing;scheduling;software development management;}
}

@INPROCEEDINGS{4599457,
  author = {Mun-Wai Chung and Nugroho, S. and Unson, J.F.},
  title = {Tidal Wave: The Games Transformation},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {102 -105},
  month = {aug.},
  abstract = {Many companies are now adopting agile methods to hopefully fix problems
	with delivering software in a timely, sustainable manner. However,
	most people seem to think that the transformation will be quick,
	and that once implemented, people can proceed along, with little
	or no change throughout. We are going to show how our team went through
	various transformations as we adopted different agile project management
	tools. The transformations cover a span of about two years, and it
	shows how the transformation not only affected the product team,
	but also affected the entire organization - the organization continues
	to change, reinforcing the fact that agile is never static.},
  doi = {10.1109/Agile.2008.20},
  keywords = {agile methods;agile project management tools;games transformation;software
	delivery;software management;}
}

@INPROCEEDINGS{4599528,
  author = {Perry, T.},
  title = {Drifting Toward Invisibility: The Transition to the Electronic Task
	Board},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {496 -500},
  month = {aug.},
  __markedentry = {[kimi:1]},
  abstract = {The task board is one of the most important information radiators
	used by an agile team to track their progress. When teams make the
	transition to using electronic team tracking tools, they often stop
	using the physical information radiators such as the task board.
	This transition from using a physical tool to an electronic tool
	can have unintended side effects for teams. In this experience report,
	the focus is on sharing the problems teams can encounter with transparency
	if they do not manage the transition to electronic tools well. We
	discuss the implications for agile development teams along with the
	strengths and weaknesses of physical and electronic information radiators.},
  doi = {10.1109/Agile.2008.62},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {agile team;electronic task board;electronic team tracking tools;invisibility;software
	development management;}
}

@INPROCEEDINGS{4599525,
  author = {Reed, P.},
  title = {An Agile Classroom Experience},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {478 -483},
  month = {aug.},
  __markedentry = {[kimi:1]},
  abstract = {The Woodbury University Spring 2008 "IT410 Senior Systems Project"
	class has successfully applied agile principles, practices and tools
	to complement the software analysis, design and engineering tools
	and techniques students have been learning throughout their education.
	These skills and expertise are required to demonstrate competence
	and complete their final systems projects. Introducing Agile principles,
	practices and tools during their senior systems project class has
	further enhanced their "business value" competencies and capabilities
	which will benefit students as they prepare for graduation and new
	careers. This experience report covers the course preparations, design,
	development, experience and key learning experiences of both classroom
	and independent study sessions.},
  doi = {10.1109/Agile.2008.30},
  excluded = {Verify (Kimi)},
  excludekimi = {title},
  keywords = {Agile principle;competence development;course preparation;software
	analysis;computer science education;software engineering;}
}

@INPROCEEDINGS{4599494,
  author = {Brooks, G.},
  title = {Team Pace Keeping Build Times Down},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {294 -297},
  month = {aug.},
  __markedentry = {[kimi:2]},
  abstract = {The use of automated build and continuous integration systems by software
	teams is a well-established practice, and has been shown to provide
	significant benefits. However, to qualify the value of continuous
	integration practices it is necessary to to compare their cost with
	the associated benefit. When considering automated builds or continuous
	integration in an agile team, this cost is the time taken by developers
	to run the build script and automated tests before code can be committed
	and/or deployed. This paper discusses the effect of this time on
	team behaviour by comparing two projects with significantly different
	build times.},
  doi = {10.1109/Agile.2008.41},
  excludekimi = {abstract},
  keywords = {agile team;automated tests;continuous integration practices;continuous
	integration systems;software teams;team pace;software development
	management;}
}

@INPROCEEDINGS{4599512,
  author = {Lyon, R. and Evans, M.},
  title = {Scaling Up Pushing Scrum out of its Comfort Zone},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {395 -400},
  month = {aug.},
  abstract = {Single team implementations are where Scrum is most comfortable. Having
	successfully adopted Scrum for single teams within our department
	we were now faced with the choice of dropping the use of Scrum on
	a large multi-team project or scaling Scrum up. We chose the latter,
	despite the fact that neither we nor anyone else seemed to know exactly
	what was involved. This is the story of how we dragged Scrum kicking
	and screaming out of its (and our) comfort zone.},
  doi = {10.1109/Agile.2008.19},
  keywords = {Scrum;comfort zone;multiteam project;single team;software development
	management;team working;}
}

@INPROCEEDINGS{4599504,
  author = {Rayhan, S.H. and Haque, N.},
  title = {Incremental Adoption of Scrum for Successful Delivery of an IT Project
	in a Remote Setup},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {351 -355},
  month = {aug.},
  doi = {10.1109/Agile.2008.98},
  keywords = {IT project;Web-based lead management solution;incremental adoption;remote
	setup;small-business client-method marketing;successful delivery;Internet;marketing
	data processing;}
}

@INPROCEEDINGS{4599520,
  author = {Williams, L. and McCrickard, D.S. and Layman, L. and Hussein, K.},
  title = {Eleven Guidelines for Implementing Pair Programming in the Classroom},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {445 -452},
  month = {aug.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/Agile.2008.12},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {classroom management techniques;pair programming;supervised pairing;undergraduate
	human-computer interaction course;educational computing;human computer
	interaction;}
}

@INPROCEEDINGS{4599476,
  author = {Leszek, A. and Courage, C.},
  title = {The Doctor is "In" -- Using the Office Hours Concept to Make Limited
	Resources Most Effective},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {196 -201},
  month = {aug.},
  doi = {10.1109/Agile.2008.46},
  keywords = {DS team members;OH program;agile development process;customer relationship
	management;office hours concept;product documentation;resource sharing;salesforce.com
	Technology organization;user experience;waterfall development process;customer
	relationship management;product development;software development
	management;system documentation;team working;}
}

@INPROCEEDINGS{4599464,
  author = {Fecarotta, J.},
  title = {MyBoeingFleet and Agile Software Development},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {135 -139},
  month = {aug.},
  doi = {10.1109/Agile.2008.72},
  keywords = {MyBoeingFleet;Web site;agile software development;software development
	management;}
}

@INPROCEEDINGS{4599473,
  author = {Evans, M.},
  title = {The FrAgile Organisation},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {181 -185},
  month = {aug.},
  doi = {10.1109/Agile.2008.80},
  keywords = {Agile;BBC New Media;media launches;quality software;software development
	management;software quality;}
}

@INPROCEEDINGS{4599470,
  author = {Scott, J. and Johnson, R. and McCullough, M.},
  title = {Executing Agile in a Structured Organization: Government},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {166 -170},
  month = {aug.},
  doi = {10.1109/Agile.2008.40},
  keywords = {Calgary City;Quadrus Development;agile journey;agile pilot;business
	process reengineering;structured organization;business process re-engineering;software
	engineering;}
}

@INPROCEEDINGS{4599514,
  author = {Mencke, R.},
  title = {A Product Manager's Guide to Surviving the Big Bang Approach to Agile
	Transitions},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {407 -412},
  month = {aug.},
  doi = {10.1109/Agile.2008.65},
  keywords = {Scrum-style project management;adaptive development methodology;agile
	software development;software development management;}
}

@INPROCEEDINGS{4599481,
  author = {Farrow, A. and Greene, S.},
  title = {Fast - Predictable A Lightweight Release Framework Promotes Agility
	through Rhythm and Flow},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {224 -228},
  month = {aug.},
  doi = {10.1109/Agile.2008.83},
  keywords = {adaptive development methodology;lightweight release framework;software-as-a-service
	hosted model;technology organization;sales management;software development
	management;}
}

@INPROCEEDINGS{4599524,
  author = {Shaye, S.D.},
  title = {Transitioning a Team to Agile Test Methods},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {470 -477},
  month = {aug.},
  doi = {10.1109/Agile.2008.14},
  keywords = {agile practice;agile test;development team;program testing;software
	development management;team working;}
}

@INPROCEEDINGS{4599539,
  author = {Smith, T.},
  title = {Product Innovation is Practical, Important, and Possible},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {561 -565},
  month = {aug.},
  doi = {10.1109/Agile.2008.85},
  excluded = {Kimi, title},
  keywords = {customer satisfaction;software product design;software product innovation;customer
	satisfaction;innovation management;software development management;software
	packages;}
}

@INPROCEEDINGS{4599456,
  author = {Sureshchandra, K. and Shrinivasavadhani, J.},
  title = {Moving from Waterfall to Agile},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {97 -101},
  month = {aug.},
  doi = {10.1109/Agile.2008.49},
  keywords = {Wipro Technologies;agile methodologies;crisis ridden business environment;development
	cycles;service organizations;organisational aspects;software development
	management;}
}

@INPROCEEDINGS{4599480,
  author = {Rottier, P.A. and Rodrigues, V.},
  title = {Agile Development in a Medical Device Company},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {218 -223},
  month = {aug.},
  doi = {10.1109/Agile.2008.52},
  keywords = {Cochlear;IEC62304 standard;Scrum;agile development;medical device
	company;software development group;IEC standards;biomedical equipment;software
	engineering;}
}

@INPROCEEDINGS{4599493,
  author = {Miller, A.},
  title = {A Hundred Days of Continuous Integration},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {289 -293},
  month = {aug.},
  doi = {10.1109/Agile.2008.8},
  excluded = {Kimi, title},
  keywords = {anecdotal evidence;check-in process;continuous integration;distributed
	team environment;extreme programming practices;software engineering;}
}

@INPROCEEDINGS{4599461,
  author = {Moore, E. and Spens, J.},
  title = {Scaling Agile: Finding your Agile Tribe},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {121 -124},
  month = {aug.},
  doi = {10.1109/Agile.2008.43},
  keywords = {agile practice;agile tribe;large-scale agile shop;software development;software
	development management;team working;}
}

@INPROCEEDINGS{4599452,
  author = {Ghanam, Y. and Xin Wang and Maurer, F.},
  title = {Utilizing Digital Tabletops in Collocated Agile Planning Meetings},
  booktitle = {Agile, 2008. AGILE '08. Conference},
  year = {2008},
  pages = {51 -62},
  month = {aug.},
  doi = {10.1109/Agile.2008.13},
  excluded = {Kimi, title},
  keywords = {agile planning;agile software development;collocated agile planning;digital
	tabletops;horizontal displays;groupware;microcomputers;software engineering;}
}

@INPROCEEDINGS{5423766,
  author = {Stolc, M. and Polasek, I.},
  title = {A visual based framework for the model refactoring techniques},
  booktitle = {Applied Machine Intelligence and Informatics (SAMI), 2010 IEEE 8th
	International Symposium on},
  year = {2010},
  pages = {72 -82},
  month = {jan.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/SAMI.2010.5423766},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {CASE systems;OCL query generator;UML model;agile methodologies;extreme
	programming;graph transformation rules;model refactoring techniques;transformation
	script generator;visual based framework;Unified Modeling Language;computer
	aided software engineering;graph grammars;query processing;software
	maintenance;software prototyping;software tools;}
}

@INPROCEEDINGS{4469176,
  author = {Lukac, G. and Butka, P. and Mach, M.},
  title = {Semantically-enhanced extension of the discussion analysis algorithm
	in SAKE},
  booktitle = {Applied Machine Intelligence and Informatics, 2008. SAMI 2008. 6th
	International Symposium on},
  year = {2008},
  pages = {241 -246},
  month = {jan.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/SAMI.2008.4469176},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {discussion analysis algorithm;e-government;semantic agile knowledge;semantic-based
	analysis;semantic-based groupware system;semantically-enhanced extension;government;groupware;knowledge
	based systems;}
}

@INPROCEEDINGS{5262920,
  author = {Wen ZhenHua and Huang Yousen and Deng ZiYun and Zhang Wei},
  title = {SOA - BPM based information system for promoting agility of third
	party logistics},
  booktitle = {Automation and Logistics, 2009. ICAL '09. IEEE International Conference
	on},
  year = {2009},
  pages = {248 -252},
  month = {aug.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ICAL.2009.5262920},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {SOA-BPM based information system;business process management;service-oriented
	architecture;third party logistics companies;management information
	systems;software architecture;}
}

@INPROCEEDINGS{6228989,
  author = {Entin, V. and Winder, M. and Bo Zhang and Christmann, S.},
  title = {Introducing model-based testing in an industrial scrum project},
  booktitle = {Automation of Software Test (AST), 2012 7th International Workshop
	on},
  year = {2012},
  pages = {43 -49},
  month = {june},
  doi = {10.1109/IWAST.2012.6228989},
  excluded = {Kimi, title},
  keywords = {GUI testing;automated test case generation;graphical user interface;industrial
	Scrum project;model-based testing;graphical user interfaces;object-oriented
	programming;program testing;software prototyping;}
}

@INPROCEEDINGS{5069050,
  author = {Connolly, D. and Keenan, F. and McCaffery, F.},
  title = {Developing acceptance tests from existing documentation using annotations:
	An experiment},
  booktitle = {Automation of Software Test, 2009. AST '09. ICSE Workshop on},
  year = {2009},
  pages = {123 -129},
  month = {may},
  __markedentry = {[kimi:1]},
  doi = {10.1109/IWAST.2009.5069050},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {acceptance test driven development;acceptance tests;annotations;documentation;software
	testing;program testing;}
}

@INPROCEEDINGS{4144666,
  author = {Tripathi, Uttam Kumar and Hinkelmann, Knut},
  title = {Change Management in Semantic Business Processes Modeling},
  booktitle = {Autonomous Decentralized Systems, 2007. ISADS '07. Eighth International
	Symposium on},
  year = {2007},
  pages = {155 -162},
  month = {march},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ISADS.2007.25},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {BPEL;IT;OWL-S;Web services;agile business environment;change management;design
	layer processes;ontology-based semantic markup language;semantic
	business processes modeling;semantic language;service-oriented architecture;software
	development;transformation functions;Web services;business data processing;knowledge
	representation languages;management of change;ontologies (artificial
	intelligence);programming language semantics;software architecture;}
}

@INPROCEEDINGS{5750495,
  author = {Alegrí anda, J.A.H. and Bastarrica, M.C. and Bergel, A.},
  title = {Analyzing the Scrum Process Model with AVISPA},
  booktitle = {Chilean Computer Science Society (SCCC), 2010 XXIX International
	Conference of the},
  year = {2010},
  pages = {60 -65},
  month = {nov.},
  doi = {10.1109/SCCC.2010.18},
  issn = {1522-4902},
  keywords = {AVISPA tool;Scrum process model;Scrum public community specification;agile
	software process model;software development;data visualisation;software
	prototyping;}
}

@INPROCEEDINGS{1540487,
  author = { Junwei Cao and Spooner, D. and Turner, J.D. and Jarvis, S. and Kerbyson,
	D.J. and Saini, S. and Nudd, G.},
  title = {Agent-Based Resource Management for Grid Computing},
  booktitle = {Cluster Computing and the Grid, 2002. 2nd IEEE/ACM International
	Symposium on},
  year = {2002},
  pages = { 350},
  month = {may},
  __markedentry = {[kimi:1]},
  doi = {10.1109/CCGRID.2002.1017159},
  excluded = {Kimi, title},
  excludekimi = {title}
}

@INPROCEEDINGS{4341897,
  author = {Alarcon, P.P. and Garbajosa, J.},
  title = {Identifying Application Key Knowledge through System Operations Modeling},
  booktitle = {Cognitive Informatics, 6th IEEE International Conference on},
  year = {2007},
  pages = {246 -254},
  month = {aug.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/COGINF.2007.4341897},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {UML 2.x;Unified Modeling Language;application key knowledge;complex
	system engineering;system operation metamodel;system specification;Unified
	Modeling Language;formal specification;software standards;systems
	analysis;systems engineering;user interfaces;}
}

@INPROCEEDINGS{1595747,
  author = {Erofeev, S. and Di Giacomo, P.},
  title = {Usage of dynamic decision models as an agile approach to COTS taxonomies
	construction},
  booktitle = {Commercial-off-the-Shelf (COTS)-Based Software Systems, 2006. Fifth
	International Conference on},
  year = {2006},
  pages = { 8 pp.},
  month = {feb.},
  doi = {10.1109/ICCBSS.2006.32},
  excluded = {Kimi, title},
  keywords = { COTS taxonomy; MERCED project; agile approach; commercial off-the-shelf
	package; configuration control; documentation control; dynamic decision
	model; quality control; real-time embedded software component; configuration
	management; software development management; software packages; software
	quality;}
}

@INPROCEEDINGS{6013885,
  author = {Sharma, A. and Daruwala, R.D.},
  title = {Digital frequency(sinusoidal) synthesizer using CORDIC algorithm},
  booktitle = {Communication Software and Networks (ICCSN), 2011 IEEE 3rd International
	Conference on},
  year = {2011},
  pages = {521 -524},
  month = {may},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ICCSN.2011.6013885},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {CORDIC algorithm;DDS systems;VHDL;amplitude conversion techniques;communication
	technology;communications systems;coordinate rotation digital computer;coordinate
	transformations;digital frequency synthesizer;direct digital synthesis;fast
	frequency switching;fine frequency discrimination;frequency modulation;frequency-agile
	system;hyperbolic rotations;instrumentation digitization;low phase
	noise;mathematical functions;phase modulation;reference frequency
	source;rotation-based arithmetic computing algorithm;spread spectrum
	system;transient-free frequency changes;trigonometric function computation;vector
	rotations;digital arithmetic;direct digital synthesis;frequency modulation;functions;phase
	modulation;spread spectrum communication;telecommunication switching;}
}

@INPROCEEDINGS{6013698,
  author = {Hu Guang-yong},
  title = {Study and practice of import Scrum agile software development},
  booktitle = {Communication Software and Networks (ICCSN), 2011 IEEE 3rd International
	Conference on},
  year = {2011},
  pages = {217 -220},
  month = {may},
  doi = {10.1109/ICCSN.2011.6013698},
  keywords = {Scrum agile software development;Scrum process management templates;Visual
	Studio;software industry;team custom Scrum template;team developing
	vehicle spare parts management system;automotive components;maintenance
	engineering;mechanical engineering computing;software prototyping;}
}

@ARTICLE{1252804,
  author = {Martin-Flatin, J.-P. and Srivastava, D. and Westerinen, A.},
  title = {Iterative multi-tier management information modeling},
  journal = {Communications Magazine, IEEE},
  year = {2003},
  volume = {41},
  pages = { 92 - 99},
  number = {12},
  month = {dec.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/MCOM.2003.1252804},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0163-6804},
  keywords = { DMTF; IETF; Internet; incremental software development process; iterative
	multi-tier management information modeling; iterative software development
	process; management information models; management-architecture-neutral
	universal information models; software engineering; waterfall process;
	Internet; information management; information technology; software
	engineering;}
}

@ARTICLE{952928,
  author = {Laddomada, M. and Daneshgaran, F. and Mondin, M. and Hickling, R.M.},
  title = {A PC-based software receiver using a novel front-end technology},
  journal = {Communications Magazine, IEEE},
  year = {2001},
  volume = {39},
  pages = {136 -145},
  number = {8},
  month = {aug},
  __markedentry = {[kimi:1]},
  doi = {10.1109/35.952928},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0163-6804},
  keywords = {100 MHz;2 GHz;CISC;FPGA;PC-based software receiver architecture;RISC;agile
	radio;carrier frequency;data converter;digital data;direct conversion;fixed
	architecture processors;front-end technology;gigasample digital data
	stream;high-level language interfaces;portability;power dissipation;processor
	technology;programmable DSP;protocol;reprogramming speed;software
	radio based systems;speed;transmitter;wideband design;wireless signals;digital
	signal processing chips;field programmable gate arrays;microcomputer
	applications;radio receivers;reduced instruction set computing;satellite
	computers;software architecture;}
}

@INPROCEEDINGS{5447405,
  author = {Mordinyi, R. and Kuhn, E. and Schatten, A.},
  title = {Space-Based Architectures as Abstraction Layer for Distributed Business
	Applications},
  booktitle = {Complex, Intelligent and Software Intensive Systems (CISIS), 2010
	International Conference on},
  year = {2010},
  pages = {47 -53},
  month = {feb.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/CISIS.2010.178},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {API;abstraction layer;agile business processes;business requirements;decoupling
	distributed applications;distributed business applications;distributed
	systems;middleware architecture;service-oriented architectures;software
	architecture;space-based architectures;state-of-the-art middleware
	architectural styles;tight coupling middleware adaptations;business
	data processing;middleware;software architecture;}
}

@INPROCEEDINGS{6245592,
  author = {Lice, E. and Biba, M.},
  title = {Customizing Rational Unified Process in a Systems Integration Scenario},
  booktitle = {Complex, Intelligent and Software Intensive Systems (CISIS), 2012
	Sixth International Conference on},
  year = {2012},
  pages = {76 -83},
  month = {july},
  doi = {10.1109/CISIS.2012.118},
  keywords = {RUP;computer systems;end-users;rational unified process;real world
	business scenario;software development process;specific project types;systems
	integration scenario;telecommunication company;business data processing;software
	engineering;telecommunication industry;}
}

@INPROCEEDINGS{4606733,
  author = {Conrad, M. and Huchard, M. and Preuss, T.},
  title = {Integrating Shadows in Model Driven Engineering for Agile Software
	Development},
  booktitle = {Complex, Intelligent and Software Intensive Systems, 2008. CISIS
	2008. International Conference on},
  year = {2008},
  pages = {549 -554},
  month = {march},
  doi = {10.1109/CISIS.2008.69},
  excluded = {Kimi, title},
  keywords = {Shadows-UML;agile software development;dynamic classification;model
	driven engineering;multiplayer online game;programming languages;Unified
	Modeling Language;computer games;software engineering;}
}

@INPROCEEDINGS{4097692,
  author = {Jaakkola, H. and Henno, J. and Rudas, I.J.},
  title = {IT Curriculum as a Complex Emerging Process},
  booktitle = {Computational Cybernetics, 2006. ICCC 2006. IEEE International Conference
	on},
  year = {2006},
  pages = {1 -5},
  month = {aug.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ICCCYB.2006.305731},
  excludekimi = {title},
  keywords = {IT curriculum;agile development;complex emerging process;information
	technology;software development;software engineering education;software
	industry;software quality;computer science education;educational
	courses;software engineering;}
}

@INPROCEEDINGS{5705815,
  author = {Balan, C. and Dija, S. and Vidyadharan, D.S.},
  title = {The need to adopt agile methodology in the development of cyber forensics
	tools},
  booktitle = {Computational Intelligence and Computing Research (ICCIC), 2010 IEEE
	International Conference on},
  year = {2010},
  pages = {1 -4},
  month = {dec.},
  doi = {10.1109/ICCIC.2010.5705815},
  keywords = {agile methodology;change management;cyber crime;cyber forensic tools;digital
	evidence;product development teams;project management;computer forensics;project
	management;software prototyping;}
}

@INPROCEEDINGS{5676830,
  author = {Xiaobo Wu and Chang Ge},
  title = {The Research on Necessity and Plan for Using Extreme Programming
	in Rational Unified Process},
  booktitle = {Computational Intelligence and Software Engineering (CiSE), 2010
	International Conference on},
  year = {2010},
  pages = {1 -3},
  month = {dec.},
  doi = {10.1109/CISE.2010.5676830},
  excluded = {Kimi, title},
  keywords = {extreme programming;rational unified process;software prototyping;}
}

@INPROCEEDINGS{5172645,
  author = {Schindler, C.},
  title = {Agile Software Development Methods and Practices in Austrian IT-Industry:
	Results of an Empirical Study},
  booktitle = {Computational Intelligence for Modelling Control Automation, 2008
	International Conference on},
  year = {2008},
  pages = {321 -326},
  month = {dec.},
  doi = {10.1109/CIMCA.2008.100},
  keywords = {Austrian IT-industry;agile software development;pair-programming;software
	developing company;software development industry;DP industry;software
	engineering;}
}

@INPROCEEDINGS{4625088,
  author = {Varchavsky, M. and Guerra, E. and Fernandes, C.},
  title = {Access Control Solution for Command and Control Systems Integration},
  booktitle = {Computational Science and Engineering Workshops, 2008. CSEWORKSHOPS
	'08. 11th IEEE International Conference on},
  year = {2008},
  pages = {361 -366},
  month = {july},
  __markedentry = {[kimi:1]},
  doi = {10.1109/CSEW.2008.35},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {access control;command and control system;service oriented architecture;systems
	integration;authorisation;command and control systems;software architecture;}
}

@INPROCEEDINGS{4301169,
  author = {Hashmi, S.I. and Jongmoon Baik},
  title = {Software Quality Assurance in XP and Spiral - A Comparative Study},
  booktitle = {Computational Science and its Applications, 2007. ICCSA 2007. International
	Conference on},
  year = {2007},
  pages = {367 -374},
  month = {aug.},
  doi = {10.1109/ICCSA.2007.65},
  keywords = {Extreme Programming;Spiral model;business value delivery;iterations;productivity;software
	development;software quality assurance;stakeholders morale;iterative
	methods;software quality;software reliability;}
}

@INPROCEEDINGS{5193978,
  author = {Weiguo Lin and Xiaomin Fan},
  title = {Software Development Practice for FDA-Compliant Medical Devices},
  booktitle = {Computational Sciences and Optimization, 2009. CSO 2009. International
	Joint Conference on},
  year = {2009},
  volume = {2},
  pages = {388 -390},
  month = {april},
  doi = {10.1109/CSO.2009.191},
  keywords = {Digital Subtraction Angiography medical device;FDA-compliant medical
	device;Food and Drug Administration;agile method;formal regulatory
	environment;formal waterfall-like lifecycle;project risk reduction;software
	development practice;biomedical equipment;government policies;medical
	computing;radiography;software engineering;}
}

@ARTICLE{1204378,
  author = {Cohn, M. and Ford, D.},
  title = {Introducing an agile process to an organization [software development]},
  journal = {Computer},
  year = {2003},
  volume = {36},
  pages = { 74 - 78},
  number = {6},
  month = {june},
  doi = {10.1109/MC.2003.1204378},
  issn = {0018-9162},
  keywords = { agile software development process; software development management;}
}

@ARTICLE{1204379,
  author = {Lycett, M. and Macredie, R.D. and Patel, C. and Paul, R.J.},
  title = {Migrating agile methods to standardized development practice},
  journal = {Computer},
  year = {2003},
  volume = {36},
  pages = { 79 - 85},
  number = {6},
  month = {jun},
  doi = {10.1109/MC.2003.1204379},
  issn = {0018-9162},
  keywords = { agile methods; situated process frameworks; situated quality frameworks;
	software development management; standardized development practice;
	software development management; software maintenance; software process
	improvement;}
}

@ARTICLE{1620995,
  author = {Gary, K. and Ibanez, L. and Aylward, S. and Gobbi, D. and Blake,
	M.B. and Cleary, K.},
  title = {IGSTK: an open source software toolkit for image-guided surgery},
  journal = {Computer},
  year = {2006},
  volume = {39},
  pages = { 46 - 53},
  number = {4},
  month = {april},
  __markedentry = {[kimi:1]},
  doi = {10.1109/MC.2006.130},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0018-9162},
  keywords = { IGSTK; Image-Guided Software Toolkit; agile software engineering
	principles; component-based software engineering principles; image-guided
	surgical application; minimally invasive procedures; open source
	development; open source software toolkit; reliable software; reusable
	software infrastructure; medical image processing; object-oriented
	programming; public domain software; software reliability; software
	reusability; surgery;}
}

@ARTICLE{1377040,
  author = {Lindvall, M. and Muthig, D. and Dagnino, A. and Wallin, C. and Stupperich,
	M. and Kiefer, D. and May, J. and Kahkonen, T.},
  title = {Agile software development in large organizations},
  journal = {Computer},
  year = {2004},
  volume = {37},
  pages = { 26 - 34},
  number = {12},
  month = {dec.},
  doi = {10.1109/MC.2004.231},
  issn = {0018-9162},
  keywords = { Software Experience Center; agile software development; extreme programming;
	organizational needs; software engineering; software process improvement;
	software project management; organisational aspects; programming;
	project management; software management; software process improvement;}
}

@ARTICLE{963450,
  author = {Cockburn, A. and Highsmith, J.},
  title = {Agile software development, the people factor},
  journal = {Computer},
  year = {2001},
  volume = {34},
  pages = {131 -133},
  number = {11},
  month = {nov},
  doi = {10.1109/2.963450},
  issn = {0018-9162},
  keywords = {agile ecosystems;agile organizations;agile software development;individual
	competence;people factor;talents;teams;user experts;human factors;software
	development management;}
}

@ARTICLE{6035651,
  author = {Shalf, J. and Quinlan, D. and Janssen, C.},
  title = {Rethinking Hardware-Software Codesign for Exascale Systems},
  journal = {Computer},
  year = {2011},
  volume = {44},
  pages = {22 -30},
  number = {11},
  month = {nov. },
  doi = {10.1109/MC.2011.300},
  excluded = {Kimi, title},
  issn = {0018-9162},
  keywords = {CoDEx project;DOE exascale computing program;agile development process;architectural
	simulation;code analysis;exascale system;hardware-software codesign;rapid
	product development;supercomputing systems;hardware-software codesign;mainframes;}
}

@ARTICLE{4404812,
  author = {Ward, Bob},
  title = {Land Voted 2008 Computer Society President-Elect},
  journal = {Computer},
  year = {2007},
  volume = {40},
  pages = {62 -63},
  number = {12},
  month = {dec. },
  __markedentry = {[kimi:1]},
  doi = {10.1109/MC.2007.432},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0018-9162}
}

@INPROCEEDINGS{6297144,
  author = {Kundi, M. and Ahmad, B. and Inaythulaha, M. and Nasir, J.A.},
  title = {Optimization of testing time in RUP: A group testing approach},
  booktitle = {Computer Information Science (ICCIS), 2012 International Conference
	on},
  year = {2012},
  volume = {2},
  pages = {848 -851},
  month = {june},
  doi = {10.1109/ICCISci.2012.6297144},
  keywords = {RUP;beta testing;construction phase;group testing approach;rational
	unified process;schedule slippage;software development life cycle;testing
	time optimization;transition phase;program testing;software development
	management;}
}

@INPROCEEDINGS{4777054,
  author = {Lindegaard, K.-P. and Kristiansen, D.},
  title = {Signal based functionality testing of control systems},
  booktitle = {Computer Aided Control System Design, 2006 IEEE International Conference
	on Control Applications, 2006 IEEE International Symposium on Intelligent
	Control, 2006 IEEE},
  year = {2006},
  pages = {2635 -2640},
  month = {oct.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/CACSD-CCA-ISIC.2006.4777054},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {agile methods;automated functionality testing;control systems;signal
	based functionality testing;test specification;xUnit family;automatic
	testing;control engineering computing;control system analysis computing;program
	testing;}
}

@INPROCEEDINGS{4580769,
  author = {Hussain, Z. and Lechner, M. and Milchrahm, H. and Shahzad, S. and
	Slany, W. and Umgeher, M.},
  title = {Optimizing extreme programming},
  booktitle = {Computer and Communication Engineering, 2008. ICCCE 2008. International
	Conference on},
  year = {2008},
  pages = {1052 -1056},
  month = {may},
  doi = {10.1109/ICCCE.2008.4580769},
  keywords = {code analysis;extreme programming optimization;process evaluation;process
	retrospective review meetings;project process optimization;software
	project;team composition;software development management;software
	process improvement;team working;}
}

@INPROCEEDINGS{5591053,
  author = {Sungjoo Kang and Okjoo Choi and Jongmoon Baik},
  title = {Model-Based Dynamic Cost Estimation and Tracking Method for Agile
	Software Development},
  booktitle = {Computer and Information Science (ICIS), 2010 IEEE/ACIS 9th International
	Conference on},
  year = {2010},
  pages = {743 -748},
  month = {aug.},
  doi = {10.1109/ICIS.2010.126},
  excluded = {Kimi, title},
  keywords = {Kalman filter algorithm;agile software project development;dynamic
	tracking methodology;function point;project progress tracking;software
	cost estimation model;systematic estimation;Kalman filters;project
	management;software cost estimation;software prototyping;tracking;}
}

@INPROCEEDINGS{5591239,
  author = {Hyunkyung Song and Yeong-Tae Song},
  title = {Enterprise Architecture Institutionalization and Assessment},
  booktitle = {Computer and Information Science (ICIS), 2010 IEEE/ACIS 9th International
	Conference on},
  year = {2010},
  pages = {870 -875},
  month = {aug.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ICIS.2010.127},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {IT architectures;business environment;enterprise architecture frameworks;enterprise
	architecture institutionalization;enterprise resource planning;organisational
	aspects;software architecture;}
}

@INPROCEEDINGS{1515419,
  author = {So-Young Kim and Ho-Jin Choi},
  title = {An evaluation of process performance for a small-team project - a
	case study},
  booktitle = {Computer and Information Science, 2005. Fourth Annual ACIS International
	Conference on},
  year = {2005},
  pages = { 308 - 313},
  doi = {10.1109/ICIS.2005.31},
  keywords = { Rational Unified Process; component-based software development; evaluation
	data analysis; process performance evaluation; project management
	system; small team project; object-oriented programming; project
	management; software architecture; software development management;
	software performance evaluation; team working;}
}

@INPROCEEDINGS{6164775,
  author = {Mahmud, I. and Veneziano, V.},
  title = {Mind-mapping: An effective technique to facilitate requirements engineering
	in agile software development},
  booktitle = {Computer and Information Technology (ICCIT), 2011 14th International
	Conference on},
  year = {2011},
  pages = {157 -162},
  month = {dec.},
  doi = {10.1109/ICCITechn.2011.6164775},
  excluded = {Kimi, title},
  keywords = {SCRUM model;SCRUM project;academic institution;agile method;agile
	software development;digital library;function points metric;mind-mapping
	technique;product backlog development;requirements engineering;requirements
	specification document;formal specification;software prototyping;}
}

@INPROCEEDINGS{5619442,
  author = {Zhengren Wu and Liu Mei},
  title = {The analysis of the fifth-order fKdV equations based on the P-S method},
  booktitle = {Computer Application and System Modeling (ICCASM), 2010 International
	Conference on},
  year = {2010},
  volume = {4},
  pages = {V4-539 -V4-542},
  month = {oct.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ICCASM.2010.5619442},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {Fourier transform;Matlab software;P-S method;PDE equation;fifth-order
	fKdV equation analysis;pseudo-spectral method;spectral disperse treatment;surface
	wave;Fourier transforms;Korteweg-de Vries equation;solitons;surface
	waves (fluid);}
}

@INPROCEEDINGS{1630138,
  author = {Tosic, M. and Milicevic, V. and Stankovic, M.},
  title = {Collaborative Knowledge Acquisition for Agile Project Management},
  booktitle = {Computer as a Tool, 2005. EUROCON 2005.The International Conference
	on},
  year = {2005},
  volume = {2},
  pages = {1081 -1084},
  month = {nov.},
  doi = {10.1109/EURCON.2005.1630138},
  keywords = {agile project management;collaborative computing;collaborative knowledge
	acquisition;collaborative semantic Web portal;intelligent information
	systems;Internet;groupware;information systems;knowledge acquisition;knowledge
	based systems;portals;project management;software engineering;}
}

@INPROCEEDINGS{4447068,
  author = {Galal-Edeen, G.H. and Riad, A.M. and Seyam, M.S.},
  title = {Agility versus discipline: Is reconciliation possible?},
  booktitle = {Computer Engineering Systems, 2007. ICCES '07. International Conference
	on},
  year = {2007},
  pages = {331 -337},
  month = {nov.},
  doi = {10.1109/ICCES.2007.4447068},
  keywords = {agile development school;information system;software development method;information
	systems;software engineering;}
}

@INPROCEEDINGS{5485517,
  author = {Amini, A. and Sadjedy, S.},
  title = {SOMGIS- a Service Oriented model for GIS Software Architecture},
  booktitle = {Computer Engineering and Technology (ICCET), 2010 2nd International
	Conference on},
  year = {2010},
  volume = {7},
  pages = {V7-433 -V7-437},
  month = {april},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ICCET.2010.5485517},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {OGC;SOA;SOMGIS;agile model;geographic information system;open geospatial
	consortium;service oriented architecture;service oriented design
	method;service oriented model for GIS software architecture;business
	data processing;geographic information systems;open systems;software
	architecture;}
}

@INPROCEEDINGS{6314577,
  author = {Cooper, K.M.L. and Longstreet, C.S.},
  title = {Towards model-driven game engineering for serious educational games:
	Tailored use cases for game requirements},
  booktitle = {Computer Games (CGAMES), 2012 17th International Conference on},
  year = {2012},
  pages = {208 -212},
  month = {30 2012-aug. 1},
  doi = {10.1109/CGames.2012.6314577},
  excluded = {Kimi, title},
  keywords = {SimSYS game play engine;agile software development process;e-learning
	tools;experiential learning;formal XML representation;game requirements;games
	stress visual;model-driven game engineering approach;serious educational
	games;storyboarding techniques;tabular specifications;tailored UML
	use cases;visual UML diagram;XML;computer aided instruction;computer
	games;software prototyping;}
}

@INPROCEEDINGS{5764064,
  author = {Shi Zhong and Chen Liping and Chen Tian-en},
  title = {Agile planning and development methods},
  booktitle = {Computer Research and Development (ICCRD), 2011 3rd International
	Conference on},
  year = {2011},
  volume = {1},
  pages = {488 -491},
  month = {march},
  doi = {10.1109/ICCRD.2011.5764064},
  keywords = {Xp methodology;agile development;agile planning method;crystal methodology;iterated
	software development method;iteration estimation;scrum methodology;iterative
	methods;software prototyping;}
}

@INPROCEEDINGS{5593595,
  author = {Su, S.H. and Scharff, C.},
  title = {Know Yourself and Beyond: A students' global software development
	project experience with Agile Methodology},
  booktitle = {Computer Science and Education (ICCSE), 2010 5th International Conference
	on},
  year = {2010},
  pages = {412 -417},
  month = {aug.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ICCSE.2010.5593595},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {agile methodology;collaborative work;educational value;self-knowing
	process;students global software development project;computer science
	education;groupware;software prototyping;}
}

@INPROCEEDINGS{5170429,
  author = {Xiaoyong Mei and Aijun Jiang and Fudan Zheng and Shixian Li},
  title = {Execution Semantics Analysis Based Composition Compensation Mechanism
	in Web Services Composition},
  booktitle = {Computer Science and Information Engineering, 2009 WRI World Congress
	on},
  year = {2009},
  volume = {7},
  pages = {820 -824},
  month = {31 2009-april 2},
  __markedentry = {[kimi:1]},
  doi = {10.1109/CSIE.2009.725},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {Web services composition;agile compensation-triggered mechanism;atomicity;composition
	compensation mechanism;execution process;execution semantics analysis;paired
	net;parallel composition patterns;Web services;software reliability;}
}

@INPROCEEDINGS{6078217,
  author = {Sienkiewicz, L.D. and Maciaszek, L.A.},
  title = {Adapting scrum for third party services and network organizations},
  booktitle = {Computer Science and Information Systems (FedCSIS), 2011 Federated
	Conference on},
  year = {2011},
  pages = {329 -336},
  month = {sept.},
  keywords = {Scrum software development;network organizations;press releases;scientific
	publications;third party services;business communication;organisational
	aspects;project management;software prototyping;}
}

@INPROCEEDINGS{5564460,
  author = {Lianzhong Liu and Yiping Jiang and Cheng Zhu},
  title = {Process-related software requirements management},
  booktitle = {Computer Science and Information Technology (ICCSIT), 2010 3rd IEEE
	International Conference on},
  year = {2010},
  volume = {9},
  pages = {361 -365},
  month = {july},
  doi = {10.1109/ICCSIT.2010.5564460},
  excluded = {Kimi, title},
  keywords = {RM tool prototype;process-related software requirements management;software
	organizations;software process support;software projects;project
	management;software management;software tools;}
}

@INPROCEEDINGS{6181977,
  author = {Chowdhury, A.F. and Huda, M.N.},
  title = {Comparison between Adaptive Software Development and Feature Driven
	Development},
  booktitle = {Computer Science and Network Technology (ICCSNT), 2011 International
	Conference on},
  year = {2011},
  volume = {1},
  pages = {363 -367},
  month = {dec.},
  doi = {10.1109/ICCSNT.2011.6181977},
  keywords = {SWEBOK;Scrum;adaptive software development;agile methods;customer
	participation;customer satisfaction;extreme programming;feature driven
	development;software construction;software development life cycle;software
	requirements;software prototyping;}
}

@INPROCEEDINGS{5974589,
  author = {Fuhua Ge and Shaowen Yao},
  title = {Architecture combining SOA and BPM},
  booktitle = {Computer Science and Service System (CSSS), 2011 International Conference
	on},
  year = {2011},
  pages = {2124 -2127},
  month = {june},
  __markedentry = {[kimi:1]},
  doi = {10.1109/CSSS.2011.5974589},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {BPMS;SOA;architecture combining;business process management;consumer
	expectations;service-oriented architecture;business data processing;service-oriented
	architecture;}
}

@INPROCEEDINGS{4722890,
  author = {Qin Yuanjian and Zhang Yang and Jiang Suyi},
  title = {Research on Agile Innovation of Modern Service Company Based on E-learning},
  booktitle = {Computer Science and Software Engineering, 2008 International Conference
	on},
  year = {2008},
  volume = {5},
  pages = {250 -256},
  month = {dec.},
  doi = {10.1109/CSSE.2008.228},
  excluded = {Kimi, title},
  keywords = {agile innovation;domestic service company;e-learning;economy globalization;flexible
	innovation;learning organisation;modern service company;service industry;computer
	aided instruction;service industries;}
}

@INPROCEEDINGS{4653242,
  author = {Sanchez, J.A. and Garnica, M. and Valdiviezo, O. and Paredes, R.},
  title = {KBoard: Knowledge Capture in Multimedia Collaboration Rooms},
  booktitle = {Computer Science, 2008. ENC '08. Mexican International Conference
	on},
  year = {2008},
  pages = {81 -88},
  month = {oct.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ENC.2008.27},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1550-4069},
  keywords = {KBoard;alternative dynamic QWERTY keyboards;group work;interactive
	displays;multimedia collaboration rooms;pie-menu virtual keyboards;software
	environment;groupware;keyboards;multimedia computing;}
}

@INPROCEEDINGS{6340199,
  author = {Eunha Kim and Seokmoon Ryoo},
  title = {Agile Adoption Story from NHN},
  booktitle = {Computer Software and Applications Conference (COMPSAC), 2012 IEEE
	36th Annual},
  year = {2012},
  pages = {476 -481},
  month = {july},
  doi = {10.1109/COMPSAC.2012.83},
  issn = {0730-3157},
  keywords = {NHN Corporation;agile development tools;agile project management;agile
	requirements;agile testing methods;automation;debt-free iterative
	development;self-organizing teams;transparency;waterfall development;program
	testing;project management;software development management;software
	prototyping;team working;}
}

@INPROCEEDINGS{6341616,
  author = {Collins, E. and Dias-Neto, A. and de Lucena, V.F.},
  title = {Strategies for Agile Software Testing Automation: An Industrial Experience},
  booktitle = {Computer Software and Applications Conference Workshops (COMPSACW),
	2012 IEEE 36th Annual},
  year = {2012},
  pages = {440 -445},
  month = {july},
  doi = {10.1109/COMPSACW.2012.84},
  excluded = {Kimi, title},
  keywords = {Scrum agile methodology;agile software testing automation;industrial
	experience;knowledge managements;software development;software engineering;software
	projects;task distribution;team collaboration;testing tools;program
	testing;software prototyping;}
}

@INPROCEEDINGS{6341636,
  author = {Yu, W.D. and Le, K.},
  title = {Towards a Secure Software Development Lifecycle with SQUARE+R},
  booktitle = {Computer Software and Applications Conference Workshops (COMPSACW),
	2012 IEEE 36th Annual},
  year = {2012},
  pages = {565 -570},
  month = {july},
  __markedentry = {[kimi:]},
  doi = {10.1109/COMPSACW.2012.104},
  excluded = {Verify (Kimi)},
  keywords = {SQUARE+R model;Web services;agile software development lifecycle security;attack
	space;mobile coding errors;risk management framework;software bugs;software
	development time;software vulnerabilities;Web services;mobile computing;risk
	management;security of data;software reliability;}
}

@INPROCEEDINGS{1045160,
  author = {Bowen, S. and Maurer, F.},
  title = {Process support and knowledge management for virtual teams doing
	agile software development},
  booktitle = {Computer Software and Applications Conference, 2002. COMPSAC 2002.
	Proceedings. 26th Annual International},
  year = {2002},
  pages = { 1118 - 1120},
  doi = {10.1109/CMPSAC.2002.1045160},
  excluded = {Kimi, title},
  issn = {0730-3157},
  keywords = { MILOS; agile software development; experience management; information
	routing; knowledge management; pair programming; process-support
	environment; productivity; project coordination; software development
	teams; team communication; virtual teams; workflow structure; groupware;
	software engineering; workflow management software;}
}

@INPROCEEDINGS{1342805,
  author = {Serour, M.K. and Henderson-Sellers, B.},
  title = {Introducing agility: a case study of situational method engineering
	using the OPEN process framework},
  booktitle = {Computer Software and Applications Conference, 2004. COMPSAC 2004.
	Proceedings of the 28th Annual International},
  year = {2004},
  pages = { 50 - 57 vol.1},
  month = {sept.},
  doi = {10.1109/CMPSAC.2004.1342805},
  issn = {0730-3157},
  keywords = { OPEN process framework; agile methodology; multinational legal publishing
	company; situational method engineering; law administration; publishing;
	software engineering;}
}

@INPROCEEDINGS{1342663,
  author = {Coleman, G.},
  title = {eXtreme Programming (XP) as a 'minimum' software process: a grounded
	theory},
  booktitle = {Computer Software and Applications Conference, 2004. COMPSAC 2004.
	Proceedings of the 28th Annual International},
  year = {2004},
  volume = {2},
  pages = { 30 - 31 vol.2},
  month = {sept.},
  doi = {10.1109/CMPSAC.2004.1342663},
  issn = {0730-3157},
  keywords = { eXtreme Programming; process models; product development activity;
	software production; project management; software development management;
	software process improvement;}
}

@INPROCEEDINGS{1508105,
  author = {Bin Xu},
  title = {Extreme programming for distributed legacy system reengineering},
  booktitle = {Computer Software and Applications Conference, 2005. COMPSAC 2005.
	29th Annual International},
  year = {2005},
  volume = {2},
  pages = { 160 - 165 Vol. 1},
  month = {july},
  doi = {10.1109/COMPSAC.2005.77},
  issn = {0730-3157},
  keywords = { code quality; distributed legacy system reengineering; extreme programming;
	project lifecycle; reverse engineering; distributed processing; reverse
	engineering; software maintenance; software quality; systems re-engineering;}
}

@INPROCEEDINGS{4291164,
  author = {Liu, S. and Spencer, B. and Yong Liang and Bo Xu and Libo Zhang and
	Brooks, M.},
  title = {Towards an Agile Infrastructure to Provision Devices, Applications,
	and Networks: A Service-oriented Approach},
  booktitle = {Computer Software and Applications Conference, 2007. COMPSAC 2007.
	31st Annual International},
  year = {2007},
  volume = {2},
  pages = {473 -478},
  month = {july},
  doi = {10.1109/COMPSAC.2007.217},
  excluded = {Kimi, title},
  issn = {0730-3157},
  keywords = {Eucalyptus prototype;Web services;agile infrastructure;service-oriented
	approach;software architecture;virtual participatory design studio;Web
	services;resource allocation;software architecture;}
}

@INPROCEEDINGS{4291068,
  author = {Zhongbin Wang},
  title = {Fuxi: An Agile Development Environment for Embedded Systems},
  booktitle = {Computer Software and Applications Conference, 2007. COMPSAC 2007.
	31st Annual International},
  year = {2007},
  volume = {1},
  pages = {631 -632},
  month = {july},
  doi = {10.1109/COMPSAC.2007.124},
  issn = {0730-3157},
  keywords = {agile development environment;aspect-oriented methodology;declarative
	programming;embedded systems;procedural programming;embedded systems;programming
	languages;software engineering;}
}

@INPROCEEDINGS{4291049,
  author = {Qumer, A. and Henderson-Sellers, B.},
  title = {Construction of an Agile Software Product-Enhancement Process by
	Using an Agile Software Solution Framework (ASSF) and Situational
	Method Engineering},
  booktitle = {Computer Software and Applications Conference, 2007. COMPSAC 2007.
	31st Annual International},
  year = {2007},
  volume = {1},
  pages = {539 -542},
  month = {july},
  doi = {10.1109/COMPSAC.2007.98},
  issn = {0730-3157},
  keywords = {agile software solution framework;large software development organization;situational
	method engineering;software product-enhancement process;software
	process improvement;}
}

@INPROCEEDINGS{5254080,
  author = {Srinivasan, J. and Dobrin, R. and Lundqvist, K.},
  title = {'State of the Art' in Using Agile Methods for Embedded Systems Development},
  booktitle = {Computer Software and Applications Conference, 2009. COMPSAC '09.
	33rd Annual IEEE International},
  year = {2009},
  volume = {2},
  pages = {522 -527},
  month = {july},
  __markedentry = {[kimi:]},
  doi = {10.1109/COMPSAC.2009.186},
  issn = {0730-3157},
  keywords = {adoption trajectory;agile methods;embedded systems development;software
	ecosystem;embedded systems;software engineering;}
}

@INPROCEEDINGS{4591786,
  author = {Laanti, M.},
  title = {Implementing Program Model with Agile Principles in a Large Software
	Development Organization},
  booktitle = {Computer Software and Applications, 2008. COMPSAC '08. 32nd Annual
	IEEE International},
  year = {2008},
  pages = {1383 -1391},
  month = {28 2008-aug. 1},
  doi = {10.1109/COMPSAC.2008.116},
  issn = {0730-3157},
  keywords = {Agile Policy;agile principles;decision making;program model;software
	development organization;software engineering teams;DP industry;agile
	manufacturing;organisational aspects;software engineering;}
}

@INPROCEEDINGS{4591758,
  author = {Boender, J. and Di Cosmo, R. and Vouillon, J. and Durak, B. and Mancinelli,
	F.},
  title = {Improving the Quality of GNU/Linux Distributions},
  booktitle = {Computer Software and Applications, 2008. COMPSAC '08. 32nd Annual
	IEEE International},
  year = {2008},
  pages = {1240 -1246},
  month = {28 2008-aug. 1},
  doi = {10.1109/COMPSAC.2008.226},
  excluded = {Kimi, title},
  issn = {0730-3157},
  keywords = {GNU;Linux distributions;open source software;Linux;public domain software;}
}

@INPROCEEDINGS{6221849,
  author = {Qian Li and Shijun Liu and Ying Pan},
  title = {A cooperative construction approach for SaaS applications},
  booktitle = {Computer Supported Cooperative Work in Design (CSCWD), 2012 IEEE
	16th International Conference on},
  year = {2012},
  pages = {398 -403},
  month = {may},
  doi = {10.1109/CSCWD.2012.6221849},
  excluded = {Kimi, title},
  keywords = {SaaS applications;agile construction;automobile industry;business
	model;cooperative construction approach;customization requirements;long
	development cycle;multi level construction method;multi-level abstraction;on-demand
	software;supply business;waterfall software-development model;automobile
	industry;cloud computing;object-oriented programming;software prototyping;supply
	chain management;}
}

@INPROCEEDINGS{5681880,
  author = {Gangjun Yang and Suihuai Yu and Guoding Chen and Jianjie Chu},
  title = {Agile industrial design management based on Scrum},
  booktitle = {Computer-Aided Industrial Design Conceptual Design (CAIDCD), 2010
	IEEE 11th International Conference on},
  year = {2010},
  volume = {2},
  pages = {889 -891},
  month = {nov.},
  doi = {10.1109/CAIDCD.2010.5681880},
  keywords = {OEM enterprises;Pearl River delta;Scrum;Yangtze River;agile industrial
	design management;conceptual design process;customized design;design
	quality improvement;flexible methods;innovation;rapid response ability;software
	development;agile manufacturing;design;innovation management;production
	engineering computing;quality management;software engineering;}
}

@INPROCEEDINGS{4561968,
  author = {Martini, P. and Kaiser, K. and Miksch, S.},
  title = {Easing the Formalization of Clinical Guidelines with a User-tailored,
	Extensible Agile Model Driven Development (AMDD)},
  booktitle = {Computer-Based Medical Systems, 2008. CBMS '08. 21st IEEE International
	Symposium on},
  year = {2008},
  pages = {120 -125},
  month = {june},
  doi = {10.1109/CBMS.2008.92},
  issn = {1063-7125},
  keywords = {NLP technique;computer-interpretable guideline representation;evidence-based
	medicine;guideline life-cycle;guideline representation language;health
	care;text-based clinical guideline formalization;user-tailored extensible
	agile model driven development;health care;medical information systems;natural
	language processing;object-oriented programming;text analysis;}
}

@ARTICLE{5337641,
  author = {Killcoyne, Sarah and Boyle, John},
  title = {Managing Chaos: Lessons Learned Developing Software in the Life Sciences},
  journal = {Computing in Science Engineering},
  year = {2009},
  volume = {11},
  pages = {20 -29},
  number = {6},
  month = {nov.-dec. },
  doi = {10.1109/MCSE.2009.198},
  issn = {1521-9615}
}

@ARTICLE{5232787,
  author = {Easterbrook, S and Johns, T},
  title = {Engineering the Software for Understanding Climate Change},
  journal = {Computing in Science Engineering},
  year = {2009},
  volume = {PP},
  pages = {1},
  number = {99},
  month = { },
  __markedentry = {[kimi:1]},
  doi = {10.1109/MCSE.2009.156},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1521-9615}
}

@ARTICLE{5337646,
  author = {Easterbrook, Steve M. and Johns, Timothy C.},
  title = {Engineering the Software for Understanding Climate Change},
  journal = {Computing in Science Engineering},
  year = {2009},
  volume = {11},
  pages = {65 -74},
  number = {6},
  month = {nov.-dec. },
  __markedentry = {[kimi:1]},
  doi = {10.1109/MCSE.2009.193},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1521-9615}
}

@INPROCEEDINGS{5628912,
  author = {Maher, P.E. and Kourik, J.L. and Chookittikul, W.},
  title = {Exploratory Study of Agile Methods in the Vietnamese Software Industry},
  booktitle = {Computing in the Global Information Technology (ICCGI), 2010 Fifth
	International Multi-Conference on},
  year = {2010},
  pages = {300 -304},
  month = {sept.},
  doi = {10.1109/ICCGI.2010.63},
  keywords = {Vietnamese software industry;agile method;global information technology;software
	design outsourcing;software development outsourcing;DP industry;outsourcing;software
	development management;software prototyping;}
}

@INPROCEEDINGS{4700491,
  author = {Min Luo},
  title = {Common Business Components and Services toward More Agile and Flexible
	Industry Solutions and Assets},
  booktitle = {Congress on Services Part II, 2008. SERVICES-2. IEEE},
  year = {2008},
  pages = {11 -12},
  month = {sept.},
  __markedentry = {[kimi:2]},
  doi = {10.1109/SERVICES-2.2008.53},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {SOA;agile industrial solution;business component decomposition;business
	solution management;flexible industrial solution;innovative approach;meta-data
	driven architecture;model-driven business development;multi layered
	business architecture;object-component based technology;open industry
	reference model;product design;product development;service-oriented
	architecture;software engineering practice;software modeling;Web
	services;agile manufacturing;flexible manufacturing systems;innovation
	management;object-oriented programming;product design;product development;software
	architecture;}
}

@INPROCEEDINGS{6201545,
  author = {Linghui Liu and Yao Lu},
  title = {Application of agile method in the enterprise website backstage management
	system: Practices for extreme programming},
  booktitle = {Consumer Electronics, Communications and Networks (CECNet), 2012
	2nd International Conference on},
  year = {2012},
  pages = {2412 -2415},
  month = {april},
  doi = {10.1109/CECNet.2012.6201545},
  keywords = {agile software development method;enterprise Website backstage management
	system;extreme programming;flexible development mechanism;middle
	sized projects;process practice rule;requirement variety;risk control;small
	sized projects;Web sites;formal verification;management information
	systems;software prototyping;}
}

@INPROCEEDINGS{5611109,
  author = {Terashima, K. and Ito, R. and Noda, Y. and Masui, Y. and Iwasa, T.},
  title = {Innovative integrated simulator for agile control design on shipboard
	crane considering ship and load sway},
  booktitle = {Control Applications (CCA), 2010 IEEE International Conference on},
  year = {2010},
  pages = {1293 -1300},
  month = {sept.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/CCA.2010.5611109},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {Fluid analysis software;agile control design;external force interface
	routine;hybrid shape approach;innovative integrated simulator;load
	sway;rotary crane;ship behavior;ship sway;shipboard crane;state analysis;straight
	transfer transformation method;transfer control system;control engineering
	computing;cranes;ships;}
}

@INPROCEEDINGS{4420289,
  author = {Bin Xu},
  title = {A Service Oriented Model for Role Based Global Cooperative Software
	Development},
  booktitle = {Convergence Information Technology, 2007. International Conference
	on},
  year = {2007},
  pages = {376 -381},
  month = {nov.},
  doi = {10.1109/ICCIT.2007.249},
  excluded = {Kimi, title},
  keywords = {Agile;MDA;RUP;SOA;UML;Waterfall;dynamic cooperative task arrangement;global
	cooperative software development;global distributed software projects;governance
	model;online instant meeting;organization model;project management;service
	oriented model;software engineering;software enterprise;video-conference;project
	management;software architecture;software development management;}
}

@INPROCEEDINGS{6223017,
  author = {Dullemond, K. and van Gameren, B. and van Solingen, R.},
  title = {Supporting distributed software engineering in a fully distributed
	organization},
  booktitle = {Cooperative and Human Aspects of Software Engineering (CHASE), 2012
	5th International Workshop on},
  year = {2012},
  pages = {30 -36},
  month = {june},
  doi = {10.1109/CHASE.2012.6223017},
  keywords = {bootstrapping;custom fit environment;customer location;distributed
	software engineering;fully distributed organization;incremental process;negative
	impacts;technological support;distributed processing;groupware;software
	engineering;}
}

@INPROCEEDINGS{6223028,
  author = {Lee, M.J. and Ko, A.J.},
  title = {Representations of user feedback in an agile, collocated software
	team},
  booktitle = {Cooperative and Human Aspects of Software Engineering (CHASE), 2012
	5th International Workshop on},
  year = {2012},
  pages = {76 -82},
  month = {june},
  doi = {10.1109/CHASE.2012.6223028},
  excluded = {Kimi, title},
  keywords = {agile collocated software team;asynchronous chat;integrity preservation;software
	development process;transactive memory web;user feedback representations;user-centered
	design;user-reported issues;DP management;software prototyping;storage
	management;user centred design;}
}

@INPROCEEDINGS{6107949,
  author = {Sheikh, M.A.A. and Aboalsamh, H.A. and Albarrak, A.},
  title = {Migration of legacy applications and services to Service-Oriented
	Architecture (SOA)},
  booktitle = {Current Trends in Information Technology (CTIT), 2011 International
	Conference and Workshop on},
  year = {2011},
  pages = {137 -142},
  month = {oct.},
  doi = {10.1109/CTIT.2011.6107949},
  excluded = {Kimi, title},
  keywords = {SOA migration approach;business logic;coarse-grained SOA service;enterprise
	application;enterprise service bus;legacy application;legacy service;legacy
	software;loosely coupled SOA service;presentation logic;service-oriented
	architecture;virtualization layer;business data processing;service-oriented
	architecture;}
}

@INPROCEEDINGS{1410360,
  author = {Jiong Yang and Wei Wang},
  title = {AGILE: a general approach to detect transitions in evolving data
	streams},
  booktitle = {Data Mining, 2004. ICDM '04. Fourth IEEE International Conference
	on},
  year = {2004},
  pages = { 559 - 562},
  month = {nov.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ICDM.2004.10040},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = { AGILE; e-commerce; emission tree; evolving data streams; hidden Markov
	model; stream processing; streaming data monitoring; system diagnosis;
	telecommunication services; transition detection; variable memory
	Markov model; data analysis; data structures;}
}

@INPROCEEDINGS{6096142,
  author = {Marcil, L.},
  title = {MBD amp; code generation: A cost-effective way to speed up HMI certification},
  booktitle = {Digital Avionics Systems Conference (DASC), 2011 IEEE/AIAA 30th},
  year = {2011},
  pages = {8B1-1 -8B1-10},
  month = {oct.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/DASC.2011.6096142},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {2155-7195},
  keywords = {DO-178B certification process;DO-178C certification process;HMI certification;HMI
	model;HMI requirement;MBD;automatic code generation;avionics development;collaborative
	approach;development process;embedded application deployment;formal
	definition language;graphical representation;model-based design;noncertifiable
	avionics application;physical prototype;real embedded system;requirement
	inception;simulation phase;state charts;structure diagram;text-based
	design;textual requirement;textual specification;waterfall chain;waterfall
	methodology;avionics;embedded systems;formal languages;program compilers;text
	analysis;}
}

@INPROCEEDINGS{886894,
  author = {Fufus, F. and Heck, B. and Vachtsevanos, G.},
  title = {Software-enabled adaptive mode transition control for autonomous
	unmanned vehicles},
  booktitle = {Digital Avionics Systems Conference, 2000. Proceedings. DASC. The
	19th},
  year = {2000},
  volume = {1},
  pages = {1E1/1 -1E1/8 vol.1},
  __markedentry = {[kimi:1]},
  doi = {10.1109/DASC.2000.886894},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {CORBA;active plant model;agile maneuvers;autonomous unmanned vehicles;blending
	local mode controllers;complex large-scale systems;dynamic reconfigurability;extreme
	performance maneuvers;forward flight mode controller;fuzzy neural
	network;helicopter control;interoperability;mode transition controllers;off-line
	control design;on-line adaptation scheme;open control platform;openness;plug
	and play extensibility;real-time distributed computing;reconfiguration
	management;software architecture;software-enabled adaptive mode transition
	control;unmanned aerial vehicles;virtual resource network;aircraft
	control;control system CAD;distributed object management;fuzzy control;fuzzy
	neural nets;helicopters;large-scale systems;neurocontrollers;open
	systems;remotely operated vehicles;software architecture;}
}

@INPROCEEDINGS{4702849,
  author = {da Silva, C. and Loubach, D.S. and da Cunha, A.M.},
  title = {Applying the Use Case Points effort estimation technique to Avionics
	Systems},
  booktitle = {Digital Avionics Systems Conference, 2008. DASC 2008. IEEE/AIAA 27th},
  year = {2008},
  pages = {5.B.4-1 -5.B.4-10},
  month = {oct.},
  doi = {10.1109/DASC.2008.4702849},
  keywords = {Unified Modeling Language;avionics systems;object-orientation;preliminary
	testing monitoring station;rational unified process;software estimation;software
	project management;unmanned aircraft system;use case points effort
	estimation technique;well-defined software process;Unified Modeling
	Language;aerospace computing;avionics;object-oriented programming;software
	engineering;}
}

@INPROCEEDINGS{5347438,
  author = {VanderLeest, S.H. and Buter, A.},
  title = {Escape the waterfall: Agile for aerospace},
  booktitle = {Digital Avionics Systems Conference, 2009. DASC '09. IEEE/AIAA 28th},
  year = {2009},
  pages = {6.D.3-1 -6.D.3-16},
  month = {oct.},
  doi = {10.1109/DASC.2009.5347438},
  keywords = {DO-178B software development process;aerospace domain;agile practices;agile
	publications;germane DO-178B work;iterative approach;pair programming;refactoring;test-driven
	development;umbrella software methodology;waterfall software development
	process;aerospace engineering;software engineering;}
}

@INPROCEEDINGS{4635234,
  author = {Morien, R. and Jitprapaikulsarn, S. and Scherrey, B.},
  title = {Agile development methods: A Development paradigm for the Digital
	Ecosystem},
  booktitle = {Digital Ecosystems and Technologies, 2008. DEST 2008. 2nd IEEE International
	Conference on},
  year = {2008},
  pages = {cviii -cx},
  month = {feb.},
  abstract = {The aim of this tutorial is to: present the principles and practices
	of agile software development. Discuss and describe the similarity
	between the underlying principles, practices and processes in agile
	methods, and the digital ecosystem. Present the current state of
	education in Thailand, and the inclusion of Agile Methods in computer
	science and information systems curriculum in Thai universities,
	and the opportunities for joint research and mentoring of Thai researchers
	in the area of agile software development and agile project management.
	Present the current state of software industry adoption of agile
	methods in Thailand.},
  doi = {10.1109/DEST.2008.4635234},
  keywords = {Thailand;agile project management;agile software development;computer
	science education;digital ecosystem;information system curriculum;computer
	science education;information systems;project management;software
	development management;}
}

@INPROCEEDINGS{4221862,
  author = {Misra, S.C. and Kumar, U. and Kumar, V. and Grant, G.},
  title = {The Organizational Changes Required and the Challenges Involved in
	Adopting Agile Methodologies in Traditional Software Development
	Organizations},
  booktitle = {Digital Information Management, 2006 1st International Conference
	on},
  year = {2007},
  pages = {25 -28},
  month = {dec.},
  abstract = {Agile software development methodologies have recently gained widespread
	popularity. The Agile Manifesto states valuing "individuals, and
	interactions over processes and tools, working software over comprehensive
	documentation, customer collaboration over contract negotiation,
	and responding to change over following apian" by M. Fowler (2005).
	Different organizations are transforming their traditional software
	development practices into agile ones. There have been several disparate
	anecdotal evidences in support of the changes required and the challenges
	involved. In this paper, we provide a consolidated picture of the
	important changes required and the challenges involved in such transformation
	projects. We also provide a conceptual framework that would help
	managers for focusing on the important changes required and the challenges
	involved in agile software development projects.},
  doi = {10.1109/ICDIM.2007.369325},
  keywords = {agile software development methodologies;agile software development
	projects;organizational changes;software development organizations;software
	development practices;organisational aspects;project management;software
	engineering;software management;}
}

@INPROCEEDINGS{6052025,
  author = {Quan Wei and Xu Liang and Ou Yangbin},
  title = {Design and Realization of a High-Performance Integrated Attitude
	Determination System and Hybrid Simulation},
  booktitle = {Digital Manufacturing and Automation (ICDMA), 2011 Second International
	Conference on},
  year = {2011},
  pages = {355 -360},
  month = {aug.},
  __markedentry = {[kimi:1]},
  abstract = {A high-performance integrated attitude determination system based
	on multi-sensor is proposed and implemented, which is suitable for
	high resolution of ground stability and agile mobile observation
	of the new generation earth observation micro-satellites. This system
	includes the sensitive subsystem, the signal collecting and preprocessing
	subsystem and the comprehensive processing subsystem. The sensitive
	subsystem is integrated by four types of sensitive components sub-software,
	which include the star sensitive probe, the sun sensitive probe,
	the fiber-optic gyroscope and the magnetic probe. The signal collecting
	and preprocessing subsystem, implemented by the FPGA module and its
	periphery circuit, receives output data from the four types of sensitive
	probe in parallel, and accomplish the data smoothing and preprocessing.
	According to the sunlight information, starlight information, inertial
	information and information based on magnetic after they are smoothness
	and pretreatment, the comprehensive processing subsystem, with ARM
	module as the core, adopts the combination attitude determination
	method based on the ant colony particle filter algorithm to realize
	the high-performance attitude determination of the system. Aiming
	at the integration needs of micro-satellites, a kind of multi-sensor
	integrated attitude determination system structure of small volume,
	light weight, high level of integration, high reliability is designed.
	Finally, tests and experiments based on the integrated attitude determination
	system were conducted, which meet the design requirements.},
  doi = {10.1109/ICDMA.2011.94},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {ARM module;FPGA module;agile mobile observation;ant colony particle
	filter algorithm;earth observation microsatellite;fiber optic gyroscope;ground
	stability;high performance integrated attitude determination system;hybrid
	simulation;inertial information;magnetic probe;multisensor system;sensitive
	subsystem;signal collecting subsystem;signal preprocessing subsystem;starlight
	information;sun sensitive probe;sunlight information;aerospace instrumentation;artificial
	satellites;attitude measurement;fibre optic gyroscopes;field programmable
	gate arrays;geophysical equipment;optimisation;particle filtering
	(numerical methods);remote sensing;}
}

@INPROCEEDINGS{4402117,
  author = {Zirui Gao and Bmgyong Tang},
  title = {Research on Service Oriented Platform of Integration Application
	for Textile Industry in China},
  booktitle = {e-Business Engineering, 2007. ICEBE 2007. IEEE International Conference
	on},
  year = {2007},
  pages = {371 -374},
  month = {oct.},
  __markedentry = {[kimi:2]},
  abstract = {As the main body of the textile industry in China, small and medium
	sized textile enterprises have unique characteristics of demand for
	informatization. They need agile and economical IT solutions which
	are easy to implement and deploy with excellent management performance.
	Demand for differentiated services of segment markets brings spaces
	and opportunities of development to the specialized IT providers
	in specific sectors of the textile industry. Service oriented architecture
	is the ideal solution of on demand integration application of information
	technology for the small and medium sized textile enterprises, the
	specialized IT providers as well as the IT solution providers that
	can supply platform support, based on which the service oriented
	platform of integration application for textile industry in China
	as well as the modeling and enterprise service bus application mode
	of services are proposed to further improve the rational and efficient
	application of information technology with the aim of strengthening
	the core competitiveness of the textile enterprises in China.},
  doi = {10.1109/ICEBE.2007.49},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {information technology;service oriented architecture;small-and-medium
	sized textile enterprise;textile industry;small-to-medium enterprises;software
	architecture;textile industry;}
}

@INPROCEEDINGS{1402317,
  author = {Hassan, U. and Soh, B.},
  title = {Web service intelligent agent structuring for supply chain management
	(SCM)},
  booktitle = {e-Technology, e-Commerce and e-Service, 2005. EEE '05. Proceedings.
	The 2005 IEEE International Conference on},
  year = {2005},
  pages = { 329 - 332},
  month = {march-1 april},
  abstract = { Because of the ease of deployment and other properties like standard
	communication mechanisms, there is a trend in the industry to migrate
	to Web services. Legacy applications are being replaced or complimented
	by Web services so that they can be integrated in the Enterprise
	IT infrastructure as well as with other business partners. Supply
	chains for organizations have many inefficiencies resulting is higher
	end product costs. Traditional supply chain architecture is less
	agile and is unable to configure automatically due to ever changing
	business environment or business needs, in other words we can say
	it is not adaptive in nature. We propose an agent structure, which
	can be used to overcome the above mentioned problems thus giving
	more agility to supply chain. We focus on two aspects of supply chain
	management. Removing inefficiencies in supply chains by real time
	knowledge sharing and automated supply chain configuration by negotiating
	methods being used by agents. The above infrastructure is deployed
	on Web services which is not only easier to implement but also takes
	care of the problems of legacy application connectivity and inter
	and intra organizational communication.},
  doi = {10.1109/EEE.2005.143},
  excluded = {Kimi, title},
  keywords = { SCM; Web service intelligent agent; business environment; enterprise
	IT infrastructure; intra organizational communication; legacy application;
	negotiating method; real time knowledge sharing; standard communication
	mechanism; supply chain management; Internet; cooperative systems;
	electronic commerce; negotiation support systems; real-time systems;
	software agents; supply chain management; supply chains;}
}

@INPROCEEDINGS{4959408,
  author = {Yinghua Zhou},
  title = {UniX Process, Merging Unified Process and Extreme Programming to
	Benefit Software Development Practice},
  booktitle = {Education Technology and Computer Science, 2009. ETCS '09. First
	International Workshop on},
  year = {2009},
  volume = {3},
  pages = {699 -702},
  month = {march},
  abstract = {Unified process (UP) and extreme programming (XP) have been adopted
	widely in the software development world. The main concepts and practices
	of UP and XP are analyzed and the unreasonable or impracticable ones
	are figured out. A new software development process, the UniX process,
	is proposed. The new process model and its phases, releases, iterations
	and workflows are briefly analyzed in comparison with the UP and
	XP. The conclusion is that the UniX process, adopting the advantages
	of UP and XP and discarding their disadvantages, is a more adaptable
	and promising process to faster develop better software.},
  doi = {10.1109/ETCS.2009.690},
  keywords = {UP;UniX process;XP;architecture-centered;extreme programming;software
	development practice;unified process;programming;software architecture;}
}

@ARTICLE{5487434,
  author = {Devedž andić and, V. and Milenković and, S.R.},
  title = {Teaching Agile Software Development: A Case Study},
  journal = {Education, IEEE Transactions on},
  year = {2011},
  volume = {54},
  pages = {273 -278},
  number = {2},
  month = {may },
  __markedentry = {[kimi:1]},
  abstract = {This paper describes the authors' experience of teaching agile software
	development to students of computer science, software engineering,
	and other related disciplines, and comments on the implications of
	this and the lessons learned. It is based on the authors' eight years
	of experience in teaching agile software methodologies to various
	groups of students at different universities, in different cultural
	settings, and in a number of courses and seminars. It specifically
	discusses three different courses on agile software development,
	given in different teaching settings and at different levels, and
	briefly surveys variations to these courses given elsewhere. Based
	on the experience acquired, analyses and evaluations conducted, and
	current pedagogical trends at relevant university departments, the
	authors provide recommendations on how to overcome potential problems
	in teaching agile software development and make their adoption more
	effective.},
  doi = {10.1109/TE.2010.2052104},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0018-9359},
  keywords = {agile software development teaching;computer science;cultural setting;pedagogical
	trend;software engineering;computer science education;educational
	courses;software prototyping;teaching;}
}

@INPROCEEDINGS{5532104,
  author = {Muhammad Ishfaq Khan and Muzaffar Ali Qureshi and Abbas, Qaisar},
  title = {Agile methodology in software development (SMEs) of Pakistan software
	industry for successful software projects (CMM framework)},
  booktitle = {Educational and Network Technology (ICENT), 2010 International Conference
	on},
  year = {2010},
  pages = {576 -580},
  month = {june},
  abstract = {The emergence of software offshore outsourcing phenomena hits every
	country positively and one of the offshore client/vendor attractng
	factor is CMM certification. CMM is a well recognized and globally
	accepted standard in software development to process control, quality
	improvement, and measurement of software firm's capability. Therefore,
	Pakistani software firms (SMEs) are striving to achieve the CMM certifications
	to earn profit from offshore clients. In fact, CMM certification
	is not easy to adopt for all level of firms. Pakistan software industry
	is at its initial stage, so it is not recommendable to jump for CMM
	by software firms (SMEs) directly. The present research paper suggests
	that these software firms (SMEs) should go for adaptation of agile
	development methodology for excellent performance on the foot steps
	of CMM. In this way, software firms (SMEs) can leads toward CMM after
	agile maturity. The authors used the eXtreme Programming (XP) as
	an example that proves Agile Development Methodology can well fit
	the CMM framework and software development firms (SMEs) can achieve
	their objectives to participate in offshore outsourcing phenonmena.},
  doi = {10.1109/ICENT.2010.5532104}
}

@INPROCEEDINGS{6258629,
  author = {Qingling Lu and Wei Zhang and Mengliang Bai and Yuhui Xia},
  title = {Study on SoftMan mobile system},
  booktitle = {Electrical Electronics Engineering (EEESYM), 2012 IEEE Symposium
	on},
  year = {2012},
  pages = {220 -223},
  month = {june},
  __markedentry = {[kimi:2]},
  abstract = {Traditional mobile system adopted centralized management manner and
	maintenance is complex. JXTA is a new technique coexisted with Client/Server
	computation mode. A kind of mobile SoftMan system based on JXTA is
	put forward in this paper. At first, it is compared with traditional
	mobile agent system, and then SoftMan mobile system architecture
	is analyzed and information transmission, reception and transaction
	are introduced in detail. At last, SoftMan implementation is expounded.
	Mobile SoftMan system based on JXTA is more agile and simpler than
	traditional mobile system.},
  doi = {10.1109/EEESym.2012.6258629},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {JXTA;SoftMan mobile system;client-server computation mode;maintenance;mobile
	agent system;mobile system adopted centralized management;client-server
	systems;mobile agents;peer-to-peer computing;public domain software;}
}

@INPROCEEDINGS{1347565,
  author = { Yang Xiaohu and Xu Bin and He Zhijun and Maddineni, S.R.},
  title = {Extreme Programming in global software development},
  booktitle = {Electrical and Computer Engineering, 2004. Canadian Conference on},
  year = {2004},
  volume = {4},
  pages = { 1845 - 1848 Vol.4},
  month = {may},
  abstract = {Reliable communication is essential for the success of global collaborative
	software development efforts. Software development organizations
	and methodologies must be tailored to avoid communications issues
	which may result in misunderstood requirements or missed project
	milestones. Extreme Programming (XP) was adopted for the Lattice
	reg; Trading System reengineering project - a globally distributed
	software development effort. Customers in Boston worked with the
	offshore development in Hangzhou. Business knowledge and requirements
	were transferred iteratively throughout the project duration. Steps
	in the development process were executed at different sites at different
	times, depending on skill set match. An iterative development process
	reduced communication risk as development for one phase and communication
	for the next phase could be conducted in parallel. This approach
	allowed the team to avoid most of the communication delay and improved
	the quality of communication as well.},
  doi = {10.1109/CCECE.2004.1347565},
  issn = {0840-7789},
  keywords = { Extreme Programming; Lattice Trading System reengineering project;
	business knowledge; business requirements; collaborative software
	development; communication delay; global software development; iterative
	development process; legacy equity trading system; reliable communication;
	reverse engineering; business communication; groupware; iterative
	methods; programming environments; project support environments;
	reverse engineering; software development management;}
}

@INPROCEEDINGS{1349706,
  author = { Xu Bin and Yang Xiaohu and He Zhijun and Maddineni, S.R.},
  title = {Extreme programming in reducing the rework of requirement change},
  booktitle = {Electrical and Computer Engineering, 2004. Canadian Conference on},
  year = {2004},
  volume = {3},
  pages = { 1567 - 1570 Vol.3},
  month = {may},
  abstract = { Requirement changes and the involved rework are inevitable if the
	requirement changes could not be foreseen. Extreme programming (XP)
	suggests the customer be on site with the developers. The requirement
	changes may be forecast by the on site customer from the business
	perspective and by the developers from the technology perspective.
	Extreme programming was adopted in the Lattice Trading System reengineering
	project. The user stories were weighed by a set of criteria which
	included the risk, cost, schedule, as well as the possibility to
	be changed. The stories were decomposed into features, and the features
	were organized into components. The components with less possibility
	to be changed were implemented earlier. Meanwhile, spikes were conducted
	when the decisions were being made for some critical tasks. In such
	a way, most components were completed without any change to their
	functional features while few components were implemented with large
	modification. The overall effort of rework was reduced considerably
	with this approach. Compared with the small cost for managing the
	change possibility, the method introduced in this paper is of significant
	worth.},
  doi = {10.1109/CCECE.2004.1349706},
  issn = {0840-7789},
  keywords = { Lattice Trading System reengineering project; components; cost; extreme
	programming; requirement changes; risk; schedule; spikes; management
	of change; project management; software management; software process
	improvement;}
}

@INPROCEEDINGS{1345078,
  author = { Subramaniam, K. and Far, B.H. and Eberlein, A.},
  title = {Automating the transition from stakeholders' requests to use cases
	in OOAD},
  booktitle = {Electrical and Computer Engineering, 2004. Canadian Conference on},
  year = {2004},
  volume = {1},
  pages = { 515 - 518 Vol.1},
  month = {may},
  __markedentry = {[kimi:2]},
  abstract = { The object model creation process (OMCP) is considered a major task
	in object-oriented analysis and design (OOAD). In the rational unified
	process (RUP), objects and classes are identified from the use case
	model, which is a combination of the use case diagram and the use
	case specification (UCS) document. The automation of the generation
	of the class model assumes that the UCS is complete, accurate and
	unambiguous. However, in reality, the UCS is written in free form
	natural language and is therefore likely to be ambiguous and complex.
	To avoid this problem, the use of case templates and guidelines is
	proposed for writing UCS. The paper presents a methodology to automate
	the transition from stakeholders' requests to the use case model.
	The methodology uses a natural language parser to parse stakeholders'
	requests according to various guidelines. The automation process
	is discussed with an example.},
  doi = {10.1109/CCECE.2004.1345078},
  excludekimi = {abstract},
  issn = {0840-7789},
  keywords = { case templates; guidelines; natural language parser; object model
	creation process; object-oriented analysis and design; rational unified
	process; software development; stakeholder requests; use case diagram;
	use case specification document; computer aided software engineering;
	grammars; natural languages; object-oriented methods;}
}

@ARTICLE{1532522,
  author = {Geras, A.M. and Smith, M.R. and Miller, J.},
  title = {A survey of software testing practices in alberta},
  journal = {Electrical and Computer Engineering, Canadian Journal of},
  year = {2004},
  volume = {29},
  pages = {183 -191},
  number = {3},
  month = {july },
  abstract = {Software organizations have typically de-emphasized the importance
	of software testing. In this paper, the results of a regional survey
	of software testing and software quality assurance techniques are
	described. Researchers conducted the study during the summer and
	fall of 2002 by surveying software organizations in the Province
	of Alberta. Results indicate that Alberta-based organizations tend
	to test less than their counterparts in the United States. The results
	also indicate that Alberta software organizations tend to train fewer
	personnel on testing-related topics. This practice has the potential
	for a two-fold impact: first, the ability to detect trends that lead
	to reduced quality and to identify the root causes of reductions
	in product quality may suffer from the lack of testing. This consequence
	is serious enough to warrant consideration, since overall quality
	may suffer from the reduced ability to detect and eliminate process
	or product defects. Second, the organization may have a more difficult
	time adopting methodologies such as extreme programming. This is
	significant because other industry studies have concluded that many
	software organizations have tried or will in the next few years try
	some form of agile method. Newer approaches to software development
	like extreme programming increase the extent to which teams rely
	on testing skills. Organizations should consider their testing skill
	level as a key indication of their readiness for adopting software
	development techniques such as test-driven development, extreme programming,
	agile modelling, or other agile methods.},
  doi = {10.1109/CJECE.2004.1532522},
  excluded = {Kimi, title},
  issn = {0840-8688}
}

@INPROCEEDINGS{5355002,
  author = {Lakys, Y. and Godara, B. and Fabre, A.},
  title = {Cognitive and encrypted communications, part 2 : A new approach to
	active frequency-agile filters and validation results for an agile
	bandpass yopology in SiGe-BiCMOS},
  booktitle = {Electrical and Electronics Engineering, 2009. ELECO 2009. International
	Conference on},
  year = {2009},
  pages = {II-16 -II-29},
  month = {nov.},
  __markedentry = {[kimi:1]},
  abstract = {A new theory for a 2nd-order frequency-agile filter is introduced
	in this paper. The center frequency of the filter is proportional
	to the gain of a feedback amplifier and thus can be tuned over a
	wide frequency range. This new theory is thereafter generalized to
	the nth-class leading to a center frequency proportional to (A)n/2.
	The resulting filters make use of the minimum passive elements for
	2nd-order filters: two capacitors. Simulation results of band pass
	agile filters in current mode and made from second-generation current
	controlled conveyors (CCCIIQ) in 0.25Â¿m SiGe BiCMOS technology are
	given for n=1 and n=2. These simulation results along with results
	of measurements carried out on the fabricated filters entirely confirm
	the new approach. They also highlight the improvements to be expected
	for cognitive and encrypted communications.},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {SiGe-Bi;active frequency-agile filters;agile bandpass topology;cognitive
	communications;cognitive radio;encrypted communications;feedback
	amplifier;radio spectrum;second-generation current controlled conveyors;software-defined
	radio;CMOS integrated circuits;Ge-Si alloys;active filters;band-pass
	filters;current conveyors;semiconductor materials;}
}

@INPROCEEDINGS{566920,
  author = {Kenett, R.S.},
  title = {Software specifications metrics: a quantitative approach to assess
	the quality of documents},
  booktitle = {Electrical and Electronics Engineers in Israel, 1996., Nineteenth
	Convention of},
  year = {1996},
  pages = {166 -169},
  month = {nov},
  __markedentry = {[kimi:2]},
  abstract = {Following the development of system requirements, the software specifications
	document consists of a definition of the software product. Each of
	the following phases of design, coding, and integration/testing transforms
	the initial software specifications into lower levels of machine
	implementable details until the final machine processable object
	code is generated. Therefore, the completeness, readability and accuracy
	of the software specification directly influences the quality of
	the final software product. A waterfall development model is not
	assumed. It is assumed however, that software specifications are
	kept ldquo;alive rdquo; and relevant. The purpose of the article
	is to provide a methodology for deriving quantitative measures of
	the quality of the software specifications document. These measures
	are designed to complement good engineering judgment that has to
	be applied in order to judge the quality of a software specifications
	document. Quantitative measures (i.e., metrics) will help reveal
	problem areas in various dimensions of quality characteristics. We
	focus on completeness, readability and accuracy. The methodology
	is presented with real life examples},
  doi = {10.1109/EEIS.1996.566920},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {accuracy;completeness;document quality assessment;engineering judgment;machine
	implementable details;machine processable object code;quantitative
	approach;quantitative measures;readability;software specifications
	document;software specifications metrics;system requirements;formal
	specification;software metrics;software quality;}
}

@INPROCEEDINGS{5547336,
  author = {Molhanec, M.},
  title = {Agile project management framework},
  booktitle = {Electronics Technology (ISSE), 2010 33rd International Spring Seminar
	on},
  year = {2010},
  pages = {525 -530},
  month = {may},
  abstract = {Our article is related to improvement of the product design project
	management by using some knowledge transferred from the branch of
	software engineering. We introduce the Agile Project Management Framework
	- a modern agile framework covering the whole life cycle of project.
	Especially we describe the phase one of this project framework in
	more detail. Alongside, we make a mention of using ICT (Information
	and Communication Technology) and KM (Knowledge Management) tools.
	Our aim is to define, clearly and logically, the particular phases
	and stages of project management process in the frame of the whole
	product life cycle. The result of our work is a detailed referential
	description of and user guides for the product design project management
	process based on the agile project management paradigm. The results
	of our endeavour will be applied in our university courses of the
	product design project management provided by the department of e-Technology
	at CTU FEE in Prague.},
  doi = {10.1109/ISSE.2010.5547336},
  keywords = {CTU FEE;ICT;agile project management;e-technology;information and
	communication technology;knowledge management;product design project
	management;product life cycle;software engineering;university courses;information
	technology;product design;product life cycle management;project management;software
	engineering;}
}

@INPROCEEDINGS{1653211,
  author = {Petric, A. and Kusek, M. and Jezic, G.},
  title = {The Development of a Mobile Agent Platform},
  booktitle = {Electrotechnical Conference, 2006. MELECON 2006. IEEE Mediterranean},
  year = {2006},
  pages = {765 -768},
  month = {may},
  abstract = {This paper describes the software engineering process used in the
	development of the Crossbow2 agent platform. Crossbow2 is a light-weight
	agent platform that enables the basic agent functionalities: agent
	creation, migration, detection, communication and destruction. The
	platform was developed with the extreme programming (XP) approach.
	The paper elaborates the activities included in the software development
	process and the XP practices used in the requirement specification,
	system design, implementation and testing},
  doi = {10.1109/MELCON.2006.1653211},
  keywords = {Crossbow2 agent platform;agent creation;extreme programming;light-weight
	agent platform;mobile agent platform;software development process;software
	engineering;mobile agents;software engineering;}
}

@INPROCEEDINGS{4747489,
  author = {Muracevic, D. and Orucevic, F.},
  title = {Notice of Violation of IEEE Publication Principles Spatial data based
	on SOA},
  booktitle = {ELMAR, 2008. 50th International Symposium},
  year = {2008},
  volume = {1},
  pages = {277 -280},
  month = {sept.},
  __markedentry = {[kimi:1]},
  abstract = {Notice of Violation of IEEE Publication Principles
	
	"Spatial Data Based on SOA" by Fahrudin Orcevic and Muracevic Dzenana
	in the Proceedings of the 50th International Symposium ELMAR, September
	2008, pp. 277-280
	
	After careful and considered review of the content and authorship
	of this paper by a duly constituted expert committee, this paper
	has been found to be in violation of IEEE's Publication Principles.
	
	This paper duplicates original text from the papers cited below. The
	original text was copied with insufficient attribution (including
	appropriate references to the original author(s) and/or paper title)
	and without permission.
	
	"Developing and Deploying an Integrated Geoenabled SOA Business Solution:
	A Case Study," ESRI White Paper, June 2007
	
	"Geospatial Service-Oriented Architecture (SOA)" ESRI White Paper,
	June 2007
	
	"Semantic Evolution of Geospatial Web Services" J. Lieberman, et al,
	WC3 Workshop on Frameworks for Semantic in Web Services, June 2005
	
	"Standardized Geoprocessing-Taking Spatial Data Infrastructures one
	Step Further" by Christian Kiehle, et al, 9th AGILE Conference on
	Geographic Information Science, 2006
	
	"The Development of a Prototype Goespatial Web Service System for
	Remote Sensing Data," M. Deng, et al, International Society for Photogrammetry
	and Remote Sensing (ISPRS) 2004
	
	"A Service Driven Approach for Integration of Heterogenous Geospatial
	Data Repositories" S.K. Ghosh, et al, Geospatial World, August 2007
	
	Organizations today have application needs that span multiple department,
	geographies, business units, and heterogeneous hardware and software
	platforms. In this case study, multiple disparate information systems
	and heritage data sources were integrated to deliver a flexible business
	solution using a service-oriented approach. Specifically, standards-based
	services oriented architecture (SOA)-enabling technologies and design
	principles were used to integrat- geographic information system (GIS)
	spatial analysis and visualization services, along with other business
	information systems, in a Web-based, service-oriented business application
	environment.},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1334-2630},
  keywords = {SOA;Web-based business application;business information systems;business
	units;geographic information system;heritage data sources;heterogeneous
	hardware platform;heterogeneous software platform;multiple disparate
	information systems;service-oriented approach;spatial data;standards-based
	services oriented architecture;Web services;business data processing;management
	information systems;}
}

@INPROCEEDINGS{6226998,
  author = {Janus, A. and Schmietendorf, A. and Dumke, R. and Jager, J.},
  title = {The 3C approach for Agile Quality Assurance},
  booktitle = {Emerging Trends in Software Metrics (WETSoM), 2012 3rd International
	Workshop on},
  year = {2012},
  pages = {9 -13},
  month = {june},
  abstract = {Continuous Integration is an Agile Practice for the continuous integration
	of new Source Code into the Code Base including the automated compile,
	build and running of tests. From traditional Quality Assurance we
	know Software Metrics as a very good approach to measure Software
	Quality. Combining both there is a promising approach to control
	and ensure the internal Software Quality. This paper introduces the
	3C Approach, which is an extension to the Agile Practice Continuous
	Integration: It adds Continuous Measurement and Continuous Improvement
	as subsequent Activities to CI and establishes Metric-based Quality-Gates
	for an Agile Quality Assurance. It was developed and proven in an
	Agile Maintenance and Evolution project for the Automotive Industry
	at T-Systems International - a large German ICT company. Within the
	project the approach was used for a (legacy) Java-based Web Application
	including the use of Open Source Tools from the Java Eco-System.
	But the approach is not limited to these technical boundaries as
	similar tools are available also for other technical platforms.},
  doi = {10.1109/WETSoM.2012.6226998},
  excluded = {Kimi, title},
  keywords = {3C approach;Agile Maintenance and Evolution project;Automotive Industry;German
	ICT company;Java ecosystem;Java-based Web application;T-Systems International;agile
	practice;agile quality assurance;code base;continuous improvement;continuous
	integration;continuous measurement;metric-based quality-gates;open
	source tools;software metrics;software quality measurement;source
	code;Internet;Java;automobile industry;continuous improvement;production
	engineering computing;public domain software;quality assurance;software
	maintenance;software metrics;software prototyping;software quality;software
	tools;}
}

@INPROCEEDINGS{6046253,
  author = {Franqueira, V.N.L. and Bakalova, Z. and Thein Than Tun and Daneva,
	M.},
  title = {Towards agile security risk management in RE and beyond},
  booktitle = {Empirical Requirements Engineering (EmpiRE), 2011 First International
	Workshop on},
  year = {2011},
  pages = {33 -36},
  month = {aug.},
  __markedentry = {[kimi:]},
  abstract = {Little attention has been given so far to the process of security
	risk management at the early stages of system development. Security
	has been addressed by isolated security assurance practices, some
	of which consider risks and mitigations but they do not provide an
	overview of the overall security state of the system being developed.
	This paper takes the position that (1) these isolated security assurance
	practices should be fully integrated and should be embedded in short
	iterations of risk assessment, treatment and acceptance, providing
	input for updating security requirements and for security risk management,
	and that (2) available empirical data from public catalogs and databases
	should be used as a source of expertise, to leverage past experiences,
	and therefore reduce, although not eliminate, subjectivity of human
	judgment. Borrowing from the agile software development and project
	management philosophy, we introduce the idea of a light weight, agile
	approach to security risk management integrated to the development
	life cycle.},
  doi = {10.1109/EmpiRE.2011.6046253},
  excluded = {Verify (Kimi)},
  keywords = {agile security risk management;agile software development;human judgment;isolated
	security assurance practices;project management;public catalogs;risk
	assessment;risk treatment;system development;project management;public
	information systems;risk management;security of data;software prototyping;}
}

@INPROCEEDINGS{6092589,
  author = {Paasivaara, M. and Lassenius, C.},
  title = {Scaling Scrum in a Large Distributed Project},
  booktitle = {Empirical Software Engineering and Measurement (ESEM), 2011 International
	Symposium on},
  year = {2011},
  pages = {363 -367},
  month = {sept.},
  abstract = {This paper presents a currently ongoing single case study on adopting
	and scaling Scrum in a large software development project distributed
	across four sites. The data was gathered by 19 semi-structured interviews
	of project personnel, including managers, architects, developers
	and testers. At the time of the interviews the project had grown
	in size during the past 2,5 years from two collocated Scrum teams
	to 20 teams located in four countries and employing over 170 persons.
	In this paper we first describe our research approach and goals.
	Then we briefly summarize the preliminary results of this ongoing
	study: we explain how Scrum practices were scaled, as well as discuss
	the successes and challenges experienced when adopting the agile
	practices and scaling them, while at the same time growing the project
	size at a fast pace. Even though this project has been very successful
	from the business point of view, it has experienced a lot of problems
	in applying Scrum, especially related to scaling the agile practices.
	Thus, it seems that adapting Scrum practices to work well in a large
	distributed setting is challenging.},
  doi = {10.1109/ESEM.2011.49},
  issn = {1938-6451},
  keywords = {agile practices;architects;large distributed project;managers;project
	personnel;scrum scaling;software development project;software development
	management;software prototyping;}
}

@INPROCEEDINGS{5159247,
  author = {Verginadis, Y. and Apostolou, D. and Papageorgiou, N. and Mentzas,
	G.},
  title = {An Architecture for Collaboration Patterns in Agile Event-Driven
	Environments},
  booktitle = {Enabling Technologies: Infrastructures for Collaborative Enterprises,
	2009. WETICE '09. 18th IEEE International Workshops on},
  year = {2009},
  pages = {227 -230},
  month = {29 2009-july 1},
  abstract = {Collaboration in virtual organizations is usually informal, dynamic
	and ad-hoc. In this paper, we introduce collaboration patterns as
	a mechanism to facilitate knowledge-based collaborations. We also
	propose an event-driven architecture for modeling, recommending and
	enacting such Collaboration Patterns.},
  doi = {10.1109/WETICE.2009.12},
  excluded = {Kimi, title},
  issn = {1524-4547},
  keywords = {agile event-driven architecture environment;knowledge-based collaboration
	pattern;object-oriented programming;virtual organization;groupware;knowledge
	based systems;object-oriented programming;software architecture;virtual
	enterprises;}
}

@INPROCEEDINGS{5159248,
  author = {Pinggera, J. and Zugal, S. and Weber, B.},
  title = {Alaska Simulator Supporting Empirical Evaluation of Process Flexibility},
  booktitle = {Enabling Technologies: Infrastructures for Collaborative Enterprises,
	2009. WETICE '09. 18th IEEE International Workshops on},
  year = {2009},
  pages = {231 -233},
  month = {29 2009-july 1},
  __markedentry = {[kimi:2]},
  abstract = {The Alaska Simulator is an interactive software tool developed at
	the University of Innsbruck which allows people to test, analyze
	and improve their own planning behavior. In addition, the Alaska
	Simulator can be used for studying research questions in the context
	of business process management and other related fields. Thereby,the
	Alaska Simulator uses a journey as a metaphor for business processes.
	In the context of business process management the simulator can be
	used to compare traditional rather plan-driven methods for planning
	and executing a business process with more agile approaches supporting
	different decision deferral patterns. Instead of pre-planning everything
	in advance decision deferral patterns allow interleaving process
	modeling and execution and provide mechanisms for effectively dealing
	with uncertainty. The biggest challenge thereby is to find the right
	balance between pre-planning activities and keeping options open.The
	Alaska Simulator allows to explore how much planning is needed under
	different circumstances.},
  doi = {10.1109/WETICE.2009.50},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {1524-4547},
  keywords = {Alaska simulator;business process management;empirical evaluation;interactive
	software tool;process flexibility;business process re-engineering;interactive
	systems;simulation;software tools;}
}

@INPROCEEDINGS{6342012,
  author = {Chen Qing and Yong Zhong},
  title = {A Problem-Frame-Based Approach for Component-Oriented Development},
  booktitle = {Engineering and Technology (S-CET), 2012 Spring Congress on},
  year = {2012},
  pages = {1 -4},
  month = {may},
  __markedentry = {[kimi:2]},
  abstract = {The rapid development of internet has brought a series of challenges
	for traditional software theories, models, approaches and technologies.
	An agile software engineering method is thought to be imminent. Components
	designed for reuse is expected as a way to resolve these problems.
	Some methods provide a top-down vision to direct the component-oriented
	development process. But the gap between initial software design
	and final implementation prevents it from playing a fundamental role
	in the process. On the other hand, a bottom-up approach which are
	widely used such as J2EE/EJB, COM/COM++, CORBA/CCM are also proved
	have some shortcomings. In this paper, Problem-Frame-Based Approach
	(PFBA), which provides a way of relating software requirements and
	development, is adopt to solve these problems. PFBA is a new way
	of looking at how to develop software, helps the developer to focus
	on the problem itself, and uses Qi4j toolkit to support a component-oriented
	development process.},
  doi = {10.1109/SCET.2012.6342012},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {CCM;COM++;CORBA;EJB;Internet;J2EE;PFBA;Qi4j toolkit;agile software
	engineering method;bottom-up approach;component-oriented development
	process;problem-frame-based approach;software design;software development;software
	requirements;Internet;object-oriented programming;software prototyping;software
	reusability;}
}

@ARTICLE{5741001,
  author = {Middleton, P. and Joyce, D.},
  title = {Lean Software Management: BBC Worldwide Case Study},
  journal = {Engineering Management, IEEE Transactions on},
  year = {2012},
  volume = {59},
  pages = {20 -32},
  number = {1},
  month = {feb. },
  abstract = {This case study examines how the lean ideas behind the Toyota production
	system can be applied to software project management. It is a detailed
	investigation of the performance of a nine-person software development
	team employed by BBC Worldwide based in London. The data collected
	in 2009 involved direct observations of the development team, the
	kanban boards, the daily stand-up meetings, semistructured interviews
	with a wide variety of staff, and statistical analysis. The evidence
	shows that over the 12-month period, lead time to deliver software
	improved by 37%, consistency of delivery rose by 47%, and defects
	reported by customers fell 24%. The significance of this work is
	showing that the use of lean methods including visual management,
	team-based problem solving, smaller batch sizes, and statistical
	process control can improve software development. It also summarizes
	key differences between agile and lean approaches to software development.
	The conclusion is that the performance of the software development
	team was improved by adopting a lean approach. The faster delivery
	with a focus on creating the highest value to the customer also reduced
	both technical and market risks. The drawbacks are that it may not
	fit well with existing corporate standards.},
  doi = {10.1109/TEM.2010.2081675},
  excluded = {Kimi, title},
  issn = {0018-9391},
  keywords = {BBC Worldwide Case Study;CMMI;agile software development;batch sizes;capability
	maturity model;daily stand-up meetings;kanban boards;lean software
	management;market risk reduction;nine-person software development
	team performance investigation;semistructured interviews;software
	project management;staff;statistical analysis;statistical process
	control;team-based problem solving;technical risk reduction;time
	to delivery;visual management;Capability Maturity Model;batch production
	systems;personnel;project management;software development management;software
	prototyping;statistical analysis;statistical process control;team
	working;time to market;}
}

@INPROCEEDINGS{5090504,
  author = {Steffen, B.},
  title = {Keynote: Continuous Model Driven Engineering},
  booktitle = {Engineering of Complex Computer Systems, 2009 14th IEEE International
	Conference on},
  year = {2009},
  pages = {xi},
  month = {june},
  abstract = {Agility is a must, in particular for business applications. Complex
	systems and processes must be continuously updated in order to meet
	the ever changing market conditions. Continuous Model Driven Engineering
	is based on our eXtreme Model-Driven Design (XMDD) framework, which
	has been designed to continuously involve the customer/application
	expert throughout the whole systems' life cycle including software
	maintenance and evolution. Conceptually it is based on the One Thing
	Approach (OTA), which combines the simplicity of the waterfall development
	paradigm with a maximum of agility. The key to OTA is to view the
	whole development process simply as a complex hierarchical and interactive
	decision process, where each stakeholder, including the application
	expert, is allowed to continuously place his/her decisions in term
	of constraints. Thus semantically, at any time, the state of the
	development or evolution process can simply be regarded as the current
	set of constraints, and each development or evolution step can be
	regarded simply as a transformation of this very constraint set.
	This approach, conceptually, allows one 1) to monitor globally and
	at any time the consistency of the development or evolution process
	simply via constraint checking, and 2) to impose a kind of decision
	hierarchy by mapping areas of competencies to roles of individuals,
	in order to identify required actions in case of constraint violation.
	The essence and power of this approach, which is technically supported
	by the jABC development and execution framework, will be illustrated
	along a number of real life application.},
  doi = {10.1109/ICECCS.2009.58},
  excluded = {Kimi, title},
  keywords = {business application;constraint checking;continuous model driven engineering;decision
	process;extreme model-driven design framework;one thing approach;software
	evolution;software maintenance;waterfall development paradigm;business
	data processing;program verification;software maintenance;}
}

@INPROCEEDINGS{5457762,
  author = {Mordinyi, R. and Kuhn, E. and Schatten, A.},
  title = {Towards an Architectural Framework for Agile Software Development},
  booktitle = {Engineering of Computer Based Systems (ECBS), 2010 17th IEEE International
	Conference and Workshops on},
  year = {2010},
  pages = {276 -280},
  month = {march},
  abstract = {One of the ideas of agile software development is to respond to changes
	rather than following a plan. Constantly changing businesses result
	in changing requirements, to be handled in the development process.
	Therefore, it is essential that the underlying software architecture
	is capable of managing agile business processes. However, criticism
	on agile software development states that it lacks paying attention
	to architectural and design issues and therefore is bound to engender
	suboptimal design-decisions. In this paper we propose an architectural
	framework for agile software development, that by explicitly separating
	computational, coordinational, and communicational models offers
	a high degree of flexibility regarding architectural and design changes
	introduced by agile business processes. The framework strength is
	facilitated by combining the characteristics and properties of state-of-the-art
	middleware architectural styles captured in a simple API. The benefit
	of our approach is a clear architectural design with minimized effects
	of changes the models have on each other, accompanied by an efficient
	realization of new business requirements.},
  doi = {10.1109/ECBS.2010.38},
  keywords = {API;agile business processes;agile software development;middleware
	architectural styles;software architecture;application program interfaces;business
	data processing;middleware;software architecture;software prototyping;}
}

@INPROCEEDINGS{5457784,
  author = {Pooley, R.J. and Abdullatif, A.A.L.},
  title = {CPASA: Continuous Performance Assessment of Software Architecture},
  booktitle = {Engineering of Computer Based Systems (ECBS), 2010 17th IEEE International
	Conference and Workshops on},
  year = {2010},
  pages = {79 -87},
  month = {march},
  abstract = {Software architecture is a very important factor when it comes to
	performance measurements. A large percentage of projects failing
	their potential performance characterisation was caused by badly
	configured architectures. Performance assessment of software architectures
	proved to be a successful way of preventing this risk. Non-functional
	requirements verification is still an uncharted area in agile development.
	CPASA provides a method for assessing the performance requirements
	using the system architecture as a base for conducting the performance
	study. In this paper, we introduce the steps in the CPASA method
	and the technical description of how to deploy this method.},
  doi = {10.1109/ECBS.2010.16},
  excluded = {Kimi, title},
  keywords = {CPASA;continuous performance assessment;nonfunctional requirement
	verification;performance requirement;software architecture;formal
	verification;software architecture;software performance evaluation;}
}

@INPROCEEDINGS{5934800,
  author = {Soundararajan, S. and Arthur, J.D.},
  title = {A Structured Framework for Assessing the "Goodness" of Agile Methods},
  booktitle = {Engineering of Computer Based Systems (ECBS), 2011 18th IEEE International
	Conference and Workshops on},
  year = {2011},
  pages = {14 -23},
  month = {april},
  __markedentry = {[kimi:]},
  abstract = {Agile Methods are designed for customization, they offer an organization
	or a team the flexibility to adopt a set of principles and practices
	based on their culture and values. While that flexibility is consistent
	with the agile philosophy, it can lead to the adoption of principles
	and practices that can be sub-optimal relative to the desired objectives.
	We question then, how can one determine if adopted practices are
	"in sync" with the identified principles, and to what extent those
	principles support organizational objectives? In this research, we
	focus on assessing the "goodness" of an agile method adopted by an
	organization based on (1) its adequacy, (2) the capability of the
	organization to provide the supporting environment to successfully
	implement the method, and (3) the method's effectiveness. To guide
	our assessment, we propose the Objectives, Principles and Practices
	(OPP) framework. The design of the OPP framework revolves around
	the identification of the agile objectives, principles that support
	the achievement of those objectives, and practices that reflect the
	"spirit" of those principles. Well-defined linkages between the objectives
	and principles, and between the principles and practices are also
	established to support the assessment process. We assess the adequacy
	of an agile method by traversing the linkages in a top-down fashion.
	That is, given the set of objectives espoused by the agile method,
	we follow the linkages downward to ensure that the appropriate principles
	are enunciated, and that the proper practices are expressed. We assess
	the capability of an organization to implement its adopted method
	and the effectiveness of that implementation by using both a top-down
	and bottom-up traversal of the linkages. The bottom-up assessment,
	however, is predicated on the identification of people, process,
	project and product properties associated with each practice that
	attest to the presence and implementation of that practice. We refer
	to each prac- - tice, property pair as an indicator. By following
	the linkages upward from the indicators, we can infer the use of
	proper principles and the achievement of desired objectives.},
  doi = {10.1109/ECBS.2011.26},
  excluded = {Verify (Kimi)},
  keywords = {agile method;bottom-up assessment;goodness assessment;objectives,
	principles and practices framework;organizational objectives;structured
	framework;software prototyping;}
}

@INPROCEEDINGS{6195174,
  author = {Bustard, David},
  title = {Beyond Mainstream Adoption: From Agile Software Development to Agile
	Organizational Change},
  booktitle = {Engineering of Computer Based Systems (ECBS), 2012 IEEE 19th International
	Conference and Workshops on},
  year = {2012},
  pages = {90 -97},
  month = {april},
  abstract = {The agile paradigm is now a mainstream approach to software development,
	with Scrum emerging as the dominant methodology in the field. The
	rapid diffusion of the approach is an indicator of its current value
	to organizations but further gains seem possible. One major step
	would be the use of the agile approach in all organizational activity.
	This opportunity has always been part of the Scrum philosophy but
	few have attempted to put it into practice so far. The purpose of
	this paper is to consider what is involved, proposing a hierarchical
	Scrum model to make it suitable for such wider use. The proposal
	draws on established ideas from both Soft Systems Methodology (SSM)
	and Deming's Plan-Do-Study-Act (PDSA) cycle. The new model also has
	the potential to enhance the basic agile development process for
	software.},
  doi = {10.1109/ECBS.2012.18}
}

@INPROCEEDINGS{4492420,
  author = {Cannizzo, F. and Marcionetti, G. and Moser, P.},
  title = {The Toolbox of a Successful Software Craftsman},
  booktitle = {Engineering of Computer Based Systems, 2008. ECBS 2008. 15th Annual
	IEEE International Conference and Workshop on the},
  year = {2008},
  pages = {389 -397},
  month = {31 2008-april 4},
  abstract = {The authors of this paper are part of a distributed agile team assembled
	in 2005 to create a software product, adopting agile methodologies
	and using a set of tools to support the development work. The authors
	present their experience on working with these tools to effectively
	improve the adopted agile practices. Three of the most crucial agile
	practices, given the size of the team and its distributed nature,
	are discussed: maintain high project status visibility, provide immediate
	feedback and achieve complete automation for most of the development
	activities.},
  doi = {10.1109/ECBS.2008.48},
  keywords = {distributed agile team;software craftsman toolbox;software product
	development;software tools;}
}

@INPROCEEDINGS{4492423,
  author = {Taromirad, M. and Ramsin, R.},
  title = {An Appraisal of Existing Evaluation Frameworks for Agile Methodologies},
  booktitle = {Engineering of Computer Based Systems, 2008. ECBS 2008. 15th Annual
	IEEE International Conference and Workshop on the},
  year = {2008},
  pages = {418 -427},
  month = {31 2008-april 4},
  __markedentry = {[kimi:2]},
  abstract = {The emergence of agile software development methodologies, and the
	sheer number of the variants introduced, has raised the need for
	evaluation and comparison efforts, mostly in order to facilitate
	the selection or engineering of an agile methodology aimed at a specific
	software development situation. But existing evaluation frameworks
	and comparison tools do not satisfy all the needs of project managers
	and method engineers. The principal objectives of this paper are
	to introduce a fundamental basis for evaluation frameworks that target
	existing challenges, and also to evaluate existing evaluation frameworks
	in order to identify their shortcomings. To this aim, we have proposed
	an evaluation criterion set, or meta- criteria, according to which
	existing evaluation frameworks have been assessed. These meta-criteria
	define the essential features that an appropriate evaluation framework
	is expected to possess. The evaluation results show that existing
	evaluation frameworks do not satisfy typical requirements, and fail
	to address existing challenges. Therefore, the need still remains
	for an appropriate and useful evaluation framework for appraising
	agile methodologies.},
  doi = {10.1109/ECBS.2008.32},
  excluded = {Verify (Kimi)},
  excludekimi = {abstract},
  keywords = {agile software development methodologies;evaluation frameworks;meta-criteria;software
	performance evaluation;}
}

@INPROCEEDINGS{4492421,
  author = {Thomas, J.},
  title = {Introducing Agile Development Practices from the Middle},
  booktitle = {Engineering of Computer Based Systems, 2008. ECBS 2008. 15th Annual
	IEEE International Conference and Workshop on the},
  year = {2008},
  pages = {401 -407},
  month = {31 2008-april 4},
  abstract = {Agile practices are widely discussed as a process that lends itself
	to green-field development. There is good documentation to support
	this and books on implementing agile given a new project. In an organization,
	implementing agile from the top down is generally accepted as the
	key to success. In the real world most development teams have some
	legacy product, and development managers make decisions on how development
	teams deliver software. This paper will look at introducing agile
	to an existing development team with a maturing product. The problems
	of the development team, selling the idea to upper management, communication
	to customers and delivery will be discussed. The implementation of
	agile practices, what was done, how it was done and next steps in
	implementation are the focus of this paper.},
  doi = {10.1109/ECBS.2008.41},
  keywords = {agile development;agile practice;development team;green-field development;legacy
	product;product development;software development;product development;software
	development management;software maintenance;team working;}
}

@INPROCEEDINGS{4839245,
  author = {Soundararajan, S. and Arthur, J.D.},
  title = {A Soft-Structured Agile Framework for Larger Scale Systems Development},
  booktitle = {Engineering of Computer Based Systems, 2009. ECBS 2009. 16th Annual
	IEEE International Conference and Workshop on the},
  year = {2009},
  pages = {187 -195},
  month = {april},
  abstract = {One of the more important issues in the development of larger scale
	complex systems (product development period of two or more years)
	is accommodating changes to requirements. Requirements gathered for
	larger scale systems evolve during lengthy development periods due
	to changes in software and business environments, new user needs
	and technological advancements. Agile methods, which focus on accommodating
	change even late in the development lifecycle, can be adopted for
	the development of larger scale systems. However, as currently applied,
	these practices are not always suitable for the development of such
	systems. We propose a soft-structured framework combining the principles
	of agile and conventional software development that addresses the
	issue of rapidly changing requirements for larger scale systems.
	The framework consists of two parts: (1) a soft-structured requirements
	gathering approach that reflects the agile philosophy i.e., the agile
	requirements generation model and (2) a tailored development process
	that can be applied to either small or larger scale systems.},
  doi = {10.1109/ECBS.2009.21},
  keywords = {formal verification;larger scale systems development;requirements
	engineering;soft-structured agile framework;software development
	lifecycle;software specification;formal specification;software prototyping;}
}

@INPROCEEDINGS{1409937,
  author = {Coram, M. and Bohner, S.},
  title = {The impact of agile methods on software project management},
  booktitle = {Engineering of Computer-Based Systems, 2005. ECBS '05. 12th IEEE
	International Conference and Workshops on the},
  year = {2005},
  pages = { 363 - 370},
  month = {april},
  abstract = { As more and more software projects engage agile methods, there are
	emerging patterns of success and failure. With growing adoption of
	agile methods, project managers increasingly need to understand the
	applicability to their projects and factors that drive key project
	performance characteristics. While some organizations affirm that
	agile methods solve all their problems, few have shown consistent
	success over a range of typical software projects. Agile methods
	have advantages, especially in accommodating change due to volatile
	requirements. However, they also present concomitant risks with managing
	the many dependent pieces of work distributed across a large project.
	Use of agile methods therefore presents a set of tradeoffs. This
	paper examines the impact of agile methods on the people involved
	in a project, the process under which a project is developed, and
	on the project itself in an attempt to allow project managers to
	evaluate the applicability using an agile method.},
  doi = {10.1109/ECBS.2005.68},
  keywords = { agile methods; risk management; software project management; formal
	specification; project management; risk management; software development
	management;}
}

@INPROCEEDINGS{1409928,
  author = {Dalcher, D. and Benediktsson, O. and Thorbergsson, H.},
  title = {Development life cycle management: a multiproject experiment},
  booktitle = {Engineering of Computer-Based Systems, 2005. ECBS '05. 12th IEEE
	International Conference and Workshops on the},
  year = {2005},
  pages = { 289 - 296},
  month = {april},
  abstract = { A variety of life cycle models for software systems development are
	generally available. However, it is generally difficult to compare
	and contrast the methods and very little literature is available
	to guide developers and managers in making choices. Moreover in order
	to make informed decisions developers require access to real data
	that compares the different models and the results associated with
	the adoption of each model. This paper describes an experiment in
	which fifteen software teams developed comparable software products
	using four different development approaches (V-model, incremental,
	evolutionary and extreme programming). Extensive measurements were
	taken to assess the time, quality, size, and development efficiency
	of each product. The paper presents the experimental data collected
	and the conclusions related to the choice of method, its impact on
	the project and the quality of the results as well as the general
	implications to the practice of systems engineering project management.},
  doi = {10.1109/ECBS.2005.32},
  keywords = { V-model development; development life cycle management; evolutionary
	development; experimental data collection; extreme programming; incremental
	development; project management; software systems development; programming;
	project management; software development management;}
}

@INPROCEEDINGS{4031208,
  author = {Lea Kutvonen and Janne Metso and Sini Ruohomaa},
  title = {From trading to eCommunity population: Responding to social and contractual
	challenges},
  booktitle = {Enterprise Distributed Object Computing Conference, 2006. EDOC '06.
	10th IEEE International},
  year = {2006},
  pages = {199 -210},
  month = {oct. },
  __markedentry = {[kimi:2]},
  abstract = {The emergence of networked eBusiness and the wave of service-oriented
	computing facilities create new challenges for automating inter-enterprise
	business process management and eContracting. This development leads
	to strategical benefits for agile enterprises, but also to new challenges
	on enterprise system architectures and platforms. This paper discusses
	the techniques of introducing trust-related decisions into eContracting,
	and their effects. This work enhances the web-Pilarcos project results
	on B2B interoperability middleware; the architectural model supported
	comprises of autonomous business services forming loosely-coupled,
	eContract-governed eCommunities},
  doi = {10.1109/EDOC.2006.30},
  excludekimi = {abstract},
  issn = {1541-7719},
  keywords = {agile enterprises;eCommunity population;eContracting;enterprise system
	architecture;enterprise system platform;interenterprise business
	process management;networked eBusiness;service-oriented computing;trust-related
	decision;contracts;electronic commerce;security of data;social aspects
	of automation;}
}

@INPROCEEDINGS{4634742,
  author = {Schacher, M.},
  title = {Integrated Enterprise Modelling Based on OMG Specifications},
  booktitle = {Enterprise Distributed Object Computing Conference, 2008. EDOC '08.
	12th International IEEE},
  year = {2008},
  pages = {xxvii},
  month = {sept.},
  __markedentry = {[kimi:2]},
  abstract = {A solid business model (describing the business strategy, a business
	vocabulary, business rules as well as business processes) plays an
	essential role when building an IT-architecture for agile enterprises.
	Recently the object management group (OMG) has developed a set of
	specifications that standardize such business models. This presentation
	briefly introduces the OMG specifications business motivation model
	(BMM), semantics of business vocabularies and rules (SBVR), business
	process modeling notation (BPMN) and organization structure metamodel
	(OSM). Then, by means of further OMG specifications, such as executable
	UML (xUML), Systems Modelling Language (SysML) and model driven architecture
	(MDA) it is shown, how such business models may be transformed into
	a SOA-based IT-landscape.},
  doi = {10.1109/EDOC.2008.67},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {1541-7719},
  keywords = {OMG specifications;SOA-based IT-landscape;agile enterprises;business
	motivation model;business process modeling notation;executable UML;integrated
	enterprise modelling;model driven architecture;object management
	group;organization structure metamodel;semantics of business vocabularies
	and rules;systems modelling language;Unified Modeling Language;business
	data processing;corporate modelling;object-oriented methods;software
	architecture;}
}

@INPROCEEDINGS{1231612,
  author = {Henningsson, K. and Birath, T. and Molin, P.},
  title = {A fault-driven lightweight process improvement approach},
  booktitle = {Euromicro Conference, 2003. Proceedings. 29th},
  year = {2003},
  pages = { 343 - 350},
  month = {sept.},
  abstract = { Process improvement is of high importance and with crucial impact
	on business and prosperity for software developing companies. The
	requirements on software are that it needs to be produced faster,
	cheaper and with higher quality. A recent trend in software development
	is the use of agile methods. The general idea of more lightweight
	approaches can also be applied to process improvement. The authors
	describe a fault-driven lightweight process improvement approach
	to be used between projects. The objective is to decrease the number
	of faults and hence shorten the project lead-time. The fault-driven
	process improvement approach sets focus on business requirements
	and relevance for the company associated. We discuss the need for
	a lightweight approach and introduce a lightweight process improvement
	method. It also reports on some findings from an industrial study
	and presents some conclusions.},
  doi = {10.1109/EURMIC.2003.1231612},
  excluded = {Kimi, title},
  issn = {1089-6503},
  keywords = { fault deduction; fault-driven lightweight process improvement method;
	software developing companies; software development management; software
	fault tolerance; software process improvement;}
}

@INPROCEEDINGS{1231599,
  author = {Abrahamsson, P.},
  title = {Extreme programming: first results from a controlled case study},
  booktitle = {Euromicro Conference, 2003. Proceedings. 29th},
  year = {2003},
  pages = { 259 - 266},
  month = {sept.},
  __markedentry = {[kimi:2]},
  abstract = { Extreme programming (XP) is the most well known agile software development
	method. Many experience reports have been published in recent years.
	Successful XP adoptions have however been criticized for the lack
	of concrete data. While some exist, the studies are often difficult
	to compare due to different settings and the varying level of XP
	adoption. We report the first result (concrete data from 2/5 releases)
	from a controlled extreme programming case study. Four software engineers
	were acquired to implement a system in a tight delivery schedule
	of eight weeks. Development environment was close to the agile home
	ground. A comparison of the collected data from the first two releases
	is provided. Analysis shows that while the first release is a learning
	effort for all stakeholders, the second release shows clear improvement
	in all regards, e.g., estimation accuracy is improved by 26%, productivity
	was increased by 12 locs/hour and yet the post-release defect rate
	remained low, i.e., 2.1 defects/KLoc.},
  doi = {10.1109/EURMIC.2003.1231599},
  excludekimi = {abstract},
  issn = {1089-6503},
  keywords = { extreme programming; software development method; software engineering;
	software engineering;}
}

@INPROCEEDINGS{1231600,
  author = {Auer, M. and Tschurtschenthaler, T. and Biffl, S.},
  title = {A flyweight UML modelling tool for software development in heterogeneous
	environments},
  booktitle = {Euromicro Conference, 2003. Proceedings. 29th},
  year = {2003},
  pages = { 267 - 272},
  month = {sept.},
  __markedentry = {[kimi:2]},
  abstract = { A large and growing variety of tools can support all kinds of UML
	modeling aspects: from model creation to advanced round-trip engineering
	of UML models and code. However, such tools aim at supporting specific
	life-cycle phases, but they often do not meet basic requirements
	arising in heterogeneous environments, UML education, early life-cycle
	phases, or agile processes: hassle-free tool deployment, support
	for fast model sketching, and flexible graphic export features. We
	present the freely available modeling tool UMLet we designed to specifically
	address these basic issues. It is a flyweight Java application that
	can easily be deployed in various development environments; it features
	an intuitive and pop-up-free user interface, while still providing
	output to common high-quality publishing formats. Thus, the tool
	UMLet provides an effective way to teach UML and to create and share
	UML sketches, especially in agile environments and during early life-cycle
	phases. Its user interface supports intuitive and exploratory modeling,
	its architecture makes distribution and deployment cost-efficient
	in heterogeneous environments.},
  doi = {10.1109/EURMIC.2003.1231600},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {1089-6503},
  keywords = { Java; UML modelling tool; formal specification; heterogeneous environment;
	life-cycle phase; software development; software engineering; specification
	languages; user interface; Java; formal specification; software engineering;
	specification languages;}
}

@INPROCEEDINGS{1333388,
  author = {Melnik, G. and Maurer, F.},
  title = {Introducing agile methods: three years of experience},
  booktitle = {Euromicro Conference, 2004. Proceedings. 30th},
  year = {2004},
  pages = { 334 - 341},
  month = {aug.-3 sept.},
  abstract = { The work summarizes three years of experience of introducing agile
	practices in academic environments. The perceptions of students from
	four different academic programs (Diploma, Applied Bachelor's, Bachelor's
	and Master's) from two institutions are analyzed. Specifically, pair
	programming, test-driven development and project planning using the
	planning game were studied in detail. Overwhelmingly, students' experiences
	are positive and their opinions indicate the preference to continue
	to use agile practices if allowed. No major problems with agile techniques
	appeared in the evaluation contexts and benefits in these contexts
	have been seen.},
  doi = {10.1109/EURMIC.2004.1333388},
  issn = {1089-6503 },
  keywords = { academic programs; agile practices; pair programming; project planning
	game; test-driven development; computer science education; courseware;
	educational courses; educational institutions; project management;
	software development management;}
}

@INPROCEEDINGS{6083165,
  author = {Yilmaz, Seda Gunes and Tarhan, Ayca},
  title = {Systematic analysis of the incremental process as a base for comparison
	with the Agile process},
  booktitle = {Evaluation Assessment in Software Engineering (EASE 2011), 15th Annual
	Conference on},
  year = {2011},
  pages = {86 -90},
  month = {april},
  __markedentry = {[kimi:2]},
  abstract = {Background: The number of studies that quantitatively reveal the effect
	of using Agile models on development performance is scarce. Aim:
	In this paper, we explain the analysis of a plan-driven, Incremental
	Process within Siemens EC, carried out to understand its performance
	as a base for the comparison with the Agile Process. Method: We introduce
	a method to systematically analyze a software development process
	to understand its performance quantitatively, and explain the application
	of the method on the System Test phase of the Incremental Process.
	Results: The utilization of the analysis method practically contributed
	to the implementation which was completed in 8 person-days. An analysis
	of derived measure values indicated that there was no outlier value
	in the interval of mean #x00B1; 3 standard deviation for the measures.
	Conclusions: We expect that the method will be more beneficial in
	capturing the context of the Agile Process and its measures.},
  doi = {10.1049/ic.2011.0010},
  excluded = {Kimi, title},
  excludekimi = {abstract}
}

@INPROCEEDINGS{5673161,
  author = {Matsuo, K. and Anzawa, S.},
  title = {Work in progress - Project practices of agile software development
	for undergraduate students},
  booktitle = {Frontiers in Education Conference (FIE), 2010 IEEE},
  year = {2010},
  pages = {S2D-1 -S2D-2},
  month = {oct.},
  abstract = {As information system becomes core infrastructure of our society,
	the size and complexity of software products increase rapidly. So
	dependable and efficient software development methods are demanded
	and new methods such as an agile method are introduced. It is, however,
	not easy to teach and excise processes of software development. Most
	of undergraduate students in computer and software engineering courses
	are busy for mastering basic programming skills and for understanding
	computer and DB systems. There is almost no room for learning skills
	for software development in Japan. There are, however, always some
	percentages of students who can easily master basic skills and knowledge
	and are ready to learn more. So we decided to start a project practices
	as an extracurricular activity. The project is aimed for students
	to learn an agile method and actual experiences of group development
	processes. In this presentation we report our work in progress of
	extracurricular activities for project practices of agile software
	development to highly-motivated undergraduate students.},
  doi = {10.1109/FIE.2010.5673161},
  excluded = {Kimi, title},
  issn = {0190-5848},
  keywords = {agile software development;basic programming skills;information system;software
	engineering courses;software products;undergraduate students;computer
	science education;software development management;}
}

@INPROCEEDINGS{4418120,
  author = {Rahman, S.M.},
  title = {Applying the TBC method in introductory programming courses},
  booktitle = {Frontiers In Education Conference - Global Engineering: Knowledge
	Without Borders, Opportunities Without Passports, 2007. FIE '07.
	37th Annual},
  year = {2007},
  pages = {T1E-20 -T1E-21},
  month = {oct.},
  __markedentry = {[kimi:1]},
  abstract = {In our research, we have introduced and implemented a new software
	development method, testing before coding (TBC), to bring in the
	benefits of using software development lifecycle in computer programming
	and improved students program quality. TBC follows the basic concept
	of agile method (such as test-driven development, TDD) and makes
	students a "cultural shift" in developing their computer programs
	i.e., students must test their own codes and consider testing as
	an indispensable part of program development. Our method has been
	exercised in the introductory computer programming courses and has
	improved the students' programs quality at least 24%.},
  doi = {10.1109/FIE.2007.4418120},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0190-5848},
  keywords = {agile method;cultural shift;introductory computer programming course;program
	development;software development lifecycle;software quality;software
	testing;students program quality;testing before coding;computer science
	education;educational courses;program testing;software quality;}
}

@INPROCEEDINGS{4720503,
  author = {Bergandy, J.},
  title = {Work in progress - software engineering capstone project with Rational
	Unified Process (RUP)},
  booktitle = {Frontiers in Education Conference, 2008. FIE 2008. 38th Annual},
  year = {2008},
  pages = {S4J-1 -S4J-2},
  month = {oct.},
  abstract = {Any credible software engineering program must thrive to connect college
	education with the realities of commercial software development.
	In most cases, the study of software processes takes place in the
	lecture halls but it is not practiced in student projects. Students
	graduate into the commercial world driven by software and business
	processes without any hands-on experience and thus without an in-depth
	understanding of the significance of a process to the industrial
	setting. In order to close this gap, we have chosen to use a commercial
	grade process framework: Rational Unified Processreg (RUP) for the
	backbone of our newly introduced software engineering capstone project.
	The capstone project is required for all students and offered through
	the senior year of our ABET-accredited BS in computer science program.
	In our opinion, this will prepare students better for the competitive
	job market.},
  doi = {10.1109/FIE.2008.4720503},
  excluded = {Kimi, title},
  issn = {0190-5848},
  keywords = {RUP;Rational Unified Process;capstone project;college education;commercial
	grade process framework;computer science program;software development;software
	engineering;student project;computer science education;project management;software
	engineering;}
}

@INPROCEEDINGS{5350404,
  author = {Pinto, L. and Rosa, R. and Pacheco, C. and Xavier, C. and Barreto,
	R. and Lucena, V. and Caxias, M. and Figueiredo, C.M.},
  title = {On the use of SCRUM for the management of practcal projects in graduate
	courses},
  booktitle = {Frontiers in Education Conference, 2009. FIE '09. 39th IEEE},
  year = {2009},
  pages = {1 -6},
  month = {oct.},
  __markedentry = {[kimi:1]},
  abstract = {The premises considered by this work are that projects development
	in graduate courses is important for knowledge consolidation. However,
	one of the problems is that, usually, students are not prepared to
	manage and to be managed. This situation causes higher effort waste
	and is time-consuming. Additionally, the quality is decreased due
	to poor self-management and inadequate division of activities. Such
	problems can be minimized if there is a management policy that provides
	a wider vision of the project's course, allowing the problems to
	be anticipated in such a way as to correct the flaws as soon as possible.
	This work proposes the adaptation of the SCRUM Agile Project Management
	Methodology in the context of the development of academic projects,
	both in undergraduate and graduate courses, where students are organized
	in small teams and execute the project in a systematic way. This
	method was applied during the practical part of the Â¿real-time systemsÂ¿
	course, whose project was the development of an automated industrial
	production line with robot arms, using the LEGO NXT robotic kit.
	Therefore, this paper will show implementation aspects of the proposed
	method, difficulties and solutions, which parts of Scrum were effectively
	adopted and, specially, the learnt lessons.},
  doi = {10.1109/FIE.2009.5350404},
  excluded = {Verify (Kimi)},
  excludekimi = {title},
  issn = {0190-5848},
  keywords = {LEGO NXT robotic kit;SCRUM agile project management methodology;academic
	project;automated industrial production line;knowledge consolidation;management
	policy;project development;real-time system course;undergraduate
	course;computer science education;continuing education;educational
	courses;project management;real-time systems;software development
	management;}
}

@INPROCEEDINGS{4117040,
  author = {Arakawa, S. and Yukita, S.},
  title = {An Effective Agile Teaching Environment for Java Programming Courses},
  booktitle = {Frontiers in Education Conference, 36th Annual},
  year = {2006},
  pages = {13 -18},
  month = {oct.},
  __markedentry = {[kimi:1]},
  abstract = {This paper proposes an effective agile teaching environment with a
	new educational testing framework for especially Java programming
	courses. The testing framework is developed on top of JUnit that
	runs on the Eclipse platform. The deployed testing programs detect
	errors in the student's code, and then report points lost due to
	mistakes, and give suitable pieces of advice to correct or improve
	the code immediately. With automated testing the students can check
	the validity of their code by themselves. This means that the instructor
	can concentrate on mentoring the students who are most in need of
	support and advice. Our proposed method also ensures the evaluation
	of assignments to be fair and strict by applying various well-behaved
	input patterns based on standard software testing techniques while
	saving time. With our testing framework, students are continuously
	aware of their progress under a game-like environment, and thereby
	they keep concentrating on their given tasks},
  doi = {10.1109/FIE.2006.322534},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0190-5848},
  keywords = {Eclipse platform;JUnit;Java programming courses;agile teaching environment;distance
	learning;educational testing;software testing;student automated testing;Java;computer
	science education;educational courses;object-oriented programming;program
	testing;}
}

@INPROCEEDINGS{1158141,
  author = {Jovanovic, V. and Murphy, T. and Greca, A.},
  title = {Use of extreme programming (XP) in teaching introductory programming},
  booktitle = {Frontiers in Education, 2002. FIE 2002. 32nd Annual},
  year = {2002},
  volume = {2},
  pages = { F1G-23 vol.2},
  abstract = { This work was motivated by the possibility of improving success rates
	in introductory programming courses by adapting approaches like extreme
	programming (XP). Specifically, to identify the practices in XP that
	enhance learning. The authors hoped that experience with XP, at an
	early stage, would improve both student motivation and interest in
	the profession. This paper reports findings of several instructors,
	with more than 200 students, over one academic year.},
  doi = {10.1109/FIE.2002.1158141},
  excluded = {Kimi, title},
  issn = {0190-5848},
  keywords = { extreme programming; instructors; introductory programming teaching;
	programming courses; students; computer science education; educational
	courses; programming; teaching;}
}

@INPROCEEDINGS{1265946,
  author = {Reichlmayr, T.},
  title = {The agile approach in an undergraduate software engineering course
	project},
  booktitle = {Frontiers in Education, 2003. FIE 2003 33rd Annual},
  year = {2003},
  volume = {3},
  pages = { S2C - 13-18 vol.3},
  month = {nov.},
  __markedentry = {[kimi:1]},
  abstract = { The rise in popularity of agile software development methodologies
	such as extreme programming (XP), crystal, DSDM and feature-driven
	development has opened an opportunity for the software engineering
	education community. How can one capitalize on the strengths of agile
	development models while still appealing to established software
	engineering practices? The typical introductory software engineering
	course makes use of a team-based project to reinforce software process
	activities. The project normally runs for one academic term during
	which students are led through life-cycle activities using a modified
	waterfall approach to software development. While useful in teaching
	software engineering process concepts, this approach limits the team's
	ability to utilize feedback from downstream process activities. It
	also limits the students' opportunity to understand process improvement
	from their own experiences. The ability to respond to project change
	is also dampened by the fact that teams do not have the time or resources
	in this format to modify, or refactor the design of a project component
	let alone incorporate a new or modified customer requirement. Agile
	methodologies promote an evolutionary approach to development using
	short incremental release cycles. We report on the experiences of
	conducting a team project in an introductory software engineering
	course using agile development techniques at the Rochester Institute
	of Technology. Teams have the opportunity to experience multiple
	iterations of the software engineering life cycle and evolve a product
	design that allows for discoveries made during implementation and
	through the introduction of changing customer requirements. The project
	integrates the concept of test-driven development. This agile technique
	addresses testing early in the development process and reinforces
	the value of unit testing. The incorporation of agile techniques
	is not only useful for students in an introductory course, but may
	also be applied to upper division software engineering courses.},
  doi = {10.1109/FIE.2003.1265946},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0190-5848},
  keywords = { Rochester Institute of Technology; agile development models; downstream
	process activit; software development; software engineering education
	community; team-based project; test-driven development; undergraduate
	software engineering course project; computer science education;
	educational courses; software engineering;}
}

@INPROCEEDINGS{5773127,
  author = {Alkhatib, G. and Maamar, Z. and Issa, G. and Daoud, D. and Turani,
	A. and Zaroor, M.I.},
  title = {Incorporating innovative practices in software engineering education},
  booktitle = {Global Engineering Education Conference (EDUCON), 2011 IEEE},
  year = {2011},
  pages = {136 -141},
  month = {april},
  __markedentry = {[kimi:1]},
  abstract = {Software Engineering (SE) practices deals with business requirements
	that continue to operate in dynamically changing and turbulent environments.
	SE practitioners must confront the business need for persistent innovation
	and build appropriate future workforce culture. Agile software development
	approaches view change from a perspective that reflects today's tumultuous
	business and technology environments. Introducing these innovative
	methodologies, along with the more traditional Capability Maturity
	Model Integration (CMMI) method, in IT departments is a challenging
	task. Such task requires not only technology expertise and knowledge,
	but also the human side of organization, team, and individual readiness
	to accepting such a challenge. To deal with this latter side, the
	paper employs creative thinking processes and the four brain concept.
	In such environment, linking agile methods and CMMI is imperative
	to improving software quality.},
  doi = {10.1109/EDUCON.2011.5773127},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {CMMI method;agile software development;capability maturity model integration;creative
	thinking process;innovative practice;software engineering education;software
	quality;Capability Maturity Model;computer science education;software
	prototyping;software quality;}
}

@INPROCEEDINGS{6063157,
  author = {Hallikainen, M.},
  title = {Experiences on Agile Seating, Facilities and Solutions: Multisite
	Environment},
  booktitle = {Global Software Engineering (ICGSE), 2011 6th IEEE International
	Conference on},
  year = {2011},
  pages = {119 -123},
  month = {aug.},
  abstract = {Changing from a traditional functional Telecom R amp;D Center towards
	a Lean and Agile Software Development R amp;D Center is not only
	changing the way of working. It also makes the change visible through
	re-organization of seating and facilities. The gradual and drastic
	change was made in a large scale organization at two geographically
	separate sites. Due to a long history of own offices, the resistance
	was substantial. The facilities management had to adapt the new needs,
	too. It was not only removing walls but understanding the new concept
	- eight people seated around a common team table sharing everything
	via whiteboards, flip charts and information radiators. Our approach
	is: Coordinated by business, made by facilities management. The journey
	towards Agile communication and collaboration is ongoing. One major
	challenge is collaboration between teams working on the same feature
	in a multisite environment. The paper also describes our current
	solution between the sites.},
  doi = {10.1109/ICGSE.2011.20},
  keywords = {agile facility;agile seating;agile software development R amp;D center;agile
	solution;business coordination;facilities management;functional Telecom
	R amp;D center;large scale organization;lean software development
	R amp;D center;team working;software prototyping;team working;}
}

@INPROCEEDINGS{6063158,
  author = {Prochazka, J. and Kokott, M. and Chmelar, M. and Krchnak, J.},
  title = {Keeping the Spin -- From Idea to Cash in 6 Weeks: Success Story of
	Agile/Lean Transformation},
  booktitle = {Global Software Engineering (ICGSE), 2011 6th IEEE International
	Conference on},
  year = {2011},
  pages = {124 -130},
  month = {aug.},
  abstract = {Lean and Agile courses we provided to our unit in Netherlands encouraged
	our colleagues to start transformation of their business (IT Service
	provisioning). They decided to start with a distributed pilot project
	(including Indian delivery site) and invited us to support the change.
	In six weeks we managed to implement basic Agile practices. This
	increased motivation of people for continuous improvement and led
	to changes to working, staffing and contract models. This all enabled
	more flexible value delivery to customer. We conducted very rapid
	and intensive Agile Crash Course (on-job learning by doing with full-time
	support by skilled coaches) based on principles of Lean Software
	Development. We measured the progress using business driven approach
	(inspired by MCIF). In this presentation we would like to share the
	story, the approach (improving the whole value chain together with
	the customer, following Lean principles, respecting natural human
	behavior) and the challenges.},
  doi = {10.1109/ICGSE.2011.19},
  keywords = {IT service provisioning;Indian delivery site;agile crash course;agile-lean
	transformation;business;continuous improvement;contract model;distributed
	pilot project;flexible value delivery;lean software development;on-job
	learning;staffing;continuous improvement;information technology;project
	management;software development management;}
}

@INPROCEEDINGS{6063153,
  author = {Paasivaara, M.},
  title = {Coaching Global Software Development Projects},
  booktitle = {Global Software Engineering (ICGSE), 2011 6th IEEE International
	Conference on},
  year = {2011},
  pages = {84 -93},
  month = {aug.},
  abstract = {This paper presents a multiple-case study on how three globally distributed
	software development projects from a large Scandinavia-based IT organization
	introduced agile practices with the help of a company internal coaching
	team. The data was gathered by ten semi-structured interviews: we
	interviewed four coaches and six persons from the coached projects.
	We describe how the coaches cooperated with the case projects, helping
	them to adopt agile practices. We present the challenges the projects
	faced, as well as the benefits they gained. Our results show that
	when coaching globally distributed projects it is especially important
	to gain executive support from all the sites, to involve all sites
	in the change process, to build a common vision in a collaborative
	workshop, to invite coaches as early as possible, to aim for a long-term
	coaching relationship, and to remember that the project team owns
	the change, coaches are there just to support the team.},
  doi = {10.1109/ICGSE.2011.33},
  keywords = {Scandinavia-based IT organization;agile practice;collaborative workshop;globally
	distributed software development project;internal coaching team;semistructured
	interview;computer science education;distributed processing;project
	management;software management;software prototyping;}
}

@INPROCEEDINGS{6337366,
  author = {Penttinen, M. and Mikkonen, T.},
  title = {Subcontracting for Scrum Teams: Experiences and Guidelines from a
	Large Development Organization},
  booktitle = {Global Software Engineering (ICGSE), 2012 IEEE Seventh International
	Conference on},
  year = {2012},
  pages = {195 -199},
  month = {aug.},
  abstract = {Agile methods and Scrum especially have drawn the attention of large
	software industry. Whilst originally accepted as a way of working
	for small companies and teams, more and more of the large organizations
	have adopted the Scrum method as their primary vehicle for delivering
	value to their customers. This transformation is not always without
	difficulties, however. One particular issue is that large organizations
	seldom develop software on their own but rather typically use massive
	amounts of subcontractors and their subcontractors to meet the sky-rocketing
	demand for new software. Only few experiences have been reported
	on how agile teams in a large organization succeed when they are
	networked with hundreds of different subcontractors distributed in
	global development space. This paper reports experiences based on
	5 years of practicing Scrum together with subcontractors. Results
	reveal that often the agile team's performance is significantly hurt
	by having non-agile subcontractors participating to the development
	and that frameworks used for defining contracting structures are
	far behind from today's needs, leading to many problems in practice.},
  doi = {10.1109/ICGSE.2012.16},
  keywords = {agile development;agile methods;large development organization;large
	software industry;project management;scrum method;scrum teams;sky-rocketing
	demand;subcontracting;DP industry;organisational aspects;project
	management;software prototyping;subcontracting;}
}

@INPROCEEDINGS{6337395,
  author = {Noordeloos, R. and Manteli, C. and van Vliet, H.},
  title = {From RUP to Scrum in Global Software Development: A Case Study},
  booktitle = {Global Software Engineering (ICGSE), 2012 IEEE Seventh International
	Conference on},
  year = {2012},
  pages = {31 -40},
  month = {aug.},
  abstract = {In this paper we present the results of a case study at two offshore
	projects that recently adopted the agile way of working. We analyze
	their multi-site governance activities adopted and adjusted based
	on the Scrum methodology. Furthermore, we identify those changes
	that the Scrum adoption brought, in comparison with the previous
	governance structure of the Rational Unified Process (RUP). We find
	that a transition from RUP to Scrum brings a positive effect in requirements
	engineering, communication, cost management and cross-functionality
	of the distributed teams. We also observe a negative change with
	regard to the development pace and delivery time. Overall, we add
	to the body of knowledge in the field of distributed agile, with
	an additional field study where we describe and compare the migration
	from RUP to Scrum, and the implications of this transition.},
  doi = {10.1109/ICGSE.2012.11},
  keywords = {Body of Knowledge;RUP;Rational Unified Process;Scrum methodology;cost
	management;cross-functionality;delivery time;development pace;distributed
	agile team communication;global software development;multisite governance
	activities;negative change;offshore projects;positive change;requirements
	engineering;groupware;project management;software engineering;software
	management;}
}

@INPROCEEDINGS{6337325,
  author = {Kroll, J. and Audy, J.L.N.},
  title = {Follow-the-Sun Strategy: A Process for Global Software Development},
  booktitle = {Global Software Engineering Workshops (ICGSEW), 2012 IEEE Seventh
	International Conference on},
  year = {2012},
  pages = {76 -78},
  month = {aug.},
  __markedentry = {[kimi:2]},
  abstract = {Follow-the-Sun (FTS) is a strategy in Global Software Development
	(GSD) focusing on software development twenty-four hours, seven days
	per week with physically distributed teams. Many companies have tried
	to implement FTS strategy, but have abandoned it after some point
	because of the difficulty to put it into practice. Thus, this article
	aims to presents a research plan for developing a software process
	inspired in the practices from agile methodologies, to support the
	adoption of the FTS strategy in GSD environments.},
  doi = {10.1109/ICGSEW.2012.15},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {FTS strategy;GSD;agile methodologies;follow-the-sun strategy;global
	software development;physically distributed teams;software process;distributed
	processing;software prototyping;}
}

@INPROCEEDINGS{6337315,
  author = {da Silva Estacio, B.J.},
  title = {Development of a Set of Best Practices for Distributed Pair Programming},
  booktitle = {Global Software Engineering Workshops (ICGSEW), 2012 IEEE Seventh
	International Conference on},
  year = {2012},
  pages = {33 -34},
  month = {aug.},
  abstract = {This paper presents a research idea related to the use of Pair Programming
	in the context of Distributed Software Development. Organizations
	have been distributing their software development activities around
	the world for over a decade now which requires distributed teams
	to work together to achieve the project goal. Agile methods have
	been recently adopted by software engineers aiming to provide faster
	and more valuable results to the customer by fostering face-to-face
	communication, rapid response to changes, among others. Despite sounding
	contradicting, it has been claimed that distributed software development
	have been adopting agile methods as a strategy to make distributed
	teams more productive. Pair programming is one of the agile practices
	used in such context. It has been argued that pair programming in
	distributed software development contributes to increase the product
	quality and the productivity. For this reason, the goal of this idea
	proposal is to understand the advantages and challenges of Distributed
	Pair Programming, and to develop a set of best practices to facilitate
	its adoption.},
  doi = {10.1109/ICGSEW.2012.8},
  excluded = {Kimi, title},
  keywords = {agile method;distributed pair programming;distributed software development;distributed
	team;face-to-face communication;product quality;productivity;software
	development activity;productivity;programming;software development
	management;software prototyping;team working;}
}

@INPROCEEDINGS{4031773,
  author = {Marcelo Blois Ribeiro and Ricardo M. Czekster and Thais Webber},
  title = {Improving Productivity of Local Software Development Teams in a Global
	Software Development Environment},
  booktitle = {Global Software Engineering, 2006. ICGSE '06. International Conference
	on},
  year = {2006},
  pages = {253 -254},
  month = {oct. },
  abstract = {New guidelines and methods for teams and organizational structures
	are crucial to improve efficiency and scalability for globally distributed
	software development. Our work introduces a simplified process to
	be used by local teams working globally. The process is derived from
	the Agile Unified Process proposal and is highly centered in team
	motivation using game principles},
  doi = {10.1109/ICGSE.2006.261246},
  keywords = {Agile Unified Process;efficiency;game principle;globally distributed
	software development;local software development team;organizational
	structure;productivity;scalability;team motivation;personnel;software
	development management;team working;}
}

@INPROCEEDINGS{4031749,
  author = {Maria Paasivaara and Casper Lassenius},
  title = {Could Global Software Development Benefit from Agile Methods?},
  booktitle = {Global Software Engineering, 2006. ICGSE '06. International Conference
	on},
  year = {2006},
  pages = {109 -113},
  month = {oct. },
  abstract = {At first glance, agile methods and global software development might
	seem incompatible. Agile methods stress continuous face-to-face communication,
	whereas communication has been reported as the biggest problem of
	global software development. One challenge to solve is how to apply
	agile practices in settings where continuous face-to-face interaction
	is missing. However, agile methods have been successfully used in
	distributed projects, indicating that they could benefit global software
	development. This paper discusses potential benefits and challenges
	of adopting agile methods in global software development. The literature
	on real industrial case studies reporting on experiences of using
	agile methods in distributed projects is still scarce. Therefore
	we suggest further research on the topic. We present our plans for
	research in companies using agile methods in their distributed projects.
	We also intend to test the use of agile principles in globally distributed
	student projects developing software for industrial clients},
  doi = {10.1109/ICGSE.2006.261222},
  keywords = {agile methods;distributed projects;face-to-face communication;global
	software development;distributed programming;software engineering;}
}

@INPROCEEDINGS{4638670,
  author = {Sureshchandra, K. and Shrinivasavadhani, J.},
  title = {Adopting Agile in Distributed Development},
  booktitle = {Global Software Engineering, 2008. ICGSE 2008. IEEE International
	Conference on},
  year = {2008},
  pages = {217 -221},
  month = {aug.},
  abstract = {Key challenges of finding right skilled resources and the cost arbitrage
	factors have made distributed software development indispensable
	for quite some time now. The success stories of many offshore service
	providers particularly from India underlines the fact that this is
	working well in a "hands-free" mode, especially for projects following
	traditional development life cycles. The recent trend is an increase
	in the number of organizations adopting agile methodologies to tackle
	the challenges of requirements volatility and shorter time to market.
	However, the concept of a collocated team which is central to agile
	does not easily translate to distributed development. This paper
	captures our experience at Wipro in handling Distributed Agile projects.
	We discuss a validated model to make a smooth transition from a collocated
	to a distributed scenario in agile projects. We also share the lessons
	learnt and best practices that we have gained in implementing this
	model.},
  doi = {10.1109/ICGSE.2008.25},
  keywords = {Wipro;agile methodology;distributed software development;software
	project;DP industry;project management;software development management;}
}

@INPROCEEDINGS{5196933,
  author = {Paasivaara, M. and Durasiewicz, S. and Lassenius, C.},
  title = {Using Scrum in Distributed Agile Development: A Multiple Case Study},
  booktitle = {Global Software Engineering, 2009. ICGSE 2009. Fourth IEEE International
	Conference on},
  year = {2009},
  pages = {195 -204},
  month = {july},
  abstract = {Distributed agile development (DAD) has received increasing interest
	both in industry and academia as global software development (GSD)
	is becoming main-stream. However, agile methods and in particular
	agile practices have been designed for collocated software development,
	and are thus not directly applicable to DAD. In this paper, we present
	findings from a multiple case study on agile practices in two small
	and one mid-sized distributed Scrum project. Based on an interview
	study of 19 project team members, we describe how Scrum practices,
	such as daily scrums, backlogs, and sprints were successfully adopted
	to distributed development. We also describe supporting GSD practices
	employed, such as frequent visits and multiple communication modes
	that the projects used. Finally, we depict the challenges and benefits
	the case projects reported, as well as lessons learned from applying
	Scrum in distributed settings.},
  doi = {10.1109/ICGSE.2009.27},
  keywords = {agile practices;collocated software development;distributed Scrum
	project;distributed agile development;global software development;distributed
	processing;software engineering;}
}

@INPROCEEDINGS{591987,
  author = {Yamamichi, N. and Ozeki, T. and Yokochi, K. and Tanaka, T.},
  title = {The evaluation of new software developing process based on a spiral
	modeling},
  booktitle = {Global Telecommunications Conference, 1996. GLOBECOM '96. 'Communications:
	The Key to Global Prosperity},
  year = {1996},
  volume = {3},
  pages = {2007 -2012 vol.3},
  month = {nov},
  abstract = {Conventional software development such as structured programming based
	on the waterfall model has been used for the telecommunication field;
	however, the conventional process has had some problems. Various
	new techniques have been practically introduced into other fields
	such as computer software development. We have discussed the object
	oriented approach based on spiral modeling and its application to
	telecommunication software development. Spiral modeling is a type
	of prototyping},
  doi = {10.1109/GLOCOM.1996.591987},
  keywords = {OO approaches;prototyping;software developing process;spiral modeling;telecommunication
	software development;object-oriented methods;software prototyping;telecommunication
	computing;}
}

@INPROCEEDINGS{4354108,
  author = {Goble, C. and De Roure, D.},
  title = {Grid 3.0: Services, semantics and society},
  booktitle = {Grid Computing, 2007 8th IEEE/ACM International Conference on},
  year = {2007},
  pages = {1},
  month = {sept.},
  __markedentry = {[kimi:2]},
  abstract = {The trend in recent years in distributed computing and distributed
	information systems has been to open up: to expose interfaces and
	content outside the bounds of the originating application, resource
	or middleware; to simplify access to third party resources, data
	and capability; and to actively encourage and support creativity
	through the reuse and combination of already available components
	and content, be they ours or others. The ubiquity of the Service
	Oriented Architecture (SOA) is testament to the driver, in both industry
	and scientific research, for more agile solutions, more rapid development,
	more flexibility and more opportunity for effective use of what has
	gone before. The rise of the web service and its adoption for Grids
	are examples. In the sciences the web service has become established
	as the delivery mechanism for publicly available data sets and tools.
	Designing reusable components and enabling content to be reusable
	is tough; finding it. and correctly understanding and using it is
	even tougher, especially when the consumer is not the producer. Another
	concern is the gap between the infrastructure and resource provider
	and the application developer and user. Infrastructure has no value
	other than to enable applications. In the Grid we seem to have done
	a good job enabling Virtual Organisations of resource providers through
	virtualisation and provisioning.},
  doi = {10.1109/GRID.2007.4354108},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {Grid 3.0;distributed computing;distributed information systems;service
	oriented architecture;web service;Web services;grid computing;software
	architecture;}
}

@INPROCEEDINGS{4439170,
  author = {Fruhling, A. and McDonald, P. and Dunbar, C.},
  title = {A Case Study: Introducing eXtreme Programming in a US Government
	System Development Project},
  booktitle = {Hawaii International Conference on System Sciences, Proceedings of
	the 41st Annual},
  year = {2008},
  pages = {464},
  month = {jan.},
  abstract = {The US Military's ability to meet its mission critical requirements
	calls for increased agility in its information technology development
	process. The purpose of this case study is to better understand how
	agile principles, specifically eXtreme Programming (XP) practices,
	can be effectively introduced and implemented into government organizations
	that have historically embraced the plan-driven traditional software
	development environment. In particular, we studied the eXtreme Programming
	process to develop a new capability for USSTRATCOM's premier knowledge
	management system, SKIWeb. There were several lessons learned that
	will assist practitioners in future implementations of XP and new
	research questions emerged that suggest further study.},
  doi = {10.1109/HICSS.2008.4},
  issn = {1530-1605},
  keywords = {US government system development project;extreme programming;information
	technology development process;knowledge management system;military
	force;plan-driven traditional software development environment;knowledge
	management;military computing;programming;}
}

@INPROCEEDINGS{4439167,
  author = {Benefield, G.},
  title = {Rolling Out Agile in a Large Enterprise},
  booktitle = {Hawaii International Conference on System Sciences, Proceedings of
	the 41st Annual},
  year = {2008},
  pages = {461},
  month = {jan.},
  abstract = {Yahoo! is a large enterprise with a $32 billion market cap and has
	one of the largest Agile implementations in the world. The adoption
	of Scrum and Agile practices has been steadily growing over the past
	two years, and now encompasses more than 150 Yahoo! teams in the
	United States, Europe, and Asia-Pacific. The projects range from
	new product development for properties such as Yahoo! Autos to heavy-duty
	infrastructure work on Yahoo! Mail, which serves 250 million users
	each month around the globe.},
  doi = {10.1109/HICSS.2008.382},
  issn = {1530-1605},
  keywords = {Yahoo!;agile practices;large enterprise;scrum practices;DP industry;Internet;software
	development management;}
}

@INPROCEEDINGS{4439165,
  title = {Minitrack Introduction},
  booktitle = {Hawaii International Conference on System Sciences, Proceedings of
	the 41st Annual},
  year = {2008},
  pages = {459},
  month = {jan.},
  __markedentry = {[kimi:1]},
  abstract = {Agile software development processes have been influenced by best
	practices in Japanese industry, particularly by lean product development
	principles [1] implemented at companies like Honda [2] and Toyota
	[3], and knowledge management strategies developed by Takeuchi and
	Nonaka [4], now at the Hitotsubashi Business School in Japan, and
	Peter Senge [5] at MIT. This minitrack will focus on advancing the
	state of the art or presenting innovative ideas related to agile
	methods, individual practices and tools. Accepted papers will potentially
	enrich the body of knowledge and influence the framework of thought
	in the field by investigating Agile methods in a rigorous fashion.},
  doi = {10.1109/HICSS.2008.280},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1530-1605}
}

@INPROCEEDINGS{4404725,
  author = {Townend, P. and Looker, N. and Dacheng Zhang and Jie Xu and Jianxin
	Li and Liang Zhong and Jinpeng Huai},
  title = {CROWN-C: A High-Assurance Service-Oriented Grid Middleware System},
  booktitle = {High Assurance Systems Engineering Symposium, 2007. HASE '07. 10th
	IEEE},
  year = {2007},
  pages = {35 -44},
  month = {nov.},
  __markedentry = {[kimi:1]},
  abstract = {Service-orientation is a highly useful means of developing flexible,
	agile, and dependable software systems, and is a paradigm that has
	been increasingly adopted into grid computing middleware. However,
	service-orientation brings with it new challenges in the fields of
	dependability and security that need to be addressed by the high
	assurance systems community in order to provide sufficient support
	to enable service- based grid applications to offer non-trivial quality
	of service guarantees. This paper discusses some of the new dependability
	and security challenges introduced by service-orientation, and for
	the first time introduces CROWN-C - a grid middleware system that
	features specific enhancements designed to support the development
	and assessment of highly secure, dependable, service-oriented grid
	systems and applications. The architecture of the new middleware
	is discussed, and the architecture and functionality of each dependability
	and security enhancement is described, alongside the results of experimental
	evaluations of each enhancement. Future work is then discussed.},
  doi = {10.1109/HASE.2007.56},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1530-2059},
  keywords = {CROWN-C;grid computing;security;service-oriented grid middleware system;software
	systems;grid computing;middleware;security;software engineering;}
}

@INPROCEEDINGS{4438180,
  author = {Mashariki, A.R. and Bronner, L.R. and Kazanzides, P.},
  title = {Designing and Developing Medical Device Software Systems Using the
	Model Driven Architecture (MDA)},
  booktitle = {High Confidence Medical Devices, Software, and Systems and Medical
	Device Plug-and-Play Interoperability, 2007. HCMDSS-MDPnP. Joint
	Workshop on},
  year = {2007},
  pages = {156 -159},
  month = {june},
  abstract = {On the surface, model-driven architecture (MDA) appears to be a fundamentally
	new paradigm compared to traditional software development. Upon closer
	examination, however, MDA mainly shifts the focus of iterative development
	to a higher level of abstraction. The traditional waterfall software
	development process (and its variations) dictates that the system
	development be driven by low-level design and coding. This can introduce
	many productivity, maintenance and documentation issues into the
	process. Using the MDA pushes development to a higher level, where
	platform-independent analysis and detailed platform-specific design
	modeling make it easier to trace back to the requirements, thereby
	introducing a more stringent governance over the project. Also, it
	introduces a technology and platform independent standardized development
	process, system interoperability internally as well as the ability
	to provide communication bridges with external systems. The systems
	can be portable, which allows for what the creators of the MDA, the
	object management group (OMG), refer to as "future proofing" of software
	systems. This is the ability to have long-lived models that can be
	applied to any new implementation technologies that will ultimately
	be created and introduced to the software development world. This
	paper seeks to introduce and demystify MDA concepts and features,
	and show how their application can be used to develop highly interoperable
	and robust medical device software systems. In particular, if medical
	devices are designed using the MDA approach, they can quickly be
	adapted to utilize any interoperability (or "plug and play") standard
	that evolves in the future.},
  doi = {10.1109/HCMDSS-MDPnP.2007.26},
  keywords = {medical device software system;model driven architecture;object management
	group;software development;medical computing;open systems;software
	architecture;software portability;}
}

@INPROCEEDINGS{4660194,
  author = {Xin Wang and Maurer, F.},
  title = {Tabletop AgilePlanner: A tabletop-based project planning tool for
	agile software development teams},
  booktitle = {Horizontal Interactive Human Computer Systems, 2008. TABLETOP 2008.
	3rd IEEE International Workshop on},
  year = {2008},
  pages = {121 -128},
  month = {oct.},
  __markedentry = {[kimi:2]},
  abstract = {This paper introduces the Tabletop AgilePlanner, an advanced prototype
	that applies tabletop technology to support collocated and distributed
	agile planning meetings. By introducing the novel tabletop-based
	project planning tool, this paper contributes to the agile and tabletop
	research in threefold: First, it provides real world experience of
	using a digital tabletop to solve practical problems, not just a
	demonstration of tabletop capabilities. Second, it shows a multipart
	usability evaluation that exposes the benefits and limitations of
	using digital tabletop to develop project planning applications.
	Third, it expresses some trade-offs that impact the design of the
	Tabletop AgilePlanner. Since the design experience and trade-offs
	come from a real practice, this paper provides insights into the
	construction of real world tabletop applications.},
  doi = {10.1109/TABLETOP.2008.4660194},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {agile software development team;collocated meeting;distributed agile
	planning meeting;multipart usability evaluation;project planning
	tool;tabletop AgilePlanner;groupware;human computer interaction;software
	prototyping;user interfaces;}
}

@ARTICLE{5512829,
  author = {Ganis, M. and Maximilien, E. M. and Rivera, T.},
  title = {A brief report on working smarter with Agile software development},
  journal = {IBM Journal of Research and Development},
  year = {2010},
  volume = {54},
  pages = {1 -10},
  number = {4},
  month = {july-aug. },
  __markedentry = {[kimi:]},
  abstract = {Agile software development methods have proven to be a substantial
	catalyst for improvements in software quality, speed of delivery,
	and fitness for use, and are a driver behind the IBM Smarter Planet
	#x2122; initiative, which involves intelligent approaches that address
	the needs of a world that is becoming increasingly interconnected
	and instrumented. Software vendors who use a traditional or waterfall
	approach (i.e., sequential software development process) for requirement
	analysis and development often find that they cannot react with sufficient
	speed to meet rapidly changing market demand. As a result, stakeholders
	must wait for the vendor to complete a lengthy development cycle,
	which, when complete, may miss the market window for the software
	or fail to adequately address other needs of these stakeholders.
	Agile development methods, as practiced across geographically diverse
	and broad development teams at IBM, directly address this issue.
	One purpose of this paper is simply to provide a brief high-level
	overview and record of the adoption of these practices and methods
	across a large company, i.e., the IBM Corporation.},
  doi = {10.1147/JRD.2010.2051279},
  issn = {0018-8646}
}

@ARTICLE{5438943,
  author = {Woodward, E. V. and Bowers, R. and Thio, V. S. and Johnson, K. and
	Srihari, M. and Bracht, C. J.},
  title = {Agile methods for software practice transformation},
  journal = {IBM Journal of Research and Development},
  year = {2010},
  volume = {54},
  pages = {3:1 -3:12},
  number = {2},
  month = {march-april },
  abstract = { In a large-scale distributed complex software engineering environment,
	the ability to rapidly evaluate and improve software engineering
	practices can be a key market differentiator. Practices that shorten
	the development cycle, cost-effectively improve quality, and align
	software with customer needs can have a direct impact on the business
	value delivered by the enterprise. The IBM Quality Software Engineering
	(QSE) organization motivates and enables teams across IBM business
	units and geographies to adopt recommended software engineering practices.
	QSE has historically established communities and used well-known
	organizational change management principles to help teams adopt and
	use recommended practices. In 2008 and 2009, QSE discovered that
	blending well-known organizational change management principles with
	agile software development principles enables communities to more
	consistently deliver significant value to their members. QSE Communities
	use Scrum, which is an agile project management framework, to prioritize
	their work on the basis of the communities' needs, plan their work
	every two weeks and then deliver value at the end of every two-week
	Sprint (iteration), demonstrate results, and obtain feedback and
	continuously improve by reflecting and identifying improvement actions
	at the end of each Sprint. Combining Scrum with proven steps to organizational
	change management has allowed QSE to rapidly motivate and enable
	software engineering improvements across IBM. },
  doi = {10.1147/JRD.2009.2038749},
  issn = {0018-8646}
}

@ARTICLE{6353952,
  author = {Massie, J. G. and Davis, W. J.},
  title = {IBM toolkit for radical simplification of business processes},
  journal = {IBM Journal of Research and Development},
  year = {2012},
  volume = {56},
  pages = {3:1 -3:10},
  number = {6},
  month = {nov.-dec. },
  abstract = {Complex global business environments are associated with increasingly
	interconnected economies, societies, and governments. Moreover, the
	proliferation of discrete markets, categories of product offerings,
	and individualized customer segments motivates business leaders to
	drastically simplify their organizations to become more agile in
	exploiting this complexity. Incremental changes are no longer sufficient
	to remain viable in volatile and uncertain environments. Internal
	business processes must undergo radical simplifications that reduce
	cycle time (a measure of responsiveness), cost per transaction (a
	measure of efficiency), and the number of hand-offs (a measure of
	how often work is transferred to another organization or business
	process). IBM defines radical simplification as realizing reductions
	in these measures of 50% or greater. To achieve these goals, IBM
	executives identified the need for a consistent, carefully matched
	set of best-practice methods, techniques, and leading-edge software
	tools, including scenario-based guidance to enable leaders to radically
	simplify their businesses. This paper describes the resulting IBM
	Toolkit for Radical Simplification and includes project case studies
	to demonstrate how the toolkit is being applied to simplify business
	processes for increased speed, agility, and value.},
  doi = {10.1147/JRD.2012.2210337},
  issn = {0018-8646}
}

@ARTICLE{391959,
  author = {DeBellis, M. and Haapala, C.},
  title = {User-centric Software Engineering},
  journal = {IEEE Expert},
  year = {1995},
  volume = {10},
  pages = {34 -41},
  number = {1},
  month = {feb},
  abstract = {The rapid introduction of new technology, a growing number of users,
	and competition from the developing world are all pushing the computer
	industry in new directions. Any nation's software industry that hopes
	to survive as a world-class enterprise must make fundamental challenges
	in the software development process and its supporting development
	environment. The traditional waterfall approach to software development
	focuses on requirements defined early in the process, often releasing
	systems years later that are obsolete on delivery. In the mid-1980's,
	however, programming environments emerged that let developers build
	usable prototypes in days or weeks instead of months or years. These
	capabilities opened the way for alternative approaches to developing
	software. One of the most important results of the ARPA-Rome Planning
	Initiative (ARPI) was the formalization of such a new approach. We
	call it User-Centric Software Engineering. USE represents a synthesis
	of methods advocated and practiced by leaders in the software engineering
	field. The initial aim of USE is to encourage collaboration between
	users and developers to help design more efficient business processes
	and supporting software},
  doi = {10.1109/64.391959},
  issn = {0885-9000},
  keywords = { ARPA-Rome Planning Initiative; business processes; development environment;
	software development process; software engineering field; user-centric
	software engineering; computer aided software engineering; knowledge
	based systems; object-oriented programming; software prototyping;
	software tools; user centred design;}
}

@ARTICLE{159342,
  title = {IEEE Standard Glossary of Software Engineering Terminology},
  journal = {IEEE Std 610.12-1990},
  year = {1990},
  pages = {1},
  month = { },
  __markedentry = {[kimi:1]},
  abstract = {Describes the IEEE Std 610.12-1990, IEEE standard glossary of software
	engineering terminology, which identifies terms currently in use
	in the field of software engineering. Standard definitions for those
	terms are established.<>},
  doi = {10.1109/IEEESTD.1990.101064},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {IEEE Std 610.12-1990;software engineering terminology;standard glossary;glossaries;software
	engineering;standards;}
}

@INPROCEEDINGS{4383683,
  author = {Delest, S. and Bone, R. and Cardot, H.},
  title = {Hierarchical Mesh Segmentation Using Waterfall and Dynamics},
  booktitle = {Image and Signal Processing and Analysis, 2007. ISPA 2007. 5th International
	Symposium on},
  year = {2007},
  pages = {162 -167},
  month = {sept.},
  __markedentry = {[kimi:1]},
  abstract = {Mesh segmentation is a fundamental problem in computer graphics and
	has become an important component in many applications. This paper
	proposes a new hierarchical mesh segmentation method based on waterfall
	and dynamics. Watershed transformation allows segmenting the mesh
	in small patches and dynamics provide information about boundaries
	and merging possibilities. From region and boundary information,
	a hierarchical process based on waterfall is computed in order to
	build the merging tree. This tree contains all the schemes of segmentation
	and the user can easily browse the different levels of segmentation.},
  doi = {10.1109/ISPA.2007.4383683},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1845-5921},
  keywords = {boundary information;computer graphics;hierarchical mesh segmentation
	method;merging tree;waterfall;watershed transformation;image segmentation;trees
	(mathematics);}
}

@INPROCEEDINGS{5565802,
  author = {Tong Shi and Jianbin Chen and JiShun Zhu},
  title = {Study on assessment framework of software process in agile},
  booktitle = {Industrial and Information Systems (IIS), 2010 2nd International
	Conference on},
  year = {2010},
  volume = {1},
  pages = {498 -501},
  month = {july},
  __markedentry = {[kimi:]},
  abstract = {Agility means the capability of operating profitably in a competitive
	environment of continuous and unpredictable changes with software
	process regarded as one of its main method. The research focuses
	on the assessment of software process to support agile. The assessment
	framework is constructed upon a series of competitive bases and agility
	attributes identified in the literature. The framework is validated
	through a survey research instrument, as well analysis with statistical.
	The statistical analysis enabled us to determine the attributes identified
	as predictors for the set of agile software process questions. The
	framework can be presented as a hierarchy like AHP techniques. The
	results will enable the organizer to identify the trends adopted
	by organization in the utilization of agile software process to gain
	competitive predominance.},
  doi = {10.1109/INDUSIS.2010.5565802},
  excluded = {Kimi, title},
  keywords = {AHP technique;agile software process;agility attribute;assessment
	framework;statistical analysis;software process improvement;software
	prototyping;statistical analysis;}
}

@INPROCEEDINGS{4798487,
  author = {Mohan, K.K. and Verma, A.K. and Srividya, A. and Rao, G.V. and Gedela,
	R.K.},
  title = {Early Quantitative Software Reliability Prediction Using Petri-nets},
  booktitle = {Industrial and Information Systems, 2008. ICIIS 2008. IEEE Region
	10 and the Third international Conference on},
  year = {2008},
  pages = {1 -6},
  month = {dec.},
  __markedentry = {[kimi:2]},
  abstract = {In a competitive business landscape, large organizations such as insurance
	companies and banks are under high pressure to innovate, improvise
	and distinguish their products and services while continuing to reduce
	the time-to market for new product introductions. Generating a single
	view of the customer is vital from different perspectives of the
	systems developer over a period of time because of the existence
	of disconnected systems within an enterprise. Therefore, to increase
	revenues and cost optimization, it is important to build enterprise
	systems more closely with the business requirements by reusing the
	existing systems. While building distributed based applications,
	it is important to take into account the proven processes like Rational
	Unified Process (RUP) to mitigate risks and increase the reliability
	of systems. Experiences in developing applications in Java Enterprise
	Edition (JEE) with customized RUP have been presented in this paper.
	RUP is adopted into an onsite-offshore development model along with
	ISO 9001 and SEICMM Level 5 standards. This paper provides an RUP
	approach to achieve increased reliability with higher productivity
	and lower defect density along with competitiveness through cost
	effective custom software solutions. Quantitative software reliability
	prediction is done using Generalized Stochastic Petri Nets, based
	on the RUP implemented prototype obtained from the PoC of a financial
	application prior to the actual implementation of the application
	development.},
  doi = {10.1109/ICIINFS.2008.4798487},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {ISO 9001;Java enterprise edition;SEICMM Level 5 standard;competitive
	business requirement;cost optimization;early quantitative software
	reliability prediction;enterprise system;generalized stochastic Petri
	net;large organization;onsite-offshore development model;rational
	unified process;risk mitigation;Java;Petri nets;business data processing;software
	reliability;stochastic processes;}
}

@INPROCEEDINGS{5646573,
  author = {Akhtar, M.J. and Ahsan, A. and Sadiq, W.Z.},
  title = {Scrum adoption, acceptance and implementation (a case study of barriers
	in Pakistan's IT industry and mandatory improvements)},
  booktitle = {Industrial Engineering and Engineering Management (IE EM), 2010 IEEE
	17Th International Conference on},
  year = {2010},
  pages = {458 -461},
  month = {oct.},
  abstract = {Pakistan's software industry is comparatively young as compared to
	the global software industry. This aspect makes this young industry
	flexible to adopt new project management and software development
	methodologies because the existing methodologies are not mature enough
	therefore any new change does not impose serious threats and / or
	risks to existing operational working style. Scrum is a project management
	approach and is most commonly adopted in the global industry today
	and Pakistan's software industry is also adopting Scrum for acquiring
	utmost benefit from this methodology. The primary rationale of this
	paper is to get an insight into Scrum adoption, implementation and
	acceptance in Pakistan's software industry. Another purpose is also
	to understand how much Scrum is feasible; particularly for Pakistan's
	software industry. Conclusions derived from this research effort
	would be helpful for overall Pakistan's software industry for making
	an accurate decision for Scrum adoption, implementation and acceptance.},
  doi = {10.1109/ICIEEM.2010.5646573},
  keywords = {Pakistan IT industry;Pakistan software industry;Scrum adoption;decision
	making;global industry;project management;serious threat;software
	development methodology;DP industry;decision making;project management;software
	development management;software prototyping;}
}

@INPROCEEDINGS{6118198,
  author = {Bahli, B. and Benslimanne, Y. and Yang, Z.},
  title = {The impact of absorptive capacity on the ex-post adoption of agile
	methods: The case of Extreme Programming model},
  booktitle = {Industrial Engineering and Engineering Management (IEEM), 2011 IEEE
	International Conference on},
  year = {2011},
  pages = {1660 -1664},
  month = {dec.},
  abstract = {Agile development methods have emerged to overcome some of the process
	and product-related problems associated with traditional models.
	They are believed to be lightweight, people focused, adaptive and
	allow better information systems development (ISD) performance. Nevertheless,
	they require a significant capacity of absorbing new set of skills,
	knowledge and mindset changing. When using agile methods IS developers
	are faced with a challenge to quickly assimilate the mindset of these
	new methods and develop the ability to recognize information and
	apply it in context. This paper reports on two ex-post ISD project
	implementation. We integrate a central construct in the dynamic capability
	theory - absorptive capacity to explain agile method adoption and
	usage. The findings show that absorptive capacity, indeed, plays
	an important role in adopting and using agile method-Extreme Programming
	model. The implications of these findings for both researchers and
	practitioners are discussed.},
  doi = {10.1109/IEEM.2011.6118198},
  issn = {2157-3611},
  keywords = {absorptive capacity impact;agile development methods;agile methods;dynamic
	capability theory;expost ISD project implementation;expost adoption;extreme
	programming model;information systems development performance;information
	systems;software prototyping;}
}

@INPROCEEDINGS{5549620,
  author = {Hametner, R. and Winkler, D. and Ostreicher, T. and Biffl, S. and
	Zoitl, A.},
  title = {The adaptation of test-driven software processes to industrial automation
	engineering},
  booktitle = {Industrial Informatics (INDIN), 2010 8th IEEE International Conference
	on},
  year = {2010},
  pages = {921 -927},
  month = {july},
  abstract = {Software components provide an increasing part of added value in automation
	systems and become more complex to construct and test. Test-driven
	development (TDD) of software systems has been successfully used
	for agile development of business software systems. Test cases guide
	the system implementation and can be executed automatically after
	software changes (continuous integration amp; build strategy). However,
	TDD processes need to be adapted to control automation systems engineering,
	where real-world systems are challenging to model and to test automatically.
	In this paper we introduce an adapted TDD process from the business
	software engineering domain to industrial automation engineering.
	We identify a set of UML models that enable the systematic derivation
	of test cases. Based on an initial empirical study we evaluate the
	adapted TDD process based on an industrial use case to identify strength
	and limitation of this approach. Major results of the study were
	that UML models enabled effective test case derivation in the study
	context.},
  doi = {10.1109/INDIN.2010.5549620},
  keywords = {TDD process;UML models;automation systems engineering;business software
	engineering;industrial automation engineering;software component;test
	case;test driven software process;Unified Modeling Language;production
	engineering computing;program testing;software engineering;}
}

@INPROCEEDINGS{5549676,
  author = {Candido, G. and Jammes, F. and de Oliveira, J.B. and Colombo, A.W.},
  title = {SOA at device level in the industrial domain: Assessment of OPC UA
	and DPWS specifications},
  booktitle = {Industrial Informatics (INDIN), 2010 8th IEEE International Conference
	on},
  year = {2010},
  pages = {598 -603},
  month = {july},
  __markedentry = {[kimi:1]},
  abstract = {Service-oriented Architecture (SOA) is increasingly relevant across
	several domains of application by promising systems openness and
	unification over a common design and communication paradigm. At device
	level, the application of SOA is carried, on one hand, by Devices
	Profile for Web Services (DPWS) and complementary web-based specifications
	oriented towards resource management, and, on the other hand, by
	OPC Unified Architecture (OPC UA) framework. These are currently
	the major candidates to be deployed at device level in a service-oriented
	industrial scenario. This document offers an overlook over both approaches,
	along with some complementary WS-* specifications through an extensive
	technical assessment. Also, it illustrates that neither one of these
	specifications can alone entirely cope with the requirements of service-oriented
	industrial domain device level and that a combined approach promises
	to deliver an important contribution. Synergies between the two sets
	of specifications for a more conformant solution are identified,
	and a convergence approach is enunciated in an era where it is imperative
	to avoid unnecessary layers of integration across enterprise infrastructure
	to ensure a more agile, lean and sustainable development.},
  doi = {10.1109/INDIN.2010.5549676},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {DPWS specification;OPC UA specification;OPC unified architecture;devices
	profile for Web services;service-oriented architecture;service-oriented
	industrial scenario;Web services;formal specification;production
	engineering computing;software architecture;}
}

@INPROCEEDINGS{5195867,
  author = {Biffl, S. and Schatten, A. and Zoitl, A.},
  title = {Integration of heterogeneous engineering environments for the automation
	systems lifecycle},
  booktitle = {Industrial Informatics, 2009. INDIN 2009. 7th IEEE International
	Conference on},
  year = {2009},
  pages = {576 -581},
  month = {june},
  __markedentry = {[kimi:2]},
  abstract = {Production systems will become increasingly complex to handle flexible
	business processes and systems. Engineering systems and tools from
	several sources have to cooperate for building agile component-based
	systems. While there are approaches for the technical integration
	of component-based industrial automation systems, there is only little
	work on the effective and efficient integration of engineering tools
	and systems along the automation systems lifecycle. In this paper
	we introduce the concept of the ldquoautomation service busrdquo
	(ASB) based on technical and semantic integration concepts for general
	software engineering tools and systems. Based on real-world use cases
	from automation systems engineering we discuss the state of the art,
	innovation benefits and limitations of the ASB concept, and derive
	research issues for further work.},
  doi = {10.1109/INDIN.2009.5195867},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {1935-4576},
  keywords = {agile component-based systems;automation service bus;automation systems
	lifecycle;component-based industrial automation systems;flexible
	business process;flexible business system;heterogeneous engineering
	environment;innovation;production automation systems;software engineering
	tool;engineering computing;object-oriented programming;software engineering;}
}

@INPROCEEDINGS{983072,
  author = {Sha Lei and Xie Wei and Xu Xiaofei and Zhan Dechen},
  title = {Group decision support system for agile virtual enterprise based
	on mobile agent technology},
  booktitle = {Info-tech and Info-net, 2001. Proceedings. ICII 2001 - Beijing. 2001
	International Conferences on},
  year = {2001},
  volume = {3},
  pages = {292 -297 vol.3},
  __markedentry = {[kimi:1]},
  abstract = {The mobile agent technology is useful for many distributed information
	systems. The use of mobile technology for the design of virtual organization
	group decision support system (VO-GDSS) is introduced in this paper.
	The result of using this system proves that the mobile agent technology
	can help to improve the performance. Furthermore, this technology
	may increase the process of setting up an agile virtual enterprise},
  doi = {10.1109/ICII.2001.983072},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {VO-GDSS;agile virtual enterprise;distributed information systems;group
	decision support system;mobile agent;virtual organization;group decision
	support systems;information systems;manufacturing data processing;software
	agents;virtual reality;}
}

@INPROCEEDINGS{5359191,
  author = {Lazar, I. and Motogna, S. and Parv, B. and Czibula, I.-G. and Lazar,
	C.-L.},
  title = {Rapid Prototyping of Service-Oriented Applications on OSGi Platform},
  booktitle = {Informatics, 2009. BCI '09. Fourth Balkan Conference in},
  year = {2009},
  pages = {217 -222},
  month = {sept.},
  __markedentry = {[kimi:2]},
  abstract = {In this paper we present a rapid prototyping development approach
	for developing service-oriented applications on OSGi platform that
	combines incremental and evolutionary prototyping. Prototypes are
	defined as executable UML models. In order to ensure simple and fast
	definition of UML models, we apply the DRY ("don't repeat yourself'')
	principle and the concept of "convention over configuration'' introduced
	in the context of rapid application development. Update transformations
	in the small may be applied onmodel elements explicitly selected
	by the user in order to rapidily create new model elements based
	on some conventions. During the development the system may contain
	platform independent and platform specific components.This feature
	allows developers to reuse platform specific components when they
	build a new system. Moreover, the approach may also be used when
	they maintain an existing system.},
  doi = {10.1109/BCI.2009.31},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {OSGi platform;UML models;dont repeat yourself principle;evolutionary
	prototyping;incremental prototyping;rapid prototyping;service-oriented
	applications;Unified Modeling Language;software architecture;software
	prototyping;}
}

@INPROCEEDINGS{4530352,
  author = {Omran, A.},
  title = {AGILE CMMI from SMEs perspective},
  booktitle = {Information and Communication Technologies: From Theory to Applications,
	2008. ICTTA 2008. 3rd International Conference on},
  year = {2008},
  pages = {1 -8},
  month = {april},
  abstract = {CMMI has been well accepted by the world as a standard for project
	development process control, quality improvement, and capacity evaluation.
	More and more companies are involved in the CMMI certifications rush.
	However, to most of them, CMMI is a very challenging goal. CMMI becomes
	critical to seek a suitable way to promote the competence of the
	small- and mid-sized companies in worldwide competition. This research
	suggests that small and mid sized companies can adopt Agile Development
	Methodologies (ADM) while following the CMMI standard if obtain a
	new additional values, thus they can get a new competence value in
	their environments.},
  doi = {10.1109/ICTTA.2008.4530352},
  keywords = {CMMI;capacity evaluation;project development process control;quality
	improvement;software development framework;software development management;}
}

@INPROCEEDINGS{4530347,
  author = {Al-Zoabi, Z.},
  title = {Introducing Discipline to XP: Applying PRINCE2 on XP Projects},
  booktitle = {Information and Communication Technologies: From Theory to Applications,
	2008. ICTTA 2008. 3rd International Conference on},
  year = {2008},
  pages = {1 -7},
  month = {april},
  abstract = {Agile methods are increasingly gaining momentum, and more and more
	growing as the market standard for software development. However
	agile methods suffer from the lack of disciplined planning. We will
	try in this paper to see the effect of introducing disciplined project
	management methodology on the flexibility and agility with which
	agile methods are characterized. In this paper we will see the effect
	of using a modified XP, the most well-known and oldest method of
	the agile spectrum, along with PRINCE2 one of the successful management
	methods. In doing so, we will resort to the findings of a real life
	project, which was coached by the author, where a team of eleven
	developers was able to deliver high quality software within budget
	and under strict time constraints. The result was a new method derived
	from both XP and PRINCE2.},
  doi = {10.1109/ICTTA.2008.4530347},
  keywords = {PRINCE2;agile methods;disciplined project management;market standard;planning;software
	development;software quality;agile manufacturing;marketing;production
	planning;project management;software quality;}
}

@INPROCEEDINGS{1609616,
  author = {Bahli, B. and Zeid, E.S.A.},
  title = {The role of knowledge creation in adopting extreme programming model:
	an empirical study},
  booktitle = {Information and Communications Technology, 2005. Enabling Technologies
	for the New Knowledge Society: ITI 3rd International Conference on},
  year = {2005},
  pages = {75 -87},
  month = {dec.},
  abstract = {Throughout the last three decades many processes, tools, and methods
	have been used to structure and bring some order into software development
	processes. One of the most widely understood traditional methods
	is the waterfall life cycle model. Recently, agile development methods
	have emerged to overcome some of the process and product-related
	problems associated with traditional models. They are believed to
	be lightweight, people focused, adaptive and allow knowledge transfer.
	Researchers in the area of knowledge management claimed that the
	knowledge creation process software developers build towards a specific
	mode would lead to its adoption. This paper attempts to integrate
	knowledge creation as a condition of adoption. This paper reports
	on how a Canadian organization shifts its development method from
	the waterfall process to extreme programming model. The findings
	show that the differences outweigh the similarities and caution needs
	to be exercised in adopting either one of two models. Knowledge creation,
	indeed, plays an important role in adopting extreme programming model.
	The implications of these findings for both researchers and practitioners
	are discussed},
  doi = {10.1109/ITICT.2005.1609616},
  keywords = {extreme programming model;knowledge creation;knowledge management;product-related
	problems;software development processes;waterfall life cycle model;knowledge
	management;software development management;}
}

@INPROCEEDINGS{5513837,
  author = {Viet Cuong Nguyen and Qafmolla, X.},
  title = {Agile Development of Platform Independent Model in Model Driven Architecture},
  booktitle = {Information and Computing (ICIC), 2010 Third International Conference
	on},
  year = {2010},
  volume = {2},
  pages = {344 -347},
  month = {june},
  __markedentry = {[kimi:2]},
  abstract = {Along with the growing software market in recent years, business requirements
	are changing more rapidly and the complexity of enterprise applications
	is growing continuously. An ideal goal is to encapsulate these requirements
	into a high-level abstraction, which can be used to drive large-scale
	adaptation of the underlying software implementation. Model Driven
	Engineering (MDE) is one of the enabling techniques that support
	this objective. One of the important parts in this process is the
	creation of Platform Independent Model (PIM). There are several approaches
	on this matter. However there is still the absence of clear documentation
	on the methods especially when the purpose is aimed for generic PIMs
	in a specific domain. This article introduces an approach to developing
	PIMs by using UML, OCL and promotes agility by applying agile modeling
	for this purpose. A practical example will be demonstrated.},
  doi = {10.1109/ICIC.2010.180},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {Object Constraint Language;Unified Modeling Language;agile development;business
	requirements;enterprise applications;high-level abstraction;model
	driven architecture;model driven engineering;platform independent
	model;Unified Modeling Language;software architecture;}
}

@INPROCEEDINGS{1495998,
  author = {Endicott-Popovsky, B. and Seifert, C.},
  title = {Adopting eXtreme programming on a graduate student project},
  booktitle = {Information Assurance Workshop, 2005. IAW '05. Proceedings from the
	Sixth Annual IEEE SMC},
  year = {2005},
  pages = { 454 - 455},
  month = {june},
  __markedentry = {[kimi:]},
  abstract = { This paper discusses a pedagogical process that addresses the problem
	of how to facilitate learning of a relatively new development methodology
	that has a limited base of practitioners to draw from and perhaps
	no faculty with direct experience. This problem is not new to computer
	science faculty. Change in the field is constant and practitioners
	must be learning, continually.},
  doi = {10.1109/IAW.2005.1495998},
  excluded = {Verify (Kimi)},
  keywords = { computer science; eXtreme programming; graduate student project;
	learning; pedagogy; computer science education; continuing professional
	development; educational courses; programming; software engineering;
	teaching;}
}

@INPROCEEDINGS{6114901,
  author = {Gu Hongying and Yang Cheng},
  title = {An Empirical Implementation of Peer Review in Software Development},
  booktitle = {Information Management, Innovation Management and Industrial Engineering
	(ICIII), 2011 International Conference on},
  year = {2011},
  volume = {3},
  pages = {141 -144},
  month = {nov.},
  abstract = {Peer review is one of the most important quality assurance collaborative
	activities in software development processes. It is currently a Key
	Process Area (KPA) in several well known software process models.
	For some small/agile software development teams, it can be hard to
	deploy a whole model into their organizations. Based on our experience,
	we believe peer review can be of great help even if this is the only
	KPA implemented in a team. Therefore, we are proposing a Peer Review
	KPA implementation, which incorporates guidelines, processes, best
	practices, templates, customization and maturity levels. Along with
	a user study, we believe software development teams can benefit from
	the practice no matter which model they are using and which maturity
	level they are in.},
  doi = {10.1109/ICIII.2011.317},
  excluded = {Kimi, title},
  keywords = {agile software development;key process area;peer review;quality assurance
	collaborative activity;software development team;software process
	model;quality assurance;software engineering;}
}

@INPROCEEDINGS{6114662,
  author = {Shen Jinxing},
  title = {Grid-Based University Unstructured Information Resources Management
	Software Infrastructure},
  booktitle = {Information Management, Innovation Management and Industrial Engineering
	(ICIII), 2011 International Conference on},
  year = {2011},
  volume = {2},
  pages = {84 -88},
  month = {nov.},
  __markedentry = {[kimi:2]},
  abstract = {This paper discusses an approach of university unstructured information
	resources management system implementation. Firstly a new idea of
	unstructured information management emphasizing automatic analysis
	is briefly introduced, and then the reasons of using Grid in this
	method are explained. Finally this paper analyzes its system architecture
	and introduces its prototype system in detail. To solve these problems,
	one kind of Grid-based university unstructured information resources
	management software infrastructure is designed. The software infrastructure
	uses Grid technologies to share organization's CPU abilities and
	realize open, agile and integrated information system, uses UIMA
	to integrate unstructured information analysis technologies, and
	insists using intelligent process to increase veracity of information
	analysis.},
  doi = {10.1109/ICIII.2011.168},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {CPU abilities;UIMA;agile information system;grid technologies;grid-based
	university unstructured information resources management;grid-based
	university unstructured information resources software infrastructure;integrated
	information system;intelligent process;open information system;system
	architecture;unstructured information analysis technologies;educational
	administrative data processing;grid computing;information analysis;information
	management;information resources;software prototyping;}
}

@INPROCEEDINGS{6115089,
  author = {Zhai Li-li and Hong Lian-feng and Sun Qin-ying},
  title = {Research on Requirement for High-quality Model of Extreme Programming},
  booktitle = {Information Management, Innovation Management and Industrial Engineering
	(ICIII), 2011 International Conference on},
  year = {2011},
  volume = {1},
  pages = {518 -522},
  month = {nov.},
  __markedentry = {[kimi:2]},
  abstract = {Aiming at the core values of Extreme Programming and the barriers
	to the demand communication process, introducing the two-dimensional
	model characteristics with satisfactory situation of quality characteristics
	and customer satisfaction in Kano model to demand access field of
	software development, it does two-dimensional analysis with the expectation
	requirements of business customer and software development practices
	during the process of software development demand. At same time,
	it explores the demand for high-quality and combines with the original
	features of Extreme Programming to establish the model of Extreme
	Programming demand access. As the result, it reduces non-normal demand,
	improves software quality and user awareness of software products.
	Consequently, lets the software development enter the virtuous cycle
	in the requirement phase, and reduce unnecessary demand changes and
	hidden risks.},
  doi = {10.1109/ICIII.2011.132},
  excludekimi = {abstract},
  keywords = {Kano model;business customer;customer satisfaction;expectation requirements;extreme
	programming demand access;high-quality model;quality characteristics;software
	development practices;software products user awareness;software quality;two-dimensional
	analysis;two-dimensional model characteristics;business data processing;customer
	satisfaction;software prototyping;software quality;}
}

@INPROCEEDINGS{6339685,
  author = {Zaineb, G. and Shaikh, B. and Ahsan, A.},
  title = {Recommended cultural and business practices for project based software
	organization of Pakistan for supporting restructuring of functional
	organization for implementing agile based development framework in
	software projects},
  booktitle = {Information Management, Innovation Management and Industrial Engineering
	(ICIII), 2012 International Conference on},
  year = {2012},
  volume = {1},
  pages = {16 -20},
  month = {oct.},
  abstract = {The recent trend of software industry in Pakistan is a shift to adopt
	agile methodologies for software development. Keeping in view the
	challenges of methodology migration the current research provides
	a comprehensive analysis of structural requirements for project based
	organization to become agile with recommended cultural and business
	practices which can help organization to re-structure from functional
	to agile based projectized.},
  doi = {10.1109/ICIII.2012.6339685},
  excluded = {Kimi, title},
  keywords = {Pakistan;agile based development framework;business practices;cultural
	practices;functional organization;project based software organization;project
	structural requirement comprehensive analysis;software development;software
	industry;software projects;DP industry;cultural aspects;project management;software
	prototyping;}
}

@INPROCEEDINGS{5690032,
  author = {Yuwei Xiong and Ansheng Wang},
  title = {A new combined method for UCD and software development and case study},
  booktitle = {Information Science and Engineering (ICISE), 2010 2nd International
	Conference on},
  year = {2010},
  pages = {1 -4},
  month = {dec.},
  abstract = {The final goal of software development is to deliver an application
	that match user's expectation to a larger extent. In order to understand
	user's requirements more accurately, User Centered Design (UCD) is
	introduced into software development for a while. But this cooperation
	still can't satisfy market-oriented software implementation due to
	problems such as delivery delay and nasty conflicts. As to solve
	the low efficiency of communication between UCDs and developers,
	we bring up this new combined model, Inter-combined Model as we called.
	This model also aims to shorten the knowledge transfer from designers
	to developers. In this paper, we describe the working process of
	Inter-combined Model and illustrate it with a project. Our experience
	confirmed that Inter-combined Model has positive effect on human
	resource arrangement and cost reduction.},
  doi = {10.1109/ICISE.2010.5690032},
  excluded = {Kimi, title}
}

@INPROCEEDINGS{6018712,
  author = {Haque, W. and Demerchant, B.},
  title = {Business Intelligence analytics without conventional data warehousing},
  booktitle = {Information Society (i-Society), 2010 International Conference on},
  year = {2010},
  pages = {278 -284},
  month = {june},
  __markedentry = {[kimi:1]},
  abstract = {The implementation of a Business Intelligence (BI) solution in an
	environment where traditional barriers prohibit incorporating analytics
	in operational and strategic decision making remains challenging.
	The solution must overcome a very tight budget, severe restrictions
	on data access due to security concerns, and a tradition of using
	conventional legacy tools for primary reporting. We propose a method
	that minimizes both the ETL (Extract Transform Load) and data warehousing
	components of the solution and allows for agile development and incremental
	adoption. This is achieved by taking advantage of the organization's
	current legacy reporting structure as the basis and then building
	a BI reporting layer on top for a high level view of the information.
	Our methodology has demonstrated benefits in the form of reduced
	complexity, reduced risk, reduced cost in both time and money, and
	a solution that provides a greater return on investment.},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {BI reporting layer;agile development;business intelligence analytics;conventional
	data warehousing;extract transform load;incremental adoption;legacy
	reporting structure;strategic decision making;competitive intelligence;data
	warehouses;decision making;software maintenance;}
}

@INPROCEEDINGS{6285001,
  author = {Qahtani, A.M. and Wills, G.B. and Gravell, A.M.},
  title = {Toward a framework for the development and specialisation of product
	software across organisational boundaries},
  booktitle = {Information Society (i-Society), 2012 International Conference on},
  year = {2012},
  pages = {391 -395},
  month = {june},
  abstract = {Organisational and cultural boundaries are two of the main important
	aspects of the software development process for distributed customers.
	Many organisations use traditional approaches, such as the Waterfall
	model, to develop software products for different customers. Agile
	software development has departed from traditional approaches, such
	as the Waterfall model. Much research has been conducted on adopting
	agile software development for either distributed or collocated projects.
	However, little research has discussed organisational boundaries
	between developers who use an agile software development approach
	and their customers. The purpose of this paper is to introduce agile
	software development to those organisations that develop software
	products for different distributed customers and also to study the
	potential impact of introducing Agile development across those organisational
	boundaries. We proposed a framework for developing software across
	organisational boundaries. This would ultimately address and accommodate
	key factors in software development across organisational boundaries
	using an agile development approach. This research will help the
	development society and serve as a guide for project managers, developers,
	stakeholders, and users to understand agile software development
	and the impact of adopting an Agile approach across organisational
	and cultural boundaries in their projects.},
  keywords = {agile software development;cultural boundaries;developers;distributed
	customers;organisational boundaries;product software development;product
	software specialisation;project managers;stakeholders;waterfall model;cultural
	aspects;organisational aspects;software prototyping;}
}

@INPROCEEDINGS{5974302,
  author = {Osorio Martinez, Z.B. and Irrazabal, E. and Garzas, J.},
  title = {Toward improving Agile Mantema: Measurement, control and evaluation
	of maintenance projects in SMEs},
  booktitle = {Information Systems and Technologies (CISTI), 2011 6th Iberian Conference
	on},
  year = {2011},
  pages = {1 -6},
  month = {june},
  abstract = {An increasing adoption of agile methodologies in small organizations
	dedicated to software development and maintenance is a reality. An
	agile methodology oriented to the context of maintenance and allows
	the adoption of a quality model is necessary. This methodology must
	consider the capabilities and characteristics of small software organizations
	and the recommendations of a quality model for defining its task
	or activities. The aim of this paper is to describe the improvements
	made to Agile Mantema methodology and its integration with tasks
	and activities of ISO/IEC 12207:2008 standard. This tasks and activities
	are related to measurement and control of maintenance projects. The
	objective is to obtain the maturity level 2 of ISO/IEC 15504-ISO/IEC
	12207:2008 evaluation model in a future. This paper shows the experience
	in a small organization which implanted the proposed improvement
	in its maintenance area. Results demonstrate a good control in maintenance
	projects, agility, formality and simplicity in the methodological
	improvement proposed.},
  keywords = {ISO/IEC 12207:2008 standard;ISO/IEC 15504 standard;SME;agile Mantema;maintenance
	projects;software development;software maintenance;software organizations;IEC
	standards;ISO standards;small-to-medium enterprises;software maintenance;software
	prototyping;software standards;}
}

@INPROCEEDINGS{5974178,
  author = {Neves, F.T. and Correia, A.M.R. and Rosa, V.N. and de Castro Neto,
	M.},
  title = {Knowledge creation and sharing in software development teams using
	Agile methodologies: Key insights affecting their adoption},
  booktitle = {Information Systems and Technologies (CISTI), 2011 6th Iberian Conference
	on},
  year = {2011},
  pages = {1 -6},
  month = {june},
  abstract = {This paper analyses and evaluates the knowledge creation and sharing
	experiences of teams in the Agile software development domain. Over
	a series of three empirical phases a method is developed to evaluate
	the advantages and limitations of Agile practices in knowledge creation
	and sharing for Agile teams. In the first phase, initial issues and
	characteristics concerning agile methodologies were collected with
	a scoping review of the period since the manifesto for Agile software
	development emerged. The second phase represents a hermeneutic analysis
	of the result set obtained in the first phase. Using a SWOT analysis,
	the third phase assesses Agile processes, their relationships with
	knowledge transfer management and their effects on the productivity
	of software development teams. This research offers some key insights
	for decision makers considering the adoption of Agile methodologies
	in software development activities.},
  keywords = {SWOT analysis;agile methodologies;hermeneutic analysis;knowledge creation;knowledge
	sharing;knowledge transfer management;software development;software
	development teams;software engineering;}
}

@INPROCEEDINGS{5561582,
  author = {Seyfi, A. and Patel, A.},
  title = {Briefly introduced and comparatively analysed: Agile SD, component-based
	SE, aspect-oriented SD and Mashups},
  booktitle = {Information Technology (ITSim), 2010 International Symposium in},
  year = {2010},
  volume = {2},
  pages = {977 -982},
  month = {june},
  __markedentry = {[kimi:2]},
  abstract = {This paper compares Agile Methods, Component-Based SE, Aspect-Oriented
	SD, and Mashups as the latest four software development methods.
	These different approaches depend very heavily on the application
	domain. The comparison accordingly gives a brief review of these
	four methodologies, taking their definition, characteristics, advantages
	and disadvantages into consideration and generating a conceptual
	mind-map and preparing the foundation to assist in formulating and
	designing a new integrated software development approach and supportive
	techniques. It is a basis to initiate new research in the software
	engineering subject field.},
  doi = {10.1109/ITSIM.2010.5561582},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {2155-897},
  keywords = {Mashups;agile SD;aspect-oriented SD;component-based SE;software development;aspect-oriented
	programming;software prototyping;}
}

@INPROCEEDINGS{4283799,
  author = {Matijasevic, B. and Roncevic, H. and Orel, O.},
  title = {Agile Software Development Supporting Higher Education Reform},
  booktitle = {Information Technology Interfaces, 2007. ITI 2007. 29th International
	Conference on},
  year = {2007},
  pages = {375 -380},
  month = {june},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ITI.2007.4283799},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1330-1012},
  keywords = {Bologna process;Mozvag;agile software development;higher education
	reform;computer aided instruction;software engineering;}
}

@INPROCEEDINGS{5196100,
  author = {Peixoto, C.},
  title = {Human-computer interface expert system for agile methods},
  booktitle = {Information Technology Interfaces, 2009. ITI '09. Proceedings of
	the ITI 2009 31st International Conference on},
  year = {2009},
  pages = {311 -316},
  month = {june},
  doi = {10.1109/ITI.2009.5196100},
  excluded = {Kimi, title},
  issn = {1330-1012},
  keywords = {agile method;agile software engineering;human-computer interface expert
	system;expert systems;human computer interaction;software engineering;}
}

@INPROCEEDINGS{4151761,
  author = {Oboler, Andre and Sommerville, Ian},
  title = {Research Documentation Guidelines - Capturing knowledge, improving
	research},
  booktitle = {Information Technology, 2007. ITNG '07. Fourth International Conference
	on},
  year = {2007},
  pages = {679 -684},
  month = {april},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ITNG.2007.167},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {agile approach;computer science;dOxygen;research documentation guidelines;software
	modeling;formal specification;system documentation;}
}

@INPROCEEDINGS{5501487,
  author = {Foster, S.R. and Ruiz, R.},
  title = {Constructivist Pedagogy Meets Agile Development A Case Study},
  booktitle = {Information Technology: New Generations (ITNG), 2010 Seventh International
	Conference on},
  year = {2010},
  pages = {1092 -1096},
  month = {april},
  __markedentry = {[kimi:]},
  doi = {10.1109/ITNG.2010.185},
  keywords = {Android platform;NITLE;Tetris-variant;accelerometer-enabled mobile
	phone;agile development;agile software engineering methodology;complex
	engineering tasks;constructivist pedagogy;game programming;inexperienced
	software engineering interns;mobile development;computer aided instruction;computer
	games;computer science education;mobile computing;software engineering;}
}

@INPROCEEDINGS{5945388,
  author = {Xuesong Zhang and Dorn, B.},
  title = {Agile Practices in a Small-Scale, Time-Intensive Web Development
	Project},
  booktitle = {Information Technology: New Generations (ITNG), 2011 Eighth International
	Conference on},
  year = {2011},
  pages = {1060 -1061},
  month = {april},
  doi = {10.1109/ITNG.2011.187},
  keywords = {Scrum;agile development;college-level IT competition;software development;time-intensive
	Web development project;Internet;project management;software prototyping;}
}

@INPROCEEDINGS{6209192,
  author = {Miller, J.R. and Haddad, H.M.},
  title = {Challenges Faced While Simultaneously Implementing CMMI and Scrum:
	A Case Study in the Tax Preparation Software Industry},
  booktitle = {Information Technology: New Generations (ITNG), 2012 Ninth International
	Conference on},
  year = {2012},
  pages = {314 -318},
  month = {april},
  doi = {10.1109/ITNG.2012.53},
  keywords = {CMMI certification;SCAMPI A appraisal;Scrum;The Tax Company Inc;agile
	development practices;agile software company;software organization;tax
	preparation software industry;Capability Maturity Model;DP industry;organisational
	aspects;software prototyping;tax preparation;}
}

@INPROCEEDINGS{6209176,
  author = {Hayata, T. and Jianchao Han and Beheshti, M.},
  title = {Facilitating Agile Software Development with Lean Architecture in
	the DCI Paradigm},
  booktitle = {Information Technology: New Generations (ITNG), 2012 Ninth International
	Conference on},
  year = {2012},
  pages = {343 -348},
  month = {april},
  doi = {10.1109/ITNG.2012.157},
  keywords = {DCI paradigm;agile methodology;agile practice;agile principle;agile
	software development;business-logic feature;data-context-interaction
	paradigm;domain architecture;end-user-focused system design;lean
	architecture;lean methodology;lean practice;lean thinking;organizational
	aspect;software engineering field;system architecture;technical aspect;value-centric
	system design;software architecture;software prototyping;}
}

@INPROCEEDINGS{4492523,
  author = {Khajavinia, R.},
  title = {Notice of Violation of IEEE Publication Principles Managing Process
	Interaction in IS Development Projects},
  booktitle = {Information Technology: New Generations, 2008. ITNG 2008. Fifth International
	Conference on},
  year = {2008},
  pages = {465 -470},
  month = {april},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ITNG.2008.70},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {business change;incremental development approach;information systems
	development projects;iterative development approach;iterative software
	engineering;organizational change process;process interaction;business
	data processing;project management;}
}

@INPROCEEDINGS{4492694,
  author = {Maharmeh, M. and Unhelkar, B.},
  title = {Investigation into the Creation and Application of a Composite Application
	Software Development Process Framework (CASDPF)},
  booktitle = {Information Technology: New Generations, 2008. ITNG 2008. Fifth International
	Conference on},
  year = {2008},
  pages = {1286},
  month = {april},
  doi = {10.1109/ITNG.2008.108},
  excluded = {Kimi, title},
  keywords = {CASDPF;agile methods;composite application software development process
	framework;formal management;formal modeling;project management;software
	application systems;spiral life-cycle model;formal verification;project
	management;software development management;}
}

@INPROCEEDINGS{5070825,
  author = {Srinivasan, J. and Lundqvist, K.},
  title = {Using Agile Methods in Software Product Development: A Case Study},
  booktitle = {Information Technology: New Generations, 2009. ITNG '09. Sixth International
	Conference on},
  year = {2009},
  pages = {1415 -1420},
  month = {april},
  doi = {10.1109/ITNG.2009.334},
  keywords = {GameDevCo;agile method;customer satisfaction;data analysis;end-product
	quality;software evolution;software product development firm;computer
	games;customer satisfaction;software development management;software
	maintenance;software quality;}
}

@INPROCEEDINGS{5070823,
  author = {Shahzad, S.},
  title = {Learning from Experience: The Analysis of an Extreme Programming
	Process},
  booktitle = {Information Technology: New Generations, 2009. ITNG '09. Sixth International
	Conference on},
  year = {2009},
  pages = {1405 -1410},
  month = {april},
  doi = {10.1109/ITNG.2009.299},
  keywords = {agile development methodologies;extreme programming process;mobile
	phones;multimedia streaming;software development process;media streaming;mobile
	handsets;programming theory;software engineering;}
}

@INPROCEEDINGS{5070622,
  author = {Vu, J.H. and Frojd, N. and Shenkel-Therolf, C. and Janzen, D.S.},
  title = {Evaluating Test-Driven Development in an Industry-Sponsored Capstone
	Project},
  booktitle = {Information Technology: New Generations, 2009. ITNG '09. Sixth International
	Conference on},
  year = {2009},
  pages = {229 -234},
  month = {april},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ITNG.2009.11},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {agile development process;industry-sponsored capstone project;production
	code;software engineering capstone course;team motivation;test-driven
	development;test-first methodology;test-last methodology;undergraduate
	students;computer science education;program testing;software engineering;}
}

@INPROCEEDINGS{6102122,
  author = {Garcia, C.M. and Quevedo, J.},
  title = {Agile accelerated aging and degradation characterization of a V/F
	controlled Induction Motor},
  booktitle = {Information, Communication and Automation Technologies (ICAT), 2011
	XXIII International Symposium on},
  year = {2011},
  pages = {1 -8},
  month = {oct.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ICAT.2011.6102122},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {V/F controlled induction motor;accelerated aging test;agile accelerated
	aging;conveyor belt system;fatigue;feature extraction;health management
	methodology;induction motor degradation characterization;skin effect;squirrel
	cage induction motor;thermal stress;thermomechanical stress;ageing;belts;conveyors;fatigue;life
	testing;maintenance engineering;skin effect;squirrel cage motors;thermal
	stresses;}
}

@INPROCEEDINGS{5990566,
  author = {Johnsson, M. and Jennings, B. and Botvich, D.},
  title = {Inherently self-managed networks: Requirements, properties and an
	initial model},
  booktitle = {Integrated Network Management (IM), 2011 IFIP/IEEE International
	Symposium on},
  year = {2011},
  pages = {1200 -1207},
  month = {may},
  __markedentry = {[kimi:1]},
  doi = {10.1109/INM.2011.5990566},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {Netcell;OPEX;over-the-top players;self-managed networks;self-management
	capability;vertically integrated network operators;computer network
	management;}
}

@INPROCEEDINGS{1245053,
  author = {Klose, D.R.},
  title = {Agent-based systems key enabler for the army's future force},
  booktitle = {Integration of Knowledge Intensive Multi-Agent Systems, 2003. International
	Conference on},
  year = {2003},
  pages = { 249 - 254},
  month = {sept.-4 oct.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/KIMAS.2003.1245053},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = { agent-based system; army future force; intelligent agent technology;
	military decision making process; military organization; decision
	making; decision support systems; military computing; software agents;}
}

@INPROCEEDINGS{4593513,
  author = {Tingjun Wang and Youlian Song},
  title = {Design and analysis of a passive pulling type of xylophone-playing
	robot},
  booktitle = {Intelligent Control and Automation, 2008. WCICA 2008. 7th World Congress
	on},
  year = {2008},
  pages = {3679 -3682},
  month = {june},
  __markedentry = {[kimi:1]},
  doi = {10.1109/WCICA.2008.4593513},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {CAN communication bus;control system;data transfer mode;digital signal
	processing chip;host computer model;human body shape model;industry
	control computer;mallet-beating devices;mallet-moving devices;motion
	controller;music control programs;passive pulling type xylophone-playing
	robot design;slave computer model;controller area networks;manipulators;motion
	control;musical instruments;signal processing;}
}

@INPROCEEDINGS{5565288,
  author = {Tao Xing},
  title = {Software configuration management of change control study based on
	baseline},
  booktitle = {Intelligent Control and Information Processing (ICICIP), 2010 International
	Conference on},
  year = {2010},
  pages = {93 -96},
  month = {aug.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ICICIP.2010.5565288},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {change control;graphics;product baseline;product life cycle;software
	configuration management;software development project;waterfall model;product
	life cycle management;software development management;}
}

@INPROCEEDINGS{1387690,
  author = {Ng Yew Seng and Srinivasan, R.},
  title = {Transitions in the process industries: opportunities and prospective
	solutions},
  booktitle = {Intelligent Control, 2004. Proceedings of the 2004 IEEE International
	Symposium on},
  year = {2004},
  pages = { 246 - 251},
  month = {sept.},
  doi = {10.1109/ISIC.2004.1387690},
  excluded = {Kimi, title},
  issn = {2158-9860},
  keywords = { agile operation; piece-meal fashion; process industry; process transitions;
	software agent-based framework; agile manufacturing; control engineering
	computing; process control; production engineering computing; software
	agents;}
}

@INPROCEEDINGS{4062230,
  author = {Lendyuk, T. and Pasichnyk, R. and Rippa, S. and Voznyak, S.},
  title = {Models of Project Resources Using},
  booktitle = {Intelligent Data Acquisition and Advanced Computing Systems: Technology
	and Applications, 2005. IDAACS 2005. IEEE},
  year = {2005},
  pages = {717 -722},
  month = {sept.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/IDAACS.2005.283079},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {decisions making;project financial resources optimization;project
	life cycle decomposition;project management;project resources;product
	life cycle management;project management;}
}

@INPROCEEDINGS{5419458,
  author = {Ying Wang and Dayong Sang and Wujie Xie},
  title = {Analysis on Agile Software Development Methods from the View of Informationalization
	Supply Chain Management},
  booktitle = {Intelligent Information Technology Application Workshops, 2009. IITAW
	'09. Third International Symposium on},
  year = {2009},
  pages = {219 -222},
  month = {nov.},
  doi = {10.1109/IITAW.2009.64},
  keywords = {agile software development;enterprise information systems;informationalization
	supply chain management;information systems;software prototyping;supply
	chain management;}
}

@INPROCEEDINGS{5369637,
  author = {Lili Qu and Yan Chen and Ming Yang},
  title = {The Coordination and Integration of Agile Supply Chain Based on Service-oriented
	Technology},
  booktitle = {Intelligent Information Technology Application, 2009. IITA 2009.
	Third International Symposium on},
  year = {2009},
  volume = {1},
  pages = {351 -354},
  month = {nov.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/IITA.2009.94},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {SOA;agile supply chain;automatic information processing;business process
	dynamic composition;heterogeneous enterprise application systems
	integration;next generation Web technology;semantic Web services;service-oriented
	technology;supply chain ontology;Web services;ontologies (artificial
	intelligence);semantic Web;software architecture;software prototyping;supply
	chain management;}
}

@INPROCEEDINGS{4058987,
  author = {Hirzinger, G. and Bauml, B.},
  title = {Agile Robot Development (aRD): A Pragmatic Approach to Robotic Software},
  booktitle = {Intelligent Robots and Systems, 2006 IEEE/RSJ International Conference
	on},
  year = {2006},
  pages = {3741 -3748},
  month = {oct.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/IROS.2006.281756},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {agile robot development;complex mechatronic system development;distributed
	software design;robot design;robotic software;control engineering
	computing;mechatronics;robots;}
}

@INPROCEEDINGS{4021595,
  author = {Shihong Feng and Mingjun Liu and Jiancheng Wan},
  title = {An agilely adaptive User Interface based on Design Pattern},
  booktitle = {Intelligent Systems Design and Applications, 2006. ISDA '06. Sixth
	International Conference on},
  year = {2006},
  volume = {1},
  pages = {1117 -1122},
  month = {oct.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ISDA.2006.87},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {adaptive user interface design pattern;intelligent agent;pervasive
	computing;object-oriented methods;user interfaces;}
}

@INPROCEEDINGS{5223233,
  author = {Huang ShuiYuan and Duan LongZhen and Xie Jun and Tao Jun-Cai and
	Chen GuiXiang},
  title = {A Research and Practice of Agile Unified Requirement Modeling},
  booktitle = {Intelligent Ubiquitous Computing and Education, 2009 International
	Symposium on},
  year = {2009},
  pages = {180 -184},
  month = {may},
  doi = {10.1109/IUCE.2009.17},
  excluded = {Kimi, title},
  keywords = {agile unified requirement modeling;developing schedule planning;incremental
	iteration;practicing defect;ration unified process;social insurance
	system;software developing process;software quality;formal specification;software
	quality;}
}

@INPROCEEDINGS{4545614,
  author = {Fabra, J. and Pena, J. and Ruiz-Cortes, A. and Ezpeleta, J.},
  title = {Enabling the Evolution of Service-Oriented Solutions Using an UML2
	Profile and a Reference Petri Nets Execution Platform},
  booktitle = {Internet and Web Applications and Services, 2008. ICIW '08. Third
	International Conference on},
  year = {2008},
  pages = {198 -204},
  month = {june},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ICIW.2008.63},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {UML2 profile;business processes;reference Petri nets execution platform;service-oriented
	solutions;Petri nets;Unified Modeling Language;Web services;business
	data processing;}
}

@ARTICLE{4797933,
  author = {Jianwei Yin and Hanwei Chen and Shuiguang Deng and Zhaohui Wu and
	Pu, C.},
  title = {A Dependable ESB Framework for Service Integration},
  journal = {Internet Computing, IEEE},
  year = {2009},
  volume = {13},
  pages = {26 -34},
  number = {2},
  month = {march-april },
  __markedentry = {[kimi:1]},
  doi = {10.1109/MIC.2009.26},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1089-7801},
  keywords = {Chinese Healthcare Service Integration project;ESB framework;JTangSynergy;automated
	recovery;component failures;composite services;distributed heterogeneous
	environments;enterprise service bus;large-scale service integration;service
	compatibility;service-oriented architectures;service-oriented computing;Web
	services;distributed processing;software architecture;}
}

@INPROCEEDINGS{182224,
  author = {Rollo, A.L.},
  title = {Jackson system development},
  booktitle = {Introduction to Software Design Methodologies, IEE Colloquium on},
  year = {1991},
  pages = {3/1 -313},
  month = {dec},
  __markedentry = {[kimi:1]},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = { JSD; Jackson system development method; abstract machine; computer
	system; development methods; implementation phase; maintenance phase;
	model; modelling phase; operational paradigm; operational specification;
	real world; requirements; software life cycle; specification phase;
	system behaviour; system specification; technical method; software
	engineering; systems analysis;}
}

@ARTICLE{6028561,
  author = {Fulgham, C. and Johnson, J. and Crandall, M. and Jackson, L. and
	Burrows, N.},
  title = {The FBI Gets Agile},
  journal = {IT Professional},
  year = {2011},
  volume = {13},
  pages = {57 -59},
  number = {5},
  month = {sept.-oct. },
  doi = {10.1109/MITP.2011.88},
  issn = {1520-9202},
  keywords = {FBI gets agile;IT project government;case management software system
	designed;government agencies;nonsoftware development focused organizations;sentinel
	development;information technology;public administration;software
	prototyping;}
}

@ARTICLE{4629852,
  author = {Nottonson, K. and DeLong, K.},
  title = {Baby Steps: Agile Transformation at BabyCenter.com},
  journal = {IT Professional},
  year = {2008},
  volume = {10},
  pages = {59 -62},
  number = {5},
  month = {sept.-oct. },
  doi = {10.1109/MITP.2008.95},
  issn = {1520-9202},
  keywords = {BabyCenter.com;agile organization;comprehensive planning process;multitudinous
	business stakeholders;project requests;Web sites;social sciences
	computing;}
}

@ARTICLE{1008537,
  author = {English, A.},
  title = {Extreme programming, it's worth a look},
  journal = {IT Professional},
  year = {2002},
  volume = {4},
  pages = {48 -50},
  number = {3},
  month = {may/jun},
  doi = {10.1109/MITP.2002.1008537},
  issn = {1520-9202},
  keywords = {application development;code generation;extreme programming;programming;software
	engineering;}
}

@ARTICLE{1041174,
  author = {McGovern, F.},
  title = {Managing software projects with business-based requirements},
  journal = {IT Professional},
  year = {2002},
  volume = {4},
  pages = { 18 - 23},
  number = {5},
  month = {sep/oct},
  doi = {10.1109/MITP.2002.1041174},
  excluded = {Kimi, title},
  issn = {1520-9202},
  keywords = { business-based requirements; full process rollout; quality improvements;
	software project management; formal specification; project management;
	software development management;}
}

@ARTICLE{5688096,
  author = {Garcí anda, I. and Pacheco, C.},
  title = {A Web-based Tool for Automatizing the Software Process Improvement
	Initiatives in Small Software Enterprises},
  journal = {Latin America Transactions, IEEE (Revista IEEE America Latina)},
  year = {2010},
  volume = {8},
  pages = {685 -694},
  number = {6},
  month = {dec. },
  doi = {10.1109/TLA.2010.5688096},
  excluded = {Kimi, title},
  issn = {1548-0992},
  keywords = {CMMI-DEV 1.2 model;Web-based tool;agile project management;iterative
	approach;small software enterprises;software development organization;software
	process improvement initiative automatization;top-down process improvement
	approach;software process improvement;software tools;}
}

@ARTICLE{1468658,
  author = {Maller, P. and Ochoa, C. and Silva, J.},
  title = {Lightening the Software Production Process in a CMM Level 5 Framework},
  journal = {Latin America Transactions, IEEE (Revista IEEE America Latina)},
  year = {2005},
  volume = {3},
  pages = {15 -22},
  number = {1},
  month = {march },
  doi = {10.1109/TLA.2005.1468658},
  issn = {1548-0992},
  keywords = {Agile methodologies;CMM;Xp@Scrum;}
}

@INPROCEEDINGS{4370821,
  author = {Zhi-Zhong Sun and Bin Li and Liang Li},
  title = {An Adaptive Agent Coordination Framework for Web Services Composition},
  booktitle = {Machine Learning and Cybernetics, 2007 International Conference on},
  year = {2007},
  volume = {7},
  pages = {3870 -3875},
  month = {aug.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ICMLC.2007.4370821},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {Web service composition research projects;adaptive agent coordination;agent
	conversation;agile interenterprise application integration;message
	exchange efficiency;process partition;scalability;Web services;multi-agent
	systems;ubiquitous computing;}
}

@INPROCEEDINGS{5998992,
  author = {Zhang Xiaobo and Hu Ying and Lu Yuan and Gu Jia},
  title = {University Dormitory Management System Based on Agile Development
	Architecture},
  booktitle = {Management and Service Science (MASS), 2011 International Conference
	on},
  year = {2011},
  pages = {1 -4},
  month = {aug.},
  doi = {10.1109/ICMSS.2011.5998992},
  excluded = {Kimi, title},
  keywords = {agile architecture;agile development architecture technology;asp.net
	technology;automatic code generation technology;automation management;browser/server
	mode;university dormitory management system;educational administrative
	data processing;program compilers;software architecture;software
	prototyping;}
}

@INPROCEEDINGS{5302042,
  author = {Bin Xu},
  title = {Towards High Quality Software Development with Extreme Programming
	Methodology: Practices from Real Software Projects},
  booktitle = {Management and Service Science, 2009. MASS '09. International Conference
	on},
  year = {2009},
  pages = {1 -4},
  month = {sept.},
  doi = {10.1109/ICMSS.2009.5302042},
  keywords = {extreme programming methodology;high quality software development;project
	management;quality assurance team;real software project;software
	product validation;software testing;program testing;program verification;project
	management;quality assurance;software development management;software
	quality;}
}

@INPROCEEDINGS{4285307,
  author = {Farhoomand, A.},
  title = {Opening up of the Software Industry: The Case of SAP},
  booktitle = {Management of eBusiness, 2007. WCMeB 2007. Eighth World Congress
	on the},
  year = {2007},
  pages = {8},
  month = {july},
  doi = {10.1109/WCMEB.2007.54},
  keywords = {SAP;agile business architecture;proprietary software product;software
	industry;DP industry;}
}

@INPROCEEDINGS{4349582,
  author = {Moore, A. and Flannery, W.T.},
  title = {Use of Extreme Programming Methodologies in IT Application Design
	Processes: An Empirical Analysis},
  booktitle = {Management of Engineering and Technology, Portland International
	Center for},
  year = {2007},
  pages = {2468 -2475},
  month = {aug.},
  doi = {10.1109/PICMET.2007.4349582},
  keywords = {IT application design;Information Technology;Southwest United States;centralized
	IT department;development costs;programming methodologies;small and
	medium- sized IT projects;software development;telecommunications
	firm;small-to-medium enterprises;software engineering;telecommunication
	services;}
}

@INPROCEEDINGS{4654418,
  author = {Izumi, N. and Hasida, K.},
  title = {Enterprise software development based on Web process ontology},
  booktitle = {Management of Innovation and Technology, 2008. ICMIT 2008. 4th IEEE
	International Conference on},
  year = {2008},
  pages = {514 -519},
  month = {sept.},
  __markedentry = {},
  doi = {10.1109/ICMIT.2008.4654418},
  excluded = {Kimi, title},
  keywords = {Java objects;Java-based software framework;RDF/XML representation;Web
	page transitions;Web process architecture;Web process ontology;agile
	software development;business environment;business models;enterprise
	software development;local-government workflow systems;ontology construction
	technology;ontology-based business process;reflective semantics;Java;business
	data processing;corporate modelling;ontologies (artificial intelligence);open
	systems;semantic Web;software architecture;}
}

@INPROCEEDINGS{5203442,
  author = {Tingjun Wang and Shenshun Hu and Jun Xu and Dewei Yan and Jiawen
	Bi},
  title = {Simulation Design and Application of Music Playing Robot Based on
	SolidWorks},
  booktitle = {Measuring Technology and Mechatronics Automation, 2009. ICMTMA '09.
	International Conference on},
  year = {2009},
  volume = {2},
  pages = {339 -342},
  month = {april},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ICMTMA.2009.663},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {SolidWork software;agile motion simulation design;diagrammatic curve;displacement
	curve;mallet-beating unit virtual model;mallet-moving unit virtual
	model;optimization design;parameterized design;positioning;service
	robot;velocity curve;virtual assembly;xylophone music playing robot
	design;control engineering computing;control system synthesis;digital
	simulation;mobile robots;motion control;music;musical instruments;optimisation;position
	control;service robots;virtual reality;}
}

@INPROCEEDINGS{4430707,
  author = {Zhenyao Zheng and Jiyang Dong and Zhong Chen},
  title = {Process control for the tea baking},
  booktitle = {Mechatronics and Machine Vision in Practice, 2007. M2VIP 2007. 14th
	International Conference on},
  year = {2007},
  pages = {18 -22},
  month = {dec.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/MMVIP.2007.4430707},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {intelligent meter;interface software;mathematic model;process control;tea
	baking;tea-picking;beverage industry;heat treatment;process control;}
}

@INPROCEEDINGS{5517700,
  author = {Djoumessi, E.E. and Ke Wu},
  title = {Electronically tunable diplexer for frequency-agile transceiver front-end},
  booktitle = {Microwave Symposium Digest (MTT), 2010 IEEE MTT-S International},
  year = {2010},
  pages = {1472 -1475},
  month = {may},
  __markedentry = {[kimi:1]},
  doi = {10.1109/MWSYM.2010.5517700},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0149-645X},
  keywords = {electronically tunable diplexer;frequency-agile transceiver front-end;tunable
	dual-mode bandpass filters;varactor-based tunable diplexer;band-pass
	filters;frequency agility;multiplexing equipment;transceivers;}
}

@ARTICLE{4428280,
  author = {Ramirez, F. and Ponton, M. and Sancho, S. and Suarez, A.},
  title = {Phase-Noise Analysis of Injection-Locked Oscillators and Analog Frequency
	Dividers},
  journal = {Microwave Theory and Techniques, IEEE Transactions on},
  year = {2008},
  volume = {56},
  pages = {393 -407},
  number = {2},
  month = {feb. },
  __markedentry = {[kimi:1]},
  doi = {10.1109/TMTT.2007.914375},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0018-9480},
  keywords = {analog frequency dividers;circuit design;commercial harmonic-balance
	software;conversion-matrix approach;field-effect-transistor-based
	circuits;frequency 4.9 GHz;frequency 9.8 GHz;injection-locked oscillator;output
	phase-noise spectrum;phase-noise analysis;frequency dividers;injection
	locked oscillators;matrix algebra;microwave frequency convertors;microwave
	oscillators;phase noise;}
}

@INPROCEEDINGS{1180478,
  author = {Jones, L.H.},
  title = {Algorithm to optimize the operational spectrum effectiveness (OSE)
	of wireless communication systems},
  booktitle = {MILCOM 2002. Proceedings},
  year = {2002},
  volume = {1},
  pages = { 416 - 420 vol.1},
  month = {oct.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/MILCOM.2002.1180478},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = { OSAM; OSE optimization; SDR; adaptive network overlay problem; agile
	communication devices; algorithm design; equilibrium concepts; group-level
	spectrum utilization; microeconomic theory; military services; nonlinear
	utility functions; operational spectrum effectiveness; software-defined
	radio; spectrum management authority; spectrum sharing; system technical
	parameters; wireless communication systems; frequency agility; land
	mobile radio; military communication; optimisation; radio networks;
	radio spectrum management; software radio;}
}

@INPROCEEDINGS{1605677,
  author = {Bennett, B. and Hemmings, P. and Holt, C. and Hamilton, B.A.},
  title = {Digital video broadcast - handheld (DVB-H) - a mobile last-mile tactical
	broadcast solution},
  booktitle = {Military Communications Conference, 2005. MILCOM 2005. IEEE},
  year = {2005},
  pages = {141 -147 Vol. 1},
  month = {oct.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/MILCOM.2005.1605677},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {Armed Forces;COTS solution;DVB-H;European standard;bandwidth-constrained
	terrestrial circuits;broadband digital services;broadband services;combat
	force;digital video broadcast-handheld;global broadcast service;high-resolution
	images;last-mile data dissemination;low data-rate tactical networks;mobile
	forces;mobile handheld;mobile warfighters;real-time video;situational
	awareness;standards-based commercial-of-the-shelf solution;transport
	networks;broadband networks;digital video broadcasting;military communication;mobile
	communication;software packages;}
}

@INPROCEEDINGS{1605778,
  author = {Carvalho, M. and Suri, N. and Arguedas, M.},
  title = {A mobile agent-based communications middleware for data streaming
	in the battlefield},
  booktitle = {Military Communications Conference, 2005. MILCOM 2005. IEEE},
  year = {2005},
  pages = {794 -800 Vol. 2},
  month = {oct.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/MILCOM.2005.1605778},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {FlexFeed framework;agile computing;battlefield;data streaming;middleware;military
	combat operations;mobile agent-based communications;mobile software
	agents;data communication;middleware;military communication;military
	computing;mobile agents;telecommunication computing;}
}

@INPROCEEDINGS{6127525,
  author = {Farroha, D. and Farroha, B.},
  title = {Developing corporate services in an agile environment},
  booktitle = {MILITARY COMMUNICATIONS CONFERENCE, 2011 - MILCOM 2011},
  year = {2011},
  pages = {1535 -1540},
  month = {nov.},
  doi = {10.1109/MILCOM.2011.6127525},
  issn = {2155-7578},
  keywords = {DoD;agile environment;agile processes;corporate services development;information
	systems;mission requirements;service based environment;stable interfaces;information
	systems;military computing;service-oriented architecture;software
	prototyping;user interfaces;}
}

@INPROCEEDINGS{5463341,
  author = {McIntosh, S. and Adams, B. and Hassan, A.E.},
  title = {The evolution of ANT build systems},
  booktitle = {Mining Software Repositories (MSR), 2010 7th IEEE Working Conference
	on},
  year = {2010},
  pages = {42 -51},
  month = {may},
  __markedentry = {[kimi:1]},
  doi = {10.1109/MSR.2010.5463341},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {ANT build systems;build system aging processes;executable software;software
	development;software evolution researchers;software maintenance;software
	metrics;static source code artifacts;software maintenance;software
	metrics;source coding;}
}

@INPROCEEDINGS{5533407,
  author = {Cvitak, Lara Drvodelic and Car, Zeljka},
  title = {Impact of agile development implementation on configuration and change
	management in telecom domain},
  booktitle = {MIPRO, 2010 Proceedings of the 33rd International Convention},
  year = {2010},
  pages = {377 -381},
  month = {may}
}

@INPROCEEDINGS{6240734,
  author = {Duka, D.},
  title = {Agile experiences in software development},
  booktitle = {MIPRO, 2012 Proceedings of the 35th International Convention},
  year = {2012},
  pages = {692 -697},
  month = {may},
  keywords = {agile experiences;agility criteria;geographical distribution impact;organization;software
	development;waterfall model;software prototyping;}
}

@INPROCEEDINGS{6360084,
  author = {Smialek, Michal and Nowakowski, Wiktor and Jarzebowski, Norbert and
	Ambroziewicz, Albert},
  title = {From use cases and their relationships to code},
  booktitle = {Model-Driven Requirements Engineering Workshop (MoDRE), 2012 IEEE},
  year = {2012},
  pages = {9 -18},
  month = {sept.},
  doi = {10.1109/MoDRE.2012.6360084},
  excluded = {Kimi, title}
}

@INPROCEEDINGS{5671341,
  author = {Anfan Zuo and Jing Yang and Xiaowen Chen},
  title = {Research of Agile Software Development Based on Formal Methods},
  booktitle = {Multimedia Information Networking and Security (MINES), 2010 International
	Conference on},
  year = {2010},
  pages = {762 -766},
  month = {nov.},
  __markedentry = {},
  doi = {10.1109/MINES.2010.161},
  keywords = {agile software development;formal method;rCOS;refinement of component
	and object system;software trustworthiness;formal specification;formal
	verification;software prototyping;software reliability;}
}

@INPROCEEDINGS{1492915,
  author = {Nisar, M.F. and Hameed, T.},
  title = {Agile methods handling offshore software development issues},
  booktitle = {Multitopic Conference, 2004. Proceedings of INMIC 2004. 8th International},
  year = {2004},
  pages = { 417 - 422},
  month = {dec.},
  doi = {10.1109/INMIC.2004.1492915},
  keywords = { Technology Wisdom; Web applications; agile methods; global economic;
	offshore software development issues; small to medium sized projects;
	globalisation; outsourcing; software development management;}
}

@INPROCEEDINGS{6212076,
  author = {Chunming Gao and Hembroff, G.},
  title = {Implications of modified waterfall model to the roles and education
	of health IT professionals},
  booktitle = {Network Operations and Management Symposium (NOMS), 2012 IEEE},
  year = {2012},
  pages = {1368 -1369},
  month = {april},
  doi = {10.1109/NOMS.2012.6212076},
  issn = {1542-1201},
  keywords = {EHR adoption;EHR management;electronic health record;health IT professional;health
	care;information technology;medical informatics program;modified
	waterfall life cycle model;health care;medical information systems;}
}

@ARTICLE{5510911,
  author = {Haibo, B.L. and Sohraby, L.K. and Wang, C.},
  title = {Future internet services and applications},
  journal = {Network, IEEE},
  year = {2010},
  volume = {24},
  pages = {4 -5},
  number = {4},
  month = {july-august },
  __markedentry = {[kimi:1]},
  doi = {10.1109/MNET.2010.5510911},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0890-8044}
}

@INPROCEEDINGS{5967530,
  author = {Ramanujam, R. and Lee, I.},
  title = {Collaborative and competitive strategies for agile scrum development},
  booktitle = {Networked Computing and Advanced Information Management (NCM), 2011
	7th International Conference on},
  year = {2011},
  pages = {123 -127},
  month = {june},
  keywords = {agile scrum software development;collaborative framework;multi-vendor
	competing situations;groupware;software prototyping;}
}

@INPROCEEDINGS{5936268,
  author = {Ozgul, B. and Sutton, P. and Doyle, L.},
  title = {Peak power reduction of flexible OFDM waveforms for cognitive radio},
  booktitle = {New Frontiers in Dynamic Spectrum Access Networks (DySPAN), 2011
	IEEE Symposium on},
  year = {2011},
  pages = {664 -665},
  month = {may},
  __markedentry = {[kimi:1]},
  doi = {10.1109/DYSPAN.2011.5936268},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {OOB interference;PAPR reduction;bandwidth estimation;bandwidth-adaptive
	OFDM transmissions;bit-error rate;cognitive radio;cyclostationary
	signature;dynamic spectrum access system;flexible OFDM waveform;frequency
	acquisition;frequency-agile OFDM transmission;high peak-to-average
	power ratio;orthogonal frequency division multiplexing;out-of-band
	interference;partial transmission sequence;peak power reduction;power
	amplifier nonlinearity;receiver;runtime reconfigurability;signal
	constellation;software radio;OFDM modulation;bandwidth allocation;cognitive
	radio;error statistics;frequency allocation;radio receivers;radiofrequency
	interference;software radio;}
}

@INPROCEEDINGS{5720648,
  author = {Lange, L. and Blotny, A. and Magedanz, T.},
  title = {An Agile Service Platform for Telecommunication Environments},
  booktitle = {New Technologies, Mobility and Security (NTMS), 2011 4th IFIP International
	Conference on},
  year = {2011},
  pages = {1 -6},
  month = {feb.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/NTMS.2011.5720648},
  excluded = {Verify (Kimi)},
  excludekimi = {title},
  issn = {2157-4952},
  keywords = {IT standard;Web domain;agile service;dynamic service deployment;dynamic
	service management;life cycle management;network standard;next generation
	network;real time communication process;service composition;service
	oriented architecture;telecommunication industry;telecommunication
	network;telecommunication service;third party development process;Web
	services;next generation networks;service-oriented architecture;telecommunication
	computing;telecommunication industry;telecommunication services;}
}

@INPROCEEDINGS{5558229,
  author = {Obeidat, R. and Zaatreh, Z.},
  title = {Motivation for Integrating Supply Chains Using Service Oriented Architecture
	Approach},
  booktitle = {Next Generation Mobile Applications, Services and Technologies (NGMAST),
	2010 Fourth International Conference on},
  year = {2010},
  pages = {102 -105},
  month = {july},
  __markedentry = {[kimi:1]},
  doi = {10.1109/NGMAST.2010.30},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {SOA adoption;Web service;agile reconfigurable supply chains;data inconsistency;enterprise;interoperable
	supply chain;service oriented architecture;supply chain management;supply
	chain performance;Web services;data integrity;open systems;software
	architecture;supply chain management;}
}

@INPROCEEDINGS{4302484,
  author = {Meyer, J.F.},
  title = {Service Oriented Architecture (SOA) Migration Strategy for U.S. Operational
	Naval Meteorology and Oceanography (METOC)},
  booktitle = {OCEANS 2007 - Europe},
  year = {2007},
  pages = {1 -6},
  month = {june},
  __markedentry = {[kimi:1]},
  doi = {10.1109/OCEANSE.2007.4302484},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {IT project portfolio;US Department of Defense;US Operational Naval
	Meteorology and Oceanography;battlespace;cross-organizational data;environmental
	characterization;heterogeneous data;information technology;process
	integration;sensor systems;service oriented architecture migration
	strategy;warfighter systems;warfighting mission;warfighting operations;distributed
	processing;military computing;oceanographic techniques;software architecture;}
}

@INPROCEEDINGS{5278187,
  author = {Pirenne, B. and Guillemot, E.},
  title = {The data management system for the VENUS and NEPTUNE cabled observatories},
  booktitle = {OCEANS 2009 - EUROPE},
  year = {2009},
  pages = {1 -4},
  month = {may},
  __markedentry = {[kimi:1]},
  doi = {10.1109/OCEANSE.2009.5278187},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {Agile development methodology;Internet underwater extension;Java;NEPTUNE
	cabled ocean observatory;Oceans 2.0 environment;VENUS cabled ocean
	observatory;Web 2.0;data acquisition framework;data management and
	archiving system;enterprise service bus;publish-and-subscribe paradigm;service
	oriented architecture;software system;user interaction;DP management;Internet;Java;data
	acquisition;geophysics computing;sensor fusion;software architecture;system
	buses;user interfaces;}
}

@INPROCEEDINGS{924948,
  author = {Sullivan, C. and Jurczyk, M.},
  title = {Bandwidth tracking in distributed heterogeneous networking environments},
  booktitle = {Parallel and Distributed Processing Symposium., Proceedings 15th
	International},
  year = {2001},
  pages = {8 pp.},
  month = {apr},
  __markedentry = {[kimi:1]},
  doi = {10.1109/IPDPS.2001.924948},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1530-2075},
  keywords = {bandwidth tracking;binary search;communication requests;distributed
	heterogeneous data dissemination system;distributed heterogeneous
	networking environments;exponential growth;learning algorithm;computer
	communications software;computer networks;}
}

@INPROCEEDINGS{4079146,
  author = {Chin, J.S. and Callaghan, V. and Clarke, G.},
  title = {A Pervasive Computing Programming Approach for Non-Technical Users},
  booktitle = {Pervasive Computing and Applications, 2006 1st International Symposium
	on},
  year = {2006},
  pages = {235 -240},
  month = {aug.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/SPCA.2006.297575},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {PiP tool;digital home;end-user empowerment;end-user programming;extreme
	programming;intelligent environment;nontechnical users;personal pervasive
	computing environments;pervasive computing programming;programming-by-example;show-me-by-demonstration;distributed
	programming;home computing;software tools;ubiquitous computing;}
}

@INPROCEEDINGS{1276930,
  author = {Niemela, E. and Vaskivuo, T.},
  title = {Agile middleware of pervasive computing environments},
  booktitle = {Pervasive Computing and Communications Workshops, 2004. Proceedings
	of the Second IEEE Annual Conference on},
  year = {2004},
  pages = { 192 - 197},
  month = {march},
  __markedentry = {[kimi:1]},
  doi = {10.1109/PERCOMW.2004.1276930},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = { agile middleware services; architectural patterns; architectural
	styles; interoperability; mobile computing; ontology-orientation;
	pervasive computing environment; software components; software services;
	wireless computing; middleware; open systems; software architecture;
	ubiquitous computing;}
}

@ARTICLE{4383327,
  author = {Lingfeng Wang},
  title = {Agility counts in developing small-size software},
  journal = {Potentials, IEEE},
  year = {2007},
  volume = {26},
  pages = {16 -23},
  number = {6},
  month = {nov.-dec. },
  doi = {10.1109/MPOT.2007.906114},
  issn = {0278-6648},
  keywords = {agile methodology;industrial automation software;software development;software
	management;software engineering;}
}

@INPROCEEDINGS{5772592,
  author = {Dam, Q.B. and Gleason, L. and McMullin, V.},
  title = {Using agility to build robust, real-time platforms for smart grid
	software services},
  booktitle = {Power Systems Conference and Exposition (PSCE), 2011 IEEE/PES},
  year = {2011},
  pages = {1 -5},
  month = {march},
  doi = {10.1109/PSCE.2011.5772592},
  keywords = {GE;Software Solutions Group;agile software development;smart grid
	business;smart grid software service;software test;smart power grids;software
	prototyping;}
}

@INPROCEEDINGS{5978877,
  author = {Kavitha, R.K. and Irfan Ahmed, M.S.},
  title = {A Knowledge Management Framework for Agile Software Development Teams},
  booktitle = {Process Automation, Control and Computing (PACC), 2011 International
	Conference on},
  year = {2011},
  pages = {1 -5},
  month = {july},
  doi = {10.1109/PACC.2011.5978877},
  keywords = {agile software development teams;document-centric approach;face-to-face
	communication;knowledge management framework;knowledge sharing;knowledge
	transfer;organizational learning process;pair programming;knowledge
	management;software development management;software prototyping;}
}

@INPROCEEDINGS{5413479,
  author = {Dandan Liu and Zhanyong Ren and Mengmeng Liu and Zhaoyang Zeng},
  title = {Methodology of fault injection based on EDA software},
  booktitle = {Prognostics and Health Management Conference, 2010. PHM '10.},
  year = {2010},
  pages = {1 -5},
  month = {jan.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/PHM.2010.5413479},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {EDA software;PHM system;agile fault injection method;audio processing
	circuit;discretional fault mode;electronic design automation;fault
	confirm method;groupware modeling;universal element;electronic design
	automation;fault diagnosis;groupware;}
}

@INPROCEEDINGS{4556129,
  author = {Roy, C.K. and Cordy, J.R.},
  title = {NICAD: Accurate Detection of Near-Miss Intentional Clones Using Flexible
	Pretty-Printing and Code Normalization},
  booktitle = {Program Comprehension, 2008. ICPC 2008. The 16th IEEE International
	Conference on},
  year = {2008},
  pages = {172 -181},
  month = {june},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ICPC.2008.41},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1092-8138},
  keywords = {NICAD;agile parsing;code normalization;island grammars;language-specific
	parser;lightweight clone detection approach;near-miss clones;near-miss
	intentional clones;pretty-printing;source transformation system;text
	line comparison technique;grammars;program compilers;specification
	languages;text analysis;}
}

@INPROCEEDINGS{5654786,
  author = {Korhonen, K.},
  title = {Evaluating the Effect of Agile Methods on Software Defect Data and
	Defect Reporting Practices - A Case Study},
  booktitle = {Quality of Information and Communications Technology (QUATIC), 2010
	Seventh International Conference on the},
  year = {2010},
  pages = {35 -43},
  month = {29 2010-oct. 2},
  __markedentry = {[kimi:1]},
  doi = {10.1109/QUATIC.2010.18},
  excludekimi = {title},
  keywords = {agile methods;agile transformation;code quality improvement;defect
	reporting practices;multisite organization;software defect data;software
	development projects;software development management;software quality;}
}

@INPROCEEDINGS{6319252,
  author = {Bernhart, M. and Strobl, S. and Mauczka, A. and Grechenig, T.},
  title = {Applying Continuous Code Reviews in Airport Operations Software},
  booktitle = {Quality Software (QSIC), 2012 12th International Conference on},
  year = {2012},
  pages = {214 -219},
  month = {aug.},
  doi = {10.1109/QSIC.2012.61},
  issn = {1550-6002},
  keywords = {AODB;IEEE-1028;airport operational database;airport operations software;change-based
	process;continuous code reviews;continuous process;dependable system;distributed
	process;formal method;large software systems;quality assurance technique;whole
	code base;airports;database management systems;formal specification;program
	diagnostics;quality assurance;software quality;}
}

@INPROCEEDINGS{5158506,
  author = {Carnevali, L. and D'Amico, D. and Ridi, L. and Vicario, E.},
  title = {Automatic Code Generation from Real-Time Systems Specifications},
  booktitle = {Rapid System Prototyping, 2009. RSP '09. IEEE/IFIP International
	Symposium on},
  year = {2009},
  pages = {102 -105},
  month = {june},
  __markedentry = {[kimi:1]},
  doi = {10.1109/RSP.2009.24},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1074-6005},
  keywords = {JComposer;Java;Linux-RTAI operating system;agile evolution;automatic
	code generation;eXtensible stylesheet language transformation;graphic
	formalism;model driven development;real-time system specification;timeline
	schema;Java;Linux;formal specification;program compilers;real-time
	systems;}
}

@ARTICLE{963126,
  author = {Stutzke, M.A. and Smidts, C.S.},
  title = {A stochastic model of fault introduction and removal during software
	development},
  journal = {Reliability, IEEE Transactions on},
  year = {2001},
  volume = {50},
  pages = {184 -193},
  number = {2},
  month = {jun},
  __markedentry = {[kimi:1]},
  doi = {10.1109/24.963126},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0018-9529},
  keywords = {coding activities;debugging error occurrence;debugging errors;design;dynamic
	testing;fault introduction;fault removal;human error;requirements
	analysis;software development;software failure intensity;software
	failure intensity function;software inspection;software life-cycle
	phases;software reliability;stochastic model;success likelihood methodology;waterfall
	software development;program debugging;program testing;software reliability;stochastic
	processes;}
}

@INPROCEEDINGS{1238071,
  author = {Lei Kong and Subbiah, A. and Ahamad, M. and Blough, D.M.},
  title = {A reconfigurable Byzantine quorum approach for the Agile Store},
  booktitle = {Reliable Distributed Systems, 2003. Proceedings. 22nd International
	Symposium on},
  year = {2003},
  pages = { 219 - 228},
  month = {oct.},
  doi = {10.1109/RELDIS.2003.1238071},
  issn = {1060-9857},
  keywords = { Agile Store; faulty servers; malicious adversary; multiple server
	nodes; quorum-based protocols; reconfigurable Byzantine quorum; simulation;
	client-server systems; protocols; software fault tolerance;}
}

@INPROCEEDINGS{5636644,
  author = {Savolainen, J. and Kuusela, J. and Vilavaara, A.},
  title = {Transition to Agile Development - Rediscovery of Important Requirements
	Engineering Practices},
  booktitle = {Requirements Engineering Conference (RE), 2010 18th IEEE International},
  year = {2010},
  pages = {289 -294},
  month = {27 2010-oct. 1},
  doi = {10.1109/RE.2010.41},
  issn = {1090-705X},
  keywords = {agile development;agile transition processes;embedded software development;user
	requirement;work allocation;software prototyping;systems analysis;}
}

@INPROCEEDINGS{6051626,
  author = {Waldmann, B.},
  title = {There's never enough time: Doing requirements under resource constraints,
	and what requirements engineering can learn from agile development},
  booktitle = {Requirements Engineering Conference (RE), 2011 19th IEEE International},
  year = {2011},
  pages = {301 -305},
  month = {29 2011-sept. 2},
  __markedentry = {[kimi:]},
  doi = {10.1109/RE.2011.6051626},
  excluded = {Verify (Kimi)},
  issn = {1090-705X},
  keywords = {agile development methods;requirements engineering textbooks;requirements
	specification;resource constraints;software development community;user
	story;working product;formal specification;software prototyping;}
}

@INPROCEEDINGS{4384210,
  author = {Delgadillo, Lorena and Gotel, Orlena},
  title = {Story-Wall: A Concept for Lightweight Requirements Management},
  booktitle = {Requirements Engineering Conference, 2007. RE '07. 15th IEEE International},
  year = {2007},
  pages = {377 -378},
  month = {oct.},
  doi = {10.1109/RE.2007.41},
  issn = {1090-705X}
}

@INPROCEEDINGS{4384160,
  author = {Delgadillo, L. and Gotel, O.},
  title = {Modelling-in-the-Large},
  booktitle = {Requirements Engineering Conference, 2007. RE '07. 15th IEEE International},
  year = {2007},
  pages = {xvii},
  month = {oct.},
  doi = {10.1109/RE.2007.8},
  excluded = {Kimi, title},
  issn = {1090-705X},
  keywords = {agile development;first generation story management tools;lightweight
	requirements management;live dialogue;paper-based story cards;software
	development;story-wall;software development management;}
}

@INPROCEEDINGS{1048543,
  author = {Nawrocki, J. and Jasinski, M. and Walter, B. and Wojciechowski, A.},
  title = {Extreme programming modified: embrace requirements engineering practices},
  booktitle = {Requirements Engineering, 2002. Proceedings. IEEE Joint International
	Conference on},
  year = {2002},
  pages = { 303 - 310},
  doi = {10.1109/ICRE.2002.1048543},
  issn = {1090-705X},
  keywords = { Sommerville-Sawyer model; XP; agile software development methodology;
	capability maturity model; documentation; extreme programming; planning
	game; requirements engineering practices; software engineering; software
	maintenance; formal specification; software engineering;}
}

@INPROCEEDINGS{5507381,
  author = {Qumer, Asif and Henderson-Sellers, Brian},
  title = {Empirical evaluation of the agile process lifecycle management framework},
  booktitle = {Research Challenges in Information Science (RCIS), 2010 Fourth International
	Conference on},
  year = {2010},
  pages = {213 -222},
  month = {may},
  doi = {10.1109/RCIS.2010.5507381},
  issn = {2151-1349}
}

@INPROCEEDINGS{5507382,
  author = {Chiniforooshan Esfahani, Hesam and Cabot, Jordi and Yu, Eric},
  title = {Adopting agile methods: Can goal-oriented social modeling help?},
  booktitle = {Research Challenges in Information Science (RCIS), 2010 Fourth International
	Conference on},
  year = {2010},
  pages = {223 -234},
  month = {may},
  doi = {10.1109/RCIS.2010.5507382},
  issn = {2151-1349}
}

@INPROCEEDINGS{6006852,
  author = {Gerami, M. and Ramsin, R.},
  title = {A framework for extending agile methodologies with aspect-oriented
	features},
  booktitle = {Research Challenges in Information Science (RCIS), 2011 Fifth International
	Conference on},
  year = {2011},
  pages = {1 -6},
  month = {may},
  doi = {10.1109/RCIS.2011.6006852},
  excluded = {Kimi, title},
  issn = {2151-1349},
  keywords = {AOSD;agile development process;aspect-oriented software development;aspect-oriented
	programming;software prototyping;}
}

@INPROCEEDINGS{4632123,
  author = {Rahimian, V. and Ramsin, R.},
  title = {Designing an agile methodology for mobile software development: A
	hybrid method engineering approach},
  booktitle = {Research Challenges in Information Science, 2008. RCIS 2008. Second
	International Conference on},
  year = {2008},
  pages = {337 -342},
  month = {june},
  doi = {10.1109/RCIS.2008.4632123},
  keywords = {agile methodology;hybrid methodology design;mobile computer technology;mobile
	software development:;software engineering approach;wireless networks;mobile
	computing;software engineering;}
}

@INPROCEEDINGS{774069,
  author = {Gowdy, J. and Butler, Z.J.},
  title = {An integrated interface tool for the architecture for agile assembly},
  booktitle = {Robotics and Automation, 1999. Proceedings. 1999 IEEE International
	Conference on},
  year = {1999},
  volume = {4},
  pages = {3097 -3102 vol.4},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ROBOT.1999.774069},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1050-4729},
  keywords = { agile assembly architecture; digital simulation; integrated interface
	tool; off-lin stage; online stage; protocols; assembly planning;
	computer aided production planning; digital simulation; manufacturing
	data processing; protocols; software tools;}
}

@ARTICLE{1324597,
  author = {Ring, S. and Cole, E.},
  title = {Taking a lesson from stealthy rootkits},
  journal = {Security Privacy, IEEE},
  year = {2004},
  volume = {2},
  pages = { 38 - 45},
  number = {4},
  month = {july-aug.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/MSP.2004.57},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1540-7993},
  keywords = { agile software development; commercial applications; compiled binary;
	obfuscation techniques; stealthy rootkits; unreadable software; computer
	crime; software engineering;}
}

@INPROCEEDINGS{5678718,
  author = {Scharmer, C. and Trujillo, D.},
  title = {Design, implementation and migration of security systems as an extreme
	project},
  booktitle = {Security Technology (ICCST), 2010 IEEE International Carnahan Conference
	on},
  year = {2010},
  pages = {211 -217},
  month = {oct.},
  __markedentry = {[kimi:]},
  doi = {10.1109/CCST.2010.5678718},
  issn = {1071-6572},
  keywords = {decision trees;multilayered integrated system;project management;risk
	management;security system;software code;decision trees;project management;security
	of data;software management;software prototyping;}
}

@INPROCEEDINGS{5663559,
  author = {Zheng Leina and Pan Tiejun and Yan Guoqing},
  title = {Research of Information System for Agile Virtual Enterprise Supported
	by Fourth Party Logistics},
  booktitle = {Semantics Knowledge and Grid (SKG), 2010 Sixth International Conference
	on},
  year = {2010},
  pages = {379 -382},
  month = {nov.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/SKG.2010.64},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {4PL-AVE model;J2EE open source architecture;RFID;agile virtual enterprise;cloud
	computing;data integration;data mining;data warehouse;fourth party
	logistics;information integration;information system;workflow composition;Java;data
	integrity;data mining;data warehouses;logistics data processing;management
	information systems;public domain software;software architecture;software
	prototyping;virtual enterprises;}
}

@INPROCEEDINGS{5663561,
  author = {Zheng Leina and Pan Tiejun and Yan Guoqing},
  title = {Research of Mobile Security Solution for Fourth Party Logistics},
  booktitle = {Semantics Knowledge and Grid (SKG), 2010 Sixth International Conference
	on},
  year = {2010},
  pages = {383 -386},
  month = {nov.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/SKG.2010.65},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {4PL-AVE model;J2EE open source architecture;RFID;agile virtual enterprise;cloud
	computing;data mining technology;data warehouse;fourth party logistics;information
	infrastructure;information integration;life cycle dimension;mobile
	security solution;three dimensional cube;universal level dimension;workflow
	composition;Java;cloud computing;data mining;data warehouses;logistics;mobile
	computing;public domain software;radiofrequency identification;security
	of data;virtual enterprises;workflow management software;}
}

@INPROCEEDINGS{4725963,
  author = {Liming Chen and Stankovski, V. and Zhongzhi Shi and Watson, P.},
  title = {Semantic-Enabled and Agent-based Environment Aware Agile Service
	Utilities},
  booktitle = {Semantics, Knowledge and Grid, 2008. SKG '08. Fourth International
	Conference on},
  year = {2008},
  pages = {461 -464},
  month = {dec.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/SKG.2008.109},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {agent-based environment;agile service utilities;dynamic service discovery;semantic-enabled
	environment;service oriented architecture;utility computing;Web services;software
	architecture;}
}

@INPROCEEDINGS{5370324,
  author = {Xinhuai Tang and Xiangfeng Luo and Xueqiang Mi and Xiaozhou Yuan
	and Delai Chen},
  title = {DSL Route: An Efficient Integration Solution for Message Routing},
  booktitle = {Semantics, Knowledge and Grid, 2009. SKG 2009. Fifth International
	Conference on},
  year = {2009},
  pages = {436 -437},
  month = {oct.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/SKG.2009.66},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {DSL route;domain specific language;enterprise integration patterns;message
	delivery;message routing;messaging systems;business process re-engineering;message
	passing;specification languages;}
}

@INPROCEEDINGS{4686571,
  author = {Hui Du and Shan Gao},
  title = {Development research on SOA-based Postgraduate Education Administration
	Systems},
  booktitle = {Service Operations and Logistics, and Informatics, 2008. IEEE/SOLI
	2008. IEEE International Conference on},
  year = {2008},
  volume = {1},
  pages = {1144 -1147},
  month = {oct.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/SOLI.2008.4686571},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {development research;postgraduate education administration systems;rational
	unified process;service oriented architecture;web services;Web services;educational
	administrative data processing;further education;research and development;}
}

@INPROCEEDINGS{4686547,
  author = {Yin Li and Yiwen Shi and Chen Li},
  title = {Constructing IT contingency planning based on RUP model},
  booktitle = {Service Operations and Logistics, and Informatics, 2008. IEEE/SOLI
	2008. IEEE International Conference on},
  year = {2008},
  volume = {1},
  pages = {1017 -1022},
  month = {oct.},
  __markedentry = {[kimi:]},
  doi = {10.1109/SOLI.2008.4686547},
  excluded = {Verify (Kimi)},
  keywords = {IT contingency planning;organizational planning;rational unified process
	model;software engineering;business continuity;information technology;organisational
	aspects;planning;technical support services;}
}

@INPROCEEDINGS{5986572,
  author = {Hayata, T. and Jianchao Han},
  title = {A hybrid model for IT project with Scrum},
  booktitle = {Service Operations, Logistics, and Informatics (SOLI), 2011 IEEE
	International Conference on},
  year = {2011},
  pages = {285 -290},
  month = {july},
  doi = {10.1109/SOLI.2011.5986572},
  keywords = {IT software project development;IT software project management;Scrum;agile
	practice;business organization;corporate culture;plan-driven project
	development;plan-driven project management;project management;software
	development management;software prototyping;}
}

@INPROCEEDINGS{6252212,
  author = {Zhuang Lei and Gao Zhen and Li Guoqiang and Huang Jie and Wang Min},
  title = {Research on Websphere sMash and CICS TS integrated development},
  booktitle = {Service Systems and Service Management (ICSSSM), 2012 9th International
	Conference on},
  year = {2012},
  pages = {158 -161},
  month = {july},
  __markedentry = {[kimi:1]},
  doi = {10.1109/ICSSSM.2012.6252212},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {CICS TS integrated development;CICS dynamic scripting;SOA;Web-based
	dynamic application;Websphere sMash;agile application development;business
	transaction server;core banking applications;dynamic scripting technology;Internet;banking;file
	servers;service-oriented architecture;software prototyping;transaction
	processing;}
}

@INPROCEEDINGS{4280188,
  author = {Liang Ping and Li JianYang},
  title = {A Change-Oriented Conceptual Framework Of Software Configuration
	Management},
  booktitle = {Service Systems and Service Management, 2007 International Conference
	on},
  year = {2007},
  pages = {1 -4},
  month = {june},
  doi = {10.1109/ICSSSM.2007.4280188},
  excluded = {Kimi, title},
  keywords = {IT industry;IT software products;change-oriented conceptual framework;customer
	requirement;error correction;service management;software configuration
	management;software development;software maintenance;system development;system
	update;DP industry;configuration management;software houses;software
	maintenance;}
}

@INPROCEEDINGS{5410473,
  author = {Kenzi, A. and El Asri, B. and Nassar, M. and Kriouile, A.},
  title = {Engineering adaptable service oriented systems: A model driven approach},
  booktitle = {Service-Oriented Computing and Applications (SOCA), 2009 IEEE International
	Conference on},
  year = {2009},
  pages = {1 -8},
  month = {jan.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/SOCA.2009.5410473},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {J2EE platform;Java code;UML;Unified Modeling Language;adaptable service
	oriented systems;agile large scale systems;development lifecycle;distributed
	software systems;first class modeling entity;interoperable;model-driven
	engineering approach;multiview service;service oriented architecture;Unified
	Modeling Language;Web services;large-scale systems;open systems;software
	architecture;software prototyping;}
}

@INPROCEEDINGS{6274067,
  author = {Jinsong Ouyang},
  title = {Webponder: An Innovative Cloud Service for Application Description
	and Provisioning},
  booktitle = {Services (SERVICES), 2012 IEEE Eighth World Congress on},
  year = {2012},
  pages = {313 -316},
  month = {june},
  doi = {10.1109/SERVICES.2012.70},
  excluded = {Kimi, title},
  keywords = {SaaS;Web service interface;Webponder;application description;application
	provisioning;business applications;innovative cloud service;software-as-a-service;Web
	services;business data processing;cloud computing;}
}

@INPROCEEDINGS{5305983,
  author = {Rahaman, M.A. and Roudier, Y. and Schaad, A.},
  title = {Document-Based Dynamic Workflows: Towards Flexible and Stateful Services},
  booktitle = {Services - II, 2009. SERVICES-2 '09. World Conference on},
  year = {2009},
  pages = {87 -94},
  month = {sept.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/SERVICES-2.2009.16},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {agile business processes;business goals;business process execution;business
	rules drive models;document-based dynamic workflows;electronic health
	record;rule-based system;task-based workflows;business process re-engineering;document
	handling;medical information systems;workflow management software;}
}

@INPROCEEDINGS{4041225,
  author = {Bo Yan and Yiyun Chen and Zhiyong Zhang},
  title = {Applied Research on Logistics Grid Based on ASP},
  booktitle = {Services Computing, 2006. APSCC '06. IEEE Asia-Pacific Conference
	on},
  year = {2006},
  pages = {146 -152},
  month = {dec. },
  __markedentry = {[kimi:1]},
  doi = {10.1109/APSCC.2006.35},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {ASP;Globus;Netlog system;Web service resource;domain related grid
	middleware;grid basic service;networked-logistic agile grid service
	system;Web services;grid computing;logistics data processing;middleware;}
}

@INPROCEEDINGS{4026971,
  author = {Anand, S. and Venkataraman, J.},
  title = {Drivers for SOA in the Transaction Banking Domain},
  booktitle = {Services Computing, 2006. SCC '06. IEEE International Conference
	on},
  year = {2006},
  pages = {506 -507},
  month = {sept.},
  __markedentry = {[kimi:2]},
  abstract = {In a competitive business landscape, banks are under pressure to innovate,
	improvise and differentiate their products and services while continuing
	to reduce the time-to-market for new product introductions. The rise
	of new businesses and newer ways of doing existing businesses has
	significantly influenced the need for a better assessment of the
	business value realized from the IT investments. Client relationship
	managers, product managers etc. are facing the need to be innovative
	and flexible in their offerings to the client and they demand an
	agile delivery infrastructure (process amp; IT) to support them in
	this regard. In banks operating multiple lines of businesses, generating
	a single view of the customer is a critical both from a marketing
	perspective as well as risk management perspective. This presentation
	covers the specific applicability of a service based model to the
	transaction banking space and prescribes reference architecture for
	this domain},
  doi = {10.1109/SCC.2006.45},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {business drivers;business process automation;cash management solution;competitive
	business landscape;risk management;service-oriented architecture;transaction
	banking service model;transaction processing;banking;software architecture;transaction
	processing;}
}

@INPROCEEDINGS{4578529,
  author = {Soo Ling Lim and Ishikawa, F. and Platon, E. and Cox, K.},
  title = {Towards Agile Service-oriented Business Systems: A Directive-oriented
	Pattern Analysis Approach},
  booktitle = {Services Computing, 2008. SCC '08. IEEE International Conference
	on},
  year = {2008},
  volume = {2},
  pages = {231 -238},
  month = {july},
  abstract = {Volatile requirements should be managed such that changes can be introduced
	into the system in a quick and structured way. This paper presents
	directive-oriented pattern analysis (DoPA), a requirements engineering
	approach that handles volatile requirements by managing the coupling
	between business intentions and service integration. The key insight
	is to utilise services as commodities via service choreography patterns.
	DoPA captures differentiating enterprise intentions as directives,
	while using patterns to handle common business needs. This enables
	the notion of declarative configuration of services to achieve business
	agility.},
  doi = {10.1109/SCC.2008.65},
  keywords = {agile service-oriented business systems;business intentions;directive-oriented
	pattern analysis approach;requirements engineering approach;service
	choreography patterns;service declarative configuration;service integration;volatile
	requirements;business data processing;}
}

@INPROCEEDINGS{5069110,
  author = {Ostacchini, I. and Wermelinger, M.},
  title = {Managing assumptions during agile development},
  booktitle = {Sharing and Reusing Architectural Knowledge, 2009. SHARK '09. ICSE
	Workshop on},
  year = {2009},
  pages = {9 -16},
  month = {may},
  abstract = {The assumptions that underlie software development often go unrecorded
	and form part of the implicit rationale on which design and implementation
	decisions are based. These assumptions can fail at any time, with
	serious consequences. This paper presents a lightweight approach
	to assumption management (AM) designed to suit agile development.
	Assumptions were monitored for three months within a small agile
	team. Two key indicators were proposed for measuring AM success but
	only one was detected in the research results. A number of strong
	correlations were found between properties of assumptions. Data collection
	largely depended on the subjective judgements of the first author,
	but they were validated with some success by his colleagues. In some
	ways, assumption management was found to complement agile development.
	However, AM was not fully integrated into the team's development
	process, due to difficulty in adopting an 'assumption-aware ' way
	of thinking. Suggestions are offered on how this transition may be
	eased, and on how others might wish to build on this research.},
  doi = {10.1109/SHARK.2009.5069110},
  excluded = {Kimi, title},
  keywords = {agile development;assumption management;software development;software
	engineering;}
}

@INPROCEEDINGS{5429422,
  author = {Sawyer, J.T. and Brann, D.M.},
  title = {How to test your models more effectively: Applying agile and automated
	techniques to simulation testing},
  booktitle = {Simulation Conference (WSC), Proceedings of the 2009 Winter},
  year = {2009},
  pages = {968 -978},
  month = {dec.},
  __markedentry = {[kimi:2]},
  abstract = {In the industrial engineering community, it's a well-known adage that
	focusing on process can help achieve better results. In this second
	of a series of papers, we'll focus on the process of simulation testing
	and outline how improving your testing process can lead to better
	results for your projects. We'll consider model building as a software
	development exercise, and discuss how best practices from the broader
	software testing community can be applied for process improvement.
	In particular, we'll explore various approaches to automated testing
	and their applicability toward simulation projects, based on recent
	explorations in our own projects. Part 1 of our series introduced
	the Â¿milestonesÂ¿ approach to simulation development - based on
	the popular Â¿agile softwareÂ¿ philosophy and our own experiences
	in real-world simulation consulting practice. This time, we'll discuss
	how thinking agile can help you become a more effective tester, and
	help ensure the quality of your models.},
  doi = {10.1109/WSC.2009.5429422},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {agile software;automated testing;industrial engineering community;process
	improvement;real-world simulation consultation;simulation testing
	process;software development;software testing;digital simulation;program
	testing;software development management;software prototyping;}
}

@INPROCEEDINGS{1172979,
  author = {Graves, G.H. and Higgins, J.L.},
  title = {Applications of simulation in logistics combat developments},
  booktitle = {Simulation Conference, 2002. Proceedings of the Winter},
  year = {2002},
  volume = {1},
  pages = { 911 - 916 vol.1},
  month = {dec.},
  __markedentry = {[kimi:1]},
  abstract = { As the Army undergoes a transformation from the logistics intensive
	organizations that currently comprise the force to a more agile and
	sustainable force, changes in logistics concepts and organizations
	are inevitable. Because much of the Army's future equipment and most
	future organizations are still in the conceptual stages, these elements
	must be modeled. Simulation provides a valuable tool for not only
	modeling the structure or attributes of a future system, but also
	for comparing alternative concepts for how systems should be employed
	and equipped. In this paper, we present three applications of how
	simulation was used within the U.S. Army Combined Arms Support Command
	in the design and analysis of current and emerging logistical systems
	in the Army.},
  doi = {10.1109/WSC.2002.1172979},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = { },
  keywords = { Arena simulation software; US Army Combined Arms Support Command;
	alternative concepts; logistics combat developments; logistics concepts;
	discrete event simulation; logistics data processing;}
}

@INPROCEEDINGS{6225978,
  author = {Hebig, R. and Gabrysiak, G. and Giese, H.},
  title = {Towards patterns for MDE-related processes to detect and handle changeability
	risks},
  booktitle = {Software and System Process (ICSSP), 2012 International Conference
	on},
  year = {2012},
  pages = {38 -47},
  month = {june},
  abstract = {One of the multiple technical factors which affect changeability of
	software is model-driven engineering (MDE), where often several models
	and a multitude of manual as well as automated development activities
	have to be mastered to derive the final software product. The ability
	to change software with only reasonable costs, however, is of uppermost
	importance for the iterative and incremental development of software
	as well as agile development in general. Thus, the effective applicability
	of agile processes is influenced by the used MDE activities. However,
	there is currently no approach available to systematically detect
	and handle such risks to the changeability that result from the embedded
	MDE activities. In this paper we extend our beforehand-introduced
	process modeling approach by a notion of process pattern to capture
	typical situations that can be associated with risk or benefit with
	respect changeability. In addition, four candidates for the envisioned
	process patterns are presented in detail in the paper. Further, we
	developed strategies to handle changeability risks associated to
	these process patterns.},
  doi = {10.1109/ICSSP.2012.6225978},
  excluded = {Kimi, title},
  keywords = {MDE-related processes;agile development;beforehand-introduced process
	modeling approach;changeability risk detection;changeability risk
	handling;incremental software development;iterative software development;model-driven
	engineering;productivity improvement;quality improvement;software
	changeability;software product;product development;risk management;software
	prototyping;software quality;}
}

@INPROCEEDINGS{6225964,
  author = {Monteiro, P. and Borges, P. and Machado, R.J. and Ribeiro, P.},
  title = {A reduced set of RUP roles to small software development teams},
  booktitle = {Software and System Process (ICSSP), 2012 International Conference
	on},
  year = {2012},
  pages = {190 -199},
  month = {june},
  __markedentry = {[kimi:2]},
  abstract = {Software projects are always increasing their complexity. The complexity
	of projects arises due to the increased sophistication of software
	applications and of their implemented features. However, most of
	the projects are developed by small organizations. Since these companies
	have a reduced dimension, the number of individuals that constitute
	each software development teams will also be significantly reduced.
	This paper describes a Rational Unified Process (RUP) configuration
	composed by a reduced set of RUP roles. This configuration may easily
	be adopted by a small software development team during the project
	execution period. Additionally, we have characterized each role in
	this reduced model by identifying the corresponding activities in
	charge and by creating individual sheets detailing their responsibilities.
	An initial assessment of the effectiveness of this RUP configuration
	was performed using CMMI-DEV maturity level 2 (ML2) as a reference
	model.},
  doi = {10.1109/ICSSP.2012.6225964},
  excludekimi = {abstract},
  keywords = {CMMI-DEV maturity level 2;Capability Maturity Model;ML2;RUP roles;Rational
	Unified Process configuration;company reduced dimension;project execution
	period;reduced model;sheet creation;small organizations;small-software
	development teams;software applications;software project complexity;organisational
	aspects;project management;small-to-medium enterprises;software management;}
}

@INPROCEEDINGS{6225959,
  author = {Nikitina, N. and Kajko-Mattsson, M. and Strale, M.},
  title = {From scrum to scrumban: A case study of a process transition},
  booktitle = {Software and System Process (ICSSP), 2012 International Conference
	on},
  year = {2012},
  pages = {140 -149},
  month = {june},
  abstract = {Transitioning from one development method to another has become a
	common routine for many companies. Despite this, very few reports
	describe how the process transition has been carried out, and provide
	suggestions for how to define a process transition model. This paper
	reports on a process transition from Scrum to Scrumban in one software
	development company. The paper gives an account on the process transition
	process, changes done to the development process undergoing the transition
	and the improvements achieved. It rounds up with lessons learned.},
  doi = {10.1109/ICSSP.2012.6225959},
  keywords = {Scrum;Scrumban;process transition model;software development company;DP
	industry;software prototyping;}
}

@INPROCEEDINGS{1620113,
  author = {C. Hofmeister},
  title = {Architecting Session Report},
  booktitle = {Software Architecture, 2005. WICSA 2005. 5th Working IEEE/IFIP Conference
	on},
  year = {2005},
  pages = {209 -210},
  month = { },
  abstract = {The Architecting session examined the development of software architectures.
	Seven papers were presented, covering both the state of the practice
	and new architecting approaches. Based on the paper presentations
	and subsequent discussions, we concluded that tool support is a barrier
	to adoption of methods, and that architectural knowledge, including
	domain-specific knowledge and understanding of patterns and styles
	is essential but difficult to communicate. A related issue, the documentation
	of an architecture, is similarly critical but not easy to do well,
	and better techniques and tools are needed. Finally, we agreed that
	agile methods do not bring fundamental changes to the practice of
	architecting.},
  doi = {10.1109/WICSA.2005.12},
  excluded = {Kimi, title}
}

@INPROCEEDINGS{5290807,
  author = {Kotonya, G. and Jaejoon Lee and Robinson, D.},
  title = {A consumer-centred approach for service-oriented product line development},
  booktitle = {Software Architecture, 2009 European Conference on Software Architecture.
	WICSA/ECSA 2009. Joint Working IEEE/IFIP Conference on},
  year = {2009},
  pages = {211 -220},
  month = {sept.},
  abstract = {The notion of software as a service promises agile, flexible and low
	maintenance system development through a dynamic runtime architecture
	that allows third-party functionality and capability to be added
	on demand. There is growing research interest in how service-orientation
	can be adopted a means for enhancing agility and flexibility in product
	line engineering. However, integrating service-orientation in product
	line engineering poses a number of challenges. These include difficulty
	in identifying services, ensuring services reflect user needs, and
	determining configurations of services that are relevant in different
	user contexts. This paper describes an approach for service-oriented
	product line development that integrates feature-oriented engineering
	with a self-managing consumer-centred negotiation process to address
	these challenges.},
  doi = {10.1109/WICSA.2009.5290807},
  excluded = {Kimi, title},
  keywords = {consumer-centred negotiation;dynamic runtime architecture;maintenance
	system;product line engineering;service-oriented product line development;production
	engineering computing;software architecture;software maintenance;}
}

@INPROCEEDINGS{5071325,
  title = {[Title page]},
  booktitle = {Software Development Governance, 2009. SDG '09. ICSE Workshop on},
  year = {2009},
  pages = {ix},
  month = {may},
  __markedentry = {[kimi:1]},
  abstract = {The following topics are dealt with: agile software development; lean
	governance; software development governance; geographically distributed
	software development; distributed project governance assessment;
	Dutch product software companies; agile transition and agile software
	project.},
  doi = {10.1109/SDG.2009.5071325},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {Dutch product software companies;agile software development;agile
	software project;agile transition;distributed project governance
	assessment;geographically distributed software development;lean governance;software
	development governance;distributed processing;project management;software
	engineering;}
}

@INPROCEEDINGS{5071336,
  author = {Talby, D. and Dubinsky, Y.},
  title = {Governance of an agile software project},
  booktitle = {Software Development Governance, 2009. SDG '09. ICSE Workshop on},
  year = {2009},
  pages = {40 -45},
  month = {may},
  abstract = {Effective governance of agile software teams is challenging but required
	to enable wide adoption of agile methodologies, in particular for
	large-scale projects. In this paper we apply a full lifecycle governance
	model to agile projects, focused on the iteration level. The concept
	is demonstrated via a case study of a large-scale, enterprise-critical
	software project that implemented agile practices. We analyze three
	governance events, including the metrics that triggered the event,
	the decisions taken and the followup to ensure resolution. We conclude
	that governance iterations can be naturally unified with agile development
	iterations, resulting in a lean governance mechanism that identifies
	and resolves issues in an effective and timely manner.},
  doi = {10.1109/SDG.2009.5071336},
  keywords = {agile software project;agile software teams;enterprise-critical software
	project;iteration level;lifecycle governance model;business process
	re-engineering;iterative methods;project management;software engineering;}
}

@INPROCEEDINGS{5071335,
  author = {Lehto, I. and Rautiainen, K.},
  title = {Software development governance challenges of a middle-sized company
	in agile transition},
  booktitle = {Software Development Governance, 2009. SDG '09. ICSE Workshop on},
  year = {2009},
  pages = {36 -39},
  month = {may},
  abstract = {We studied how a middle-sized Finnish company employing agile methods
	governs its software product development. Through observations and
	interviews we followed the trace from strategic plans in the form
	of roadmaps to various backlogs and all the way to daily work. The
	governance roles, responsibilities and deliverables seemed to be
	in place on different organizational levels. However, closer inspection
	revealed challenges in the practical implementation. There were too
	many roles and hierarchy levels with information consistency problems
	in between. Prioritization of the high-level goals was unclear and
	made it difficult to plan and organize development work based on
	business value. The trace from high-level goals to more detailed
	plans was easily corrupted due to poor planning practices. Progress
	monitoring of daily work was poorly done and not linked to high-level
	plans. Consequently, the required feedback loops were inadequate,
	making it impossible for management to take corrective actions in
	time.},
  doi = {10.1109/SDG.2009.5071335},
  keywords = {agile method;feedback loop;information consistency problem;inspection;middle-sized
	company;software product development;DP industry;business data processing;inspection;organisational
	aspects;small-to-medium enterprises;software development management;strategic
	planning;}
}

@INPROCEEDINGS{6032636,
  author = {Dig, Danny and Batory, Don},
  title = {Fourth workshop on refactoring tools: (WRT 2011)},
  booktitle = {Software Engineering (ICSE), 2011 33rd International Conference on},
  year = {2011},
  pages = {1202 -1203},
  month = {may},
  __markedentry = {[kimi:1]},
  abstract = {Refactoring is the process of applying behavior-preserving transformations
	to a program with the objective of improving the program's design.
	A specific refactoring is identified by a name (e.g., Extract Method),
	a set of preconditions, and a set of transformations that need to
	be performed. Tool support for refactoring is essential because checking
	the preconditions of refactoring often requires nontrivial program
	analysis, and applying transformations may affect many locations
	throughout a program. In recent years, the emergence of light-weight
	programming methodologies such as Extreme Programming has generated
	a great amount of interest in refactoring, and refactoring support
	has become a required feature in today's IDEs. This workshop is a
	continuation of a series of previous workshops (ECOOP 2007, OOPSLA
	2008 and 2009 - see http://refactoring.info/WRT) where researchers
	and developers of refactoring tools can meet and discuss recent ideas
	and work, and view tool demonstrations.},
  doi = {10.1145/1985793.1986046},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0270-5257}
}

@INPROCEEDINGS{6032610,
  author = {Salah, D.},
  title = {A framework for the integration of user centered design and agile
	software development processes},
  booktitle = {Software Engineering (ICSE), 2011 33rd International Conference on},
  year = {2011},
  pages = {1132 -1133},
  month = {may},
  __markedentry = {[kimi:2]},
  abstract = {Agile and user centered design integration (AUCDI) is of significant
	interest to researchers who want to achieve synergy and eliminate
	limitations of each. Currently, there are no clear principles or
	guidelines for practitioners to achieve successful integration. In
	addition, substantial differences exist between agile and UCD approaches
	which pose challenges to integration attempts. As a result, practitioners
	developed individual integration strategies. However, success evaluation
	of current AUCDI attempts has been anecdotal. Moreover, AUCDI attempts
	cannot be generalized to provide guidance and assistance to other
	projects or organizations with different needs. My thesis aims to
	provide a Software Process Improvement (SPI) framework for AUCDI
	by providing generic guidelines and practices for organizations aspiring
	to achieve AUCDI in order to address AUCDI challenges including:
	introducing systematicity and structure into AUCDI, assessing AUCDI
	processes, and accommodating project and organizational characteristics.},
  doi = {10.1145/1985793.1986017},
  excluded = {Verify (Kimi)},
  excludekimi = {abstract},
  issn = {0270-5257},
  keywords = {AUCDI;SPI framework;agile and user centered design integration;agile
	software development processes;generic guidelines;individual integration
	strategy;organizational characteristics;organizations;project characteristics;software
	process improvement framework;synergy;organisational aspects;software
	process improvement;software prototyping;user centred design;}
}

@INPROCEEDINGS{6032525,
  author = {Hardy, J. and Bull, C. and Kotonya, G. and Whittle, J.},
  title = {Digitally annexing desk space for software development: NIER track},
  booktitle = {Software Engineering (ICSE), 2011 33rd International Conference on},
  year = {2011},
  pages = {812 -815},
  month = {may},
  __markedentry = {[kimi:1]},
  abstract = {Software engineering is a team activity yet the programmer's key tool,
	the IDE, is still largely that of a soloist. This paper describes
	the vision, implementation and initial evaluation of CoffeeTable
	- a fully featured research prototype resulting from our reflections
	on the software design process. CoffeeTable exchanges the traditional
	IDE for one built around a shared interactive desk. The proposed
	solution encourages smooth transitions between agile and traditional
	modes of working whilst helping to create a shared vision and common
	reference frame - key to sustaining a good design. This paper also
	presents early results from the evaluation of CoffeeTable and offers
	some insights from the lessons learned. In particular, it highlights
	the role of developer tools and the software constructions that are
	shaped by them.},
  doi = {10.1145/1985793.1985910},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0270-5257},
  keywords = {CoffeeTable;IDE;NIER track;digitally annexing desk space;interactive
	desk;software design process;software development;software engineering;data
	visualisation;groupware;software engineering;}
}

@INPROCEEDINGS{6227110,
  author = {Sillitti, A. and Succi, G. and Vlasenko, J.},
  title = {Understanding the impact of Pair Programming on developers attention:
	A case study on a large industrial experimentation},
  booktitle = {Software Engineering (ICSE), 2012 34th International Conference on},
  year = {2012},
  pages = {1094 -1101},
  month = {june},
  abstract = {Pair Programming is one of the most studied and debated development
	techniques. However, at present, we do not have a clear, objective,
	and quantitative understanding of the claimed benefits of such development
	approach. All the available studies focus on the analysis of the
	effects of Pair Programming (e.g., code quality, development speed,
	etc.) with different findings and limited replicability of the experiments.
	This paper adopts a different approach that could be replicated in
	an easier way: it investigates how Pair Programming affects the way
	developers write code and interact with their development machine.
	In particular, the paper focuses on the effects that Pair Programming
	has on developers' attention and productivity. The study was performed
	on a professional development team observed for ten months and it
	finds out that Pair Programming helps developers to eliminate distracting
	activities and to focus on productive activities.},
  doi = {10.1109/ICSE.2012.6227110},
  excluded = {Kimi, title},
  issn = {0270-5257},
  keywords = {agile software development;case study;debated development techniques;developers
	attention;development machine;large industrial experimentation;pair
	programming;quantitative understanding;software prototyping;}
}

@INPROCEEDINGS{6140708,
  author = {Azham, Z. and Ghani, I. and Ithnin, N.},
  title = {Security backlog in Scrum security practices},
  booktitle = {Software Engineering (MySEC), 2011 5th Malaysian Conference in},
  year = {2011},
  pages = {414 -417},
  month = {dec.},
  __markedentry = {[kimi:2]},
  abstract = {The rapid development of software nowadays requires the high speed
	software product delivery by development teams. In order to deliver
	the product faster, the development teams make a transformation to
	their conventional software development lifecycle to agile development
	method which can enable them towards speedy delivery of software
	coping with the requirements-change phenomenon. In this scenario,
	one of the most popular techniques in Agile development is the Scrum
	methodology which has been criticised in term of its security aspect
	cycle that ignores the security risk management activity. However,
	the current practices suggest that security should be considered
	during all stages of the software development life cycle. In order
	to address the aforementioned issue, this paper proposes the integration
	of security principles in development phases using scrum and suggests
	the element of security backlog that can be used as security features
	analysis and implementation in scrum phases.},
  doi = {10.1109/MySEC.2011.6140708},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {Scrum methodology;Scrum security practices;agile development method;development
	teams;high speed software product delivery;requirements-change phenomenon;security
	aspect cycle;security backlog;security features analysis;security
	principles;security risk management activity;software development
	lifecycle;speedy delivery;security of data;software prototyping;}
}

@INPROCEEDINGS{6140707,
  author = {Sarkan, H.M. and Ahmad, T.P.S. and Bakar, A.A.},
  title = {Using JIRA and Redmine in requirement development for agile methodology},
  booktitle = {Software Engineering (MySEC), 2011 5th Malaysian Conference in},
  year = {2011},
  pages = {408 -413},
  month = {dec.},
  abstract = {Today, Agile development has become popular due to the ability to
	deliver fast and hence reduce cost. It is expected that by 2012,
	Agile development method will be utilized in 80% of all software
	development projects. Since 2010, some of software projects in MIMOS
	have adopted agile methodology. Therefore, this paper will focus
	on how agile methodology applied in MIMOS has influenced the requirement
	process. The paper will discuss on the benefits and challenges that
	MIMOS faced using JIRA and Redmine in requirement development.},
  doi = {10.1109/MySEC.2011.6140707},
  excluded = {Kimi, title},
  keywords = {Agile development;JIRA;Redmine;agile methodology;requirement development;software
	development;software projects;software prototyping;}
}

@INPROCEEDINGS{6065151,
  author = {Corbucci, H. and Goldman, A. and Katayama, E. and Kon, F. and Melo,
	C. and Santos, V.},
  title = {Genesis and Evolution of the Agile Movement in Brazil -- Perspective
	from Academia and Industry},
  booktitle = {Software Engineering (SBES), 2011 25th Brazilian Symposium on},
  year = {2011},
  pages = {98 -107},
  month = {sept.},
  abstract = {Agile software development methods have been increasingly adopted
	worldwide and became one of the mainstream software development approaches.
	Agile methods have also had an impact on software engineering education
	with universities adapting their courses to accommodate this new
	point of view of software development. Software engineering research
	has tried to evaluate the impact of agile methods in industrial projects
	and discover in which situations it is beneficial to apply such methods.
	However, there are still few studies focusing on the progress of
	the Agile Movement in Brazil.In this paper, we present an overview
	of the evolution of the Agile Movement in Brazil, outlining the history
	of its first advocates in academia and industry. We also describe
	existing educational initiatives and the impact of agile development
	on the national research and present a report on the agile state-of-
	the-practice in the Brazilian IT industry.},
  doi = {10.1109/SBES.2011.26},
  keywords = {Brazilian IT industry;agile movement;agile software development method;educational
	initiative;industrial project;national research;software engineering
	education;DP industry;computer science education;research and development;software
	prototyping;}
}

@INPROCEEDINGS{6337893,
  author = {Aleixo, F.A. and Freire, M. and Alencar, D. and Campos, E. and Kulesza,
	U.},
  title = {A Comparative Study of Compositional and Annotative Modelling Approaches
	for Software Process Lines},
  booktitle = {Software Engineering (SBES), 2012 26th Brazilian Symposium on},
  year = {2012},
  pages = {51 -60},
  month = {sept.},
  abstract = {This paper presents a comparative study of compositional and annotative
	modeling approaches for software process lines. In our comparative
	study, Open UP and Scrum based software process lines extracted from
	existing projects are modeled and implemented using an existing compositional
	approach -- EPF Composer, and an annotative approach -- GenArch-P,
	with the main aim to address a systematic variability management
	and automatic process derivation. In order to promote the analysis
	of the approaches were adapted some comparison criteria previously
	adopted in other studies. Our study results show that the annotative
	approach can bring many advantages to the modeling of software process
	lines considering our comparison criteria. On the other hand, our
	study also concludes that many existing compositional mechanisms
	should also be integrated with annotative approaches in order to
	improve the modularity of process elements associated to specific
	kinds of process variabilities.},
  doi = {10.1109/SBES.2012.11},
  excluded = {Kimi, title},
  keywords = {EPF Composer;GenArch-P;OpenUP based software process lines;Scrum based
	software process lines;annotative modelling;automatic process derivation;compositional
	modelling;software process improvement;}
}

@INPROCEEDINGS{4222733,
  author = {Maurer, Frank and Melnik, Grigori},
  title = {Agile Methods: Crossing the Chasm},
  booktitle = {Software Engineering - Companion, 2007. ICSE 2007 Companion. 29th
	International Conference on},
  year = {2007},
  pages = {176 -177},
  month = {may},
  abstract = {An armada of emerging agile methods of software development (with
	eXtreme Programming and Scrum being the most broadly used) is both
	gaining popularity and generating lots of controversy. This high-level
	tutorial gives an overview of agile methods and provides background
	to understand how agile teams are addressing modern software engineering
	challenges. Analysis of empirical evidence is used to discuss strengths
	and limitations of agile methods in various contexts. The participants
	are introduced to the innovation diffusion models and environments,
	and discuss what is needed for agile methods to cross the chasm and
	move into the mainstream of software development.},
  doi = {10.1109/ICSECOMPANION.2007.18}
}

@INPROCEEDINGS{4222739,
  author = {Weber-Jahnke, Jens H. and Price, Morgan},
  title = {Engineering Medical Information Systems: Architecture, Data and Usability
	Security},
  booktitle = {Software Engineering - Companion, 2007. ICSE 2007 Companion. 29th
	International Conference on},
  year = {2007},
  pages = {188 -189},
  month = {may},
  __markedentry = {[kimi:2]},
  abstract = {There has been increasing pressure on the health care sector to adopt
	information technologies to rationalize service delivery and increase
	service quality. Medical information systems need to be highly interoperable
	and effectively manage complex information of great sensitivity.
	Moreover, they have to be optimized for usability in a highly complex
	knowledge base and agile work environment. This tutorial introduces
	key concepts, methods and techniques essential for engineering clinical
	information systems, in particular electronic medical records. It
	targets participants with basic software engineering knowledge who
	are or will be involved in development, maintenance, evolution or
	research of medical software.},
  doi = {10.1109/ICSECOMPANION.2007.34},
  excludekimi = {abstract}
}

@INPROCEEDINGS{5614989,
  author = {Scharff, C. and Gotel, O. and Kulkarni, V.},
  title = {Transitioning to Distributed Development in Students' Global Software
	Development Projects: The Role of Agile Methodologies and End-to-End
	Tooling},
  booktitle = {Software Engineering Advances (ICSEA), 2010 Fifth International Conference
	on},
  year = {2010},
  pages = {388 -394},
  month = {aug.},
  abstract = {From 2005 to 2008, we explored different models of collaboration in
	student software development projects. In the past, project roles
	were distributed across students in the US, Cambodia, India and Thailand.
	What was common to our previous models was the co-location of developers,
	the client and quality assurance roles being the ones that were commonly
	distributed. A loose waterfall software development process was always
	used and activities were supported by a mashup of technologies. In
	2009, we distributed the developers across the US, India and Senegal
	to form a truly distributed developer role. We also switched to the
	use of Agile methodologies with Scrum and to an end-to-end tooling
	solution, specifically the IBM Rational Team Concert environment.
	This paper describes the new model and reports on the evolution of
	our process and tooling infrastructure. In particular, it investigates
	how well Agile and Scrum practices supported our model and how important
	tooling is to their implementation. Initial guidelines for other
	educators are provided.},
  doi = {10.1109/ICSEA.2010.66},
  excluded = {Kimi, title},
  keywords = {IBM Rational Team Concert environment;Scrum;agile methodology;distributed
	development;end-to-end tooling;loose waterfall software development
	process;process evolution;quality assurance;student collaboration;student
	global software development project;technology mashup;tooling infrastructure;computer
	science education;groupware;project management;software development
	management;software process improvement;student experiments;}
}

@INPROCEEDINGS{5615620,
  author = {Breivold, H.P. and Sundmark, D. and Wallin, P. and Larsson, S.},
  title = {What Does Research Say about Agile and Architecture?},
  booktitle = {Software Engineering Advances (ICSEA), 2010 Fifth International Conference
	on},
  year = {2010},
  pages = {32 -37},
  month = {aug.},
  abstract = {Agile has been used to refer to a software development paradigm that
	emphasizes rapid and flexible development. In the meanwhile, we have
	through our practical experiences in scaling up agile methods, noticed
	that architecture plays an important role. Due to the inter-relationship
	between agile methods and architecture, as well as divergent perceptions
	on their correlation stated in numerous sources, we are motivated
	to find out how these perceptions are supported by findings in the
	research community in general and in empirical studies in particular.
	To fully benefit from agile practices and architectural disciplines,
	we need empirical data on the perceived and experienced impacts of
	introducing agile methods to existing software development process,
	as well as correlations between agile and architecture. In this paper,
	we survey the research literature for statements made regarding the
	relationship between agile development and software architecture.
	The main findings are that there is a lack of scientific support
	for many of the claims that are concerned with agile and architecture,
	and more empirical studies are needed to fully reveal the benefits
	and drawbacks implied by an agile software development method.},
  doi = {10.1109/ICSEA.2010.12},
  excluded = {Kimi, title},
  keywords = {agile development;flexible development;rapid development;software
	architecture;software development;software architecture;software
	prototyping;}
}

@INPROCEEDINGS{4299951,
  author = {Boness, K. and Harrison, R.},
  title = {Goal Sketching: Towards Agile Requirements Engineering},
  booktitle = {Software Engineering Advances, 2007. ICSEA 2007. International Conference
	on},
  year = {2007},
  pages = {71},
  month = {aug.},
  __markedentry = {[kimi:2]},
  abstract = {This paper describes a technique that can be used as part of a simple
	and practical agile method for requirements engineering. The technique
	can be used together with Agile Programming to develop software in
	internet time. We illustrate the technique and introduce lazy refinement,
	responsibility composition and context sketching. Goal sketching
	has been used in a number of real-world development projects, one
	of which is described here.},
  doi = {10.1109/ICSEA.2007.36},
  excludekimi = {abstract},
  keywords = {agile programming;agile requirements engineering;context sketching;goal
	sketching;lazy refinement;responsibility composition;software development;software
	project management;formal specification;project management;software
	development management;}
}

@INPROCEEDINGS{5298373,
  author = {Nikitina, N. and Kajko-Mattsson, M.},
  title = {Historical Perspective of Two Process Transitions},
  booktitle = {Software Engineering Advances, 2009. ICSEA '09. Fourth International
	Conference on},
  year = {2009},
  pages = {289 -298},
  month = {sept.},
  abstract = {Process changes do not always lead to changes for the better. They
	may lead for the worse or they may not imply any improvements at
	all. In this paper, we report on the results of two process transitions
	in Mobile Navigation. By looking at the problems and benefits as
	encountered before and after each transition, we conclude that many
	of the problems are organization and people related. A method cannot
	help to improve the process if people and organizations do not follow
	it. Both organizations and people must mature with respect to management,
	self-organization, and discipline. It is only then the newly introduced
	method will improve the process for the better.},
  doi = {10.1109/ICSEA.2009.49},
  keywords = {Mobile Navigation;process changes;process improvements;two process
	transitions;software engineering;}
}

@INPROCEEDINGS{5298747,
  author = {Correia, F.F. and Aguiar, A.},
  title = {Software Knowledge Capture and Acquisition: Tool Support for Agile
	Settings},
  booktitle = {Software Engineering Advances, 2009. ICSEA '09. Fourth International
	Conference on},
  year = {2009},
  pages = {542 -547},
  month = {sept.},
  __markedentry = {[kimi:2]},
  abstract = {Knowledge plays a key role in software development, and the effectiveness
	of how it is captured into artifacts, and acquired by other team
	members, is of crucial importance to a project's success. The life-cycle
	of knowledge in software development is derived from the adopted
	artifacts, practices and tools. These axes are here reviewed from
	a knowledge capture and acquisition perspective, and several open
	research issues are identified. The present work is being carried
	out in the context of the author's doctoral research. The research
	objectives are derived from the presented open issues, and a research
	strategy is outlined. Some preliminary results are also presented.},
  doi = {10.1109/ICSEA.2009.85},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {agile settings;author doctoral research;knowledge life-cycle;software
	development;software engineering tool;software knowledge acquisition;knowledge
	acquisition;software engineering;}
}

@INPROCEEDINGS{5298415,
  author = {Izumi, N. and Takaki, O. and Hasida, K.},
  title = {Service System Development Based on Web Process Ontology},
  booktitle = {Software Engineering Advances, 2009. ICSEA '09. Fourth International
	Conference on},
  year = {2009},
  pages = {222 -228},
  month = {sept.},
  __markedentry = {[kimi:2]},
  abstract = {This paper describes a methodology that providers of services can
	use to adapt their software applications, both intra-net and inter-net
	systems, to the changes of their business environment. The methodology
	enables agile software development based on a Web process architecture
	that executes ontology-based business processes as workflow systems.
	Ontology construction technology is used to extract business model
	of tasks and processes from business documents, model them, and organize
	them. Reflective semantics interoperates between RDF/XML representation
	of business tasks and Java objects of business process primitives.
	The gap between business models and service system applications is
	bridged by a Java-based software framework that executes business
	process as a set of Web page transitions. As a result, a business
	model is implemented as a thin client application. The software framework
	enables rapid spiral development of short-term cycles because business
	modelers, software developers, and users are able to share the same
	framework of description and systems. The feasibility of the methodology
	described here has been demonstrated in projects developing local-government
	workflow systems.},
  doi = {10.1109/ICSEA.2009.98},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {Java objects;RDF/XML representation;Web page;Web process architecture;agile
	software development;business environment;business tasks;ontology;service
	system development;Java;XML;business process re-engineering;ontologies
	(artificial intelligence);software architecture;}
}

@INPROCEEDINGS{4031821,
  author = {Mnkandla, E. and Dwolatzky, B.},
  title = {Defining Agile Software Quality Assurance},
  booktitle = {Software Engineering Advances, International Conference on},
  year = {2006},
  pages = {36},
  month = {oct. },
  abstract = {Agile software development methodologies have since their inception
	claimed to improve the quality of the software product. The agile
	practitioners have also claimed that use of the agile approach has
	greatly improved the quality of their products. However, software
	quality is a rather complex concept; in fact some have defined the
	entire discipline of software engineering as the production of quality
	software. Quality according to ISO 9000 is defined as "the totality
	of characteristics of an entity that bear on its ability to satisfy
	stated or implied needs." In the existing agile literature there
	as not been a comprehensive definition of which characteristics of
	software quality are improved by the use of agile processes in developing
	software. In this paper an innovative technique is introduced for
	evaluating agile methodologies in order to determine which factors
	of software quality they improve. The technique uses a set of adapted
	software quality factors as defined by Bertrand Meyer and McCall.},
  doi = {10.1109/ICSEA.2006.261292}
}

@INPROCEEDINGS{6068329,
  author = {Keznikl, J. and Malohlava, M. and Bures, T. and Hnetynka, P.},
  title = {Extensible Polyglot Programming Support in Existing Component Frameworks},
  booktitle = {Software Engineering and Advanced Applications (SEAA), 2011 37th
	EUROMICRO Conference on},
  year = {2011},
  pages = {107 -115},
  month = {30 2011-sept. 2},
  __markedentry = {[kimi:2]},
  abstract = {Utilization of various agile development practices brings demand of
	short development cycle with stress on early deployment and rapid
	delivery. Such practices require techniques permitting rapid prototyping
	of systems, corresponding tests and simulations. One of the well-adopted
	rapid prototyping techniques is polyglot programming combining multiple,
	mainly scripting, languages during development of systems. This permits
	the use of a specialized language for dedicated system concerns and
	also allows for a continuous change and re-deployment of implementation.
	Despite the advantages, rapid prototyping with help of polyglot programming
	is still not well supported in the domain of component-based systems,
	which makes it difficult to quickly prototype and test these systems.
	To address the obstacle, the paper describes a general technique
	for transparent and extensible combining of multiple languages for
	purpose of rapid prototyping during development of component-based
	systems with help of advanced component frameworks.},
  doi = {10.1109/SEAA.2011.25},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {advanced component frameworks;agile development practices;component
	frameworks;component-based system development;extensible polyglot
	programming support;rapid prototyping techniques;scripting languages;authoring
	languages;object-oriented programming;software prototyping;}
}

@INPROCEEDINGS{6068361,
  author = {Borges, P. and Monteiro, P. and Machado, R.J.},
  title = {Tailoring RUP to Small Software Development Teams},
  booktitle = {Software Engineering and Advanced Applications (SEAA), 2011 37th
	EUROMICRO Conference on},
  year = {2011},
  pages = {306 -309},
  month = {30 2011-sept. 2},
  abstract = {In the last decades we have been witnessing a significant increase
	in the complexity inherent to software development projects, due
	not only to a higher degree of sophistication in the contexts they
	aim to serve, but also to the natural evolution of the features implemented
	by the available software systems and applications. However, the
	reduced dimension of many software corporations imposes a significant
	constraint to the group of individuals that might be involved in
	each project, with obvious consequences to their efficiency and effectiveness.
	This paper describes how to accomplish a configuration of the Rational
	Unified Process (RUP) in order to obtain one set of RUP roles that,
	without neglecting any critical role of the software development
	process, may easily be adopted by a small or medium software development
	team during the project execution period.},
  doi = {10.1109/SEAA.2011.55},
  keywords = {RUP tailoring;computational complexity;rational unified process;small
	software development teams;software corporations;software development
	process;software development projects;computational complexity;software
	development management;}
}

@INPROCEEDINGS{6068363,
  author = {Seikola, M. and Loisa, H. and Jagos, A.},
  title = {Kanban Implementation in a Telecom Product Maintenance},
  booktitle = {Software Engineering and Advanced Applications (SEAA), 2011 37th
	EUROMICRO Conference on},
  year = {2011},
  pages = {321 -329},
  month = {30 2011-sept. 2},
  abstract = {Telecom Product Maintenance at two Ericsson R amp;D Centers implemented
	Kanban. The third level maintenance is performed by the Customer
	Support Request (CSR) teams and by the design maintenance teams,
	which are located in two sites. There are separate backlogs for the
	customer support and for the design maintenance in the primary site
	and a third backlog for the design maintenance in the secondary site.
	Pull mindset, team working, team empowerment, and continuous improvement
	have become part of the everyday activities. Best practices from
	Scrum have been selected to complement the Kanban implementation.
	Also, the metrics have been reviewed. The major challenges have been
	related to the boundary rules, for instance, multi-site working,
	the platform dependency and the service level agreements but also
	to the roles and responsibilities. The Kanban boards and the chosen
	practices have been adjusted as the understanding of Lean has increased.
	This industry paper presents the journey to Lean product maintenance
	including the identification of the key success factors that are
	to some extent generalizable. First, the overall implementation is
	discussed followed by a deeper description of the implementation
	both in the CSR handling and in the Fault Handling (design maintenance)
	including also the experiences from the secondary R amp;D site. The
	paper continues by discussing the identified challenges and positive
	effects. At the end of the paper, the implementation concepts and
	key success factors are stated.},
  doi = {10.1109/SEAA.2011.56},
  keywords = {CSR handling;Ericsson R amp;D Centers;Kanban implementation;Scrum;boundary
	rules;continuous improvement;customer support request teams;design
	maintenance teams;fault handling;lean product maintenance;lean software
	development;multisite working;platform dependency;pull mindset;service
	level agreements;team empowerment;team working;telecom product maintenance;customer
	services;design engineering;kanban;lean production;maintenance engineering;production
	engineering computing;team working;telecommunication industry;}
}

@INPROCEEDINGS{6068383,
  author = {Osorio, J.A. and Chaudron, M.R.V. and Heijstek, W.},
  title = {Moving from Waterfall to Iterative Development: An Empirical Evaluation
	of Advantages, Disadvantages and Risks of RUP},
  booktitle = {Software Engineering and Advanced Applications (SEAA), 2011 37th
	EUROMICRO Conference on},
  year = {2011},
  pages = {453 -460},
  month = {30 2011-sept. 2},
  abstract = {This paper describes an exploratory case study of the benefits of
	using an iterative development process versus a waterfall process.
	The study was performed in a division of an IT department of a large
	multinational company. A set of people in different roles in this
	organization were interviewed. We triangulated the results with the
	opinion of experts from other companies and existing literature.
	The research finds several categories of factors for which the use
	of iterative development is preferable over waterfall development
	in terms of business value, however there are also some clear costs
	and limitations that should be explicitly considered by any company
	planning on introducing an iterative development process.},
  doi = {10.1109/SEAA.2011.69},
  keywords = {IT department;RUP;iterative development process;multinational company;rational
	unified process;waterfall;software engineering;}
}

@INPROCEEDINGS{6328180,
  author = {Olsson, H.H. and Alahyari, H. and Bosch, J.},
  title = {Climbing the Stairway to Heaven -- A Mulitiple-Case Study Exploring
	Barriers in the Transition from Agile Development towards Continuous
	Deployment of Software},
  booktitle = {Software Engineering and Advanced Applications (SEAA), 2012 38th
	EUROMICRO Conference on},
  year = {2012},
  pages = {392 -399},
  month = {sept.},
  abstract = {Agile software development is well-known for its focus on close customer
	collaboration and customer feedback. In emphasizing flexibility,
	efficiency and speed, agile practices have lead to a paradigm shift
	in how software is developed. However, while agile practices have
	succeeded in involving the customer in the development cycle, there
	is an urgent need to learn from customer usage of software also after
	delivering and deployment of the software product. The concept of
	continuous deployment, i.e. the ability to deliver software functionality
	frequently to customers and subsequently, the ability to continuously
	learn from real-time customer usage of software, has become attractive
	to companies realizing the potential in having even shorter feedback
	loops. However, the transition towards continuous deployment involves
	a number of barriers. This paper presents a multiple-case study in
	which we explore barriers associated with the transition towards
	continuous deployment. Based on interviews at four different software
	development companies we present key barriers in this transition
	as well as actions that need to be taken to address these.},
  doi = {10.1109/SEAA.2012.54},
  keywords = {agile software development;customer collaboration;customer feedback;multiplecase
	study exploring barriers;software continuous deployment;software
	functionality;software product;stairway to heaven;software prototyping;}
}

@INPROCEEDINGS{1517743,
  author = {Westerheim, H. and Hanssen, G.K.},
  title = {The introduction and use of a tailored unified process - a case study},
  booktitle = {Software Engineering and Advanced Applications, 2005. 31st EUROMICRO
	Conference on},
  year = {2005},
  pages = { 196 - 203},
  month = {aug.-3 sept.},
  abstract = { The unified process has become a widely known and used framework
	for software development organizations. The use of the framework,
	however, is not straight forward, and it has not been the intention
	from the creators of the framework that the development organization
	should use it 'out of the box'. Some sort of tailoring or adoption
	is therefore necessary. This paper describes and investigates a case
	of tailoring, introducing and using RUP in a large software organization.
	The findings indicate that sufficient knowledge and motivation is
	an important factor of adopting a methodology.},
  doi = {10.1109/EUROMICRO.2005.57},
  keywords = { rational unified process; software development; tailored unified
	process; DP industry; software development management; software process
	improvement;}
}

@INPROCEEDINGS{4725726,
  author = {Moser, T. and Kunz, K. and Matousek, K. and Wahyudin, D.},
  title = {Investigating UML- and Ontology-Based Approaches for Process Improvement
	in Developing Agile Multi-Agent Systems},
  booktitle = {Software Engineering and Advanced Applications, 2008. SEAA '08. 34th
	Euromicro Conference},
  year = {2008},
  pages = {224 -231},
  month = {sept.},
  __markedentry = {[kimi:1]},
  abstract = {Multi-agent systems (MAS) that link business and physical domains
	such as in production automation need to be reconfigured correctly
	and efficiently to adapt to new requirements. The standard UML-based
	approach only partly supports the reconfiguration process to capture
	agent classes and their instances, while ontologies allow modeling
	all aspects of MAS design in one common continuous model. In this
	paper we introduce a MAS development life cycle and focus on the
	product-specific reconfiguration of a system built mostly from reusable
	agents. We investigate the process variants based on (a) UML and
	(b) ontologies. We evaluate both process variants in a feasibility
	study using fundamental illustrative scenarios from an industrial
	production automation environment and derive lessons learned for
	process improvement in building sustainable MAS in the scope of production
	automation.},
  doi = {10.1109/SEAA.2008.37},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1089-6503},
  keywords = {UML;agile multi-agent systems;business;industrial production automation
	environment;ontology-based approach;process improvement;product-specific
	reconfiguration;Unified Modeling Language;multi-agent systems;ontologies
	(artificial intelligence);production engineering computing;software
	reusability;}
}

@INPROCEEDINGS{4725725,
  author = {Moe, N.B. and Aurum, A.},
  title = {Understanding Decision-Making in Agile Software Development: A Case-study},
  booktitle = {Software Engineering and Advanced Applications, 2008. SEAA '08. 34th
	Euromicro Conference},
  year = {2008},
  pages = {216 -223},
  month = {sept.},
  __markedentry = {[kimi:]},
  abstract = {A challenge with introducing agile software development is changing
	the way decisions are made. In this paper, we discuss the decision
	making processes used in Scrum teams. We found that a prerequisite
	for introducing Scrum is the alignment of decisions on a strategic,
	tactical and operational level. In addition, specialisation can be
	a barrier for the decision-making process on the operational level,
	and that daily meetings are important for preventing decision-hijacking.
	Also removing the hold-up problem makes it easier for developers
	to participate in the decision-making process.},
  doi = {10.1109/SEAA.2008.55},
  excluded = {Verify (Kimi)},
  issn = {1089-6503},
  keywords = {Scrum teams;agile software development;daily meetings;decision making;decision-hijacking;decision
	making;software engineering;}
}

@INPROCEEDINGS{5349853,
  author = {Engum, E.A. and Racheva, Z. and Daneva, M.},
  title = {Sprint Planning with a Digital Aid Tool: Lessons Learnt},
  booktitle = {Software Engineering and Advanced Applications, 2009. SEAA '09. 35th
	Euromicro Conference on},
  year = {2009},
  pages = {259 -262},
  month = {aug.},
  abstract = {Managing the product's backlog is a major task in agile projects.
	This case study reports on one organization's experiences from the
	transition to a backlog management tool and its contribution to improving
	sprint planning. Our key lessons learnt are that a tool is particularly
	appropriate to organize and specify backlog items in a transparent
	manner and to handle dependencies. However, we also observed an overhead
	in backlog management and in reporting during meetings. The concrete
	project settings play the paramount role in whether such a tool helps
	or harms the process.},
  doi = {10.1109/SEAA.2009.68},
  excluded = {Kimi, title},
  issn = {1089-6503},
  keywords = {agile software development;backlog management tool;digital aid tool;product
	backlog management;software process improvement;sprint planning;planning;software
	development management;software process improvement;}
}

@INPROCEEDINGS{5349837,
  author = {Ternite, T.},
  title = {Process Lines: A Product Line Approach Designed for Process Model
	Development},
  booktitle = {Software Engineering and Advanced Applications, 2009. SEAA '09. 35th
	Euromicro Conference on},
  year = {2009},
  pages = {173 -180},
  month = {aug.},
  __markedentry = {[kimi:2]},
  abstract = {Standard process models like RUP or the German V-Modell XT are developed
	to be used in an organizational environment. Yet introducing such
	a process model into an organization is no simple task. It is usually
	accompanied by either reorganizing internal processes to comply with
	a standard process model or by adaptation of the process model to
	organizational structures. The latter is an approach that can often
	be found in practice and is subject to this paper.The paper describes
	a generalization of the process model architecture of the V-Modell
	XT 1.3. Compared to the previous version 1.2.1.1, its metamodel has
	completely been revised with respect to a new adaptation concept.
	We will see how this concept allows the implementation of a so called
	process line. Software process lines are derived from software product
	lines and can be used for the adaptation of standard processes during
	process model development, project initialization and project runtime.},
  doi = {10.1109/SEAA.2009.48},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {1089-6503},
  keywords = {German V-Modell XT;RUP;metamodel;organizational structures;process
	model development;software process lines;software product line approach;software
	project initialization;software project runtime;organisational aspects;software
	architecture;software development management;software process improvement;}
}

@INPROCEEDINGS{5542939,
  author = {Dahiya, Deepak},
  title = {Enterprise systems development: Impact of various software development
	methodologies},
  booktitle = {Software Engineering and Data Mining (SEDM), 2010 2nd International
	Conference on},
  year = {2010},
  pages = {117 -122},
  month = {june},
  abstract = {Software Development Methodologies have always been the main focus
	in the software development life cycle of any project. Each evolutionary
	shift introduced new ways of thinking and viewing problems as well
	as introducing strengths and weaknesses in software development.
	However, identifying one stop solution in terms of a software development
	methodology for enterprise wide application development whose various
	subcomponents or sub-stages can be best used to describe a software
	development scenario is still an evolving domain. This, coupled with
	the reality that computer science and its allied areas like information
	systems and information technology domains are moving forward rapidly
	with regards to available technologies, making it extremely difficult
	task for practitioners to maintain pace with the available information
	technologies and their application in various domains. It is to address
	these scenarios and probabilities that this research paper examines
	various software development methodologies or process models and
	their impact on the overall software development life cycle.}
}

@INPROCEEDINGS{5982247,
  author = {Hajjdiab, H. and Taleb, A.S.},
  title = {Agile adoption experience: A case study in the U.A.E},
  booktitle = {Software Engineering and Service Science (ICSESS), 2011 IEEE 2nd
	International Conference on},
  year = {2011},
  pages = {31 -34},
  month = {july},
  abstract = {Agile software development methods and techniques have gained attention
	in the recent few years. The main motive behind adopting agile software
	development approach is to improve end-product quality, enhance developer's
	moral and achieve stakeholder satisfaction. However, Agile adoption
	always comes with special challenges and thus fundamental organizational
	changes are necessary for successful outcomes. In this paper we present
	an in-depth case study for adopting agile methods to a government
	entity in the United Arab Emirates (U.A.E). The government entity
	software development teams have used the traditional waterfall approach
	for many years and decided to move to agile software development
	approach. This study highlights the challenges faced during the adoption
	of the Scrum method. Without proper preparation, the challenges will
	be significant enough to put the agile adoption on hold and make
	the software development teams go back to the traditional waterfall
	method.},
  doi = {10.1109/ICSESS.2011.5982247},
  keywords = {Scrum method;U.A.E;United Arab Emirates;agile adoption experience;agile
	software development methods;fundamental organizational changes;organisational
	aspects;software prototyping;}
}

@INPROCEEDINGS{6269412,
  author = {Tian Baojun},
  title = {Formal modelling and validation for software process based on CPN},
  booktitle = {Software Engineering and Service Science (ICSESS), 2012 IEEE 3rd
	International Conference on},
  year = {2012},
  pages = {89 -92},
  month = {june},
  __markedentry = {[kimi:1]},
  abstract = {Currently, many modelling methods for software process are semiformal.
	It is difficult to analyze semantics and verify correctness for a
	key system. Coloured Petri Net (CPN) based on mathematics is an executable
	model, which has rigorous formal semantics and analysis methods.
	This paper presents a method of formal modelling and validation for
	software process that transforms UML model based on RUP to CPN and
	uses simulation to investigate the behaviour of modelled system.},
  doi = {10.1109/ICSESS.2012.6269412},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {CPN;RUP;UML model;coloured Petri net;formal modelling;formal semantics;formal
	validation;semantics analysis method;software process;Petri nets;Unified
	Modeling Language;formal verification;programming language semantics;}
}

@INPROCEEDINGS{5693209,
  author = {Abad, Z.S.H. and Sadi, M.H. and Ramsin, R.},
  title = {Towards Tool Support for Situational Engineering of Agile Methodologies},
  booktitle = {Software Engineering Conference (APSEC), 2010 17th Asia Pacific},
  year = {2010},
  pages = {326 -335},
  month = {30 2010-dec. 3},
  abstract = {Various agile software development methodologies, practices, and techniques
	have been proposed in the last decade, some present novel ideas,
	while many are simply made up of tasks and techniques borrowed from
	prominent agile methodologies. Each of these methodologies prescribes
	a set of practices and techniques which are deemed appropriate for
	application in a specific context. However, there exists no single
	method which fits all project situations. This has resulted in the
	advent of Situational Method Engineering (SME) approaches, which
	are used for developing software methodologies that are tailored
	to fit the specific circumstances of the project situation at hand.
	Since tool support has become an essential prerequisite for widespread
	adoption of software engineering methods, provision of Computer-Aided
	Method Engineering (CAME) tools has become a priority. We provide
	a basis for the application of assembly-based situational method
	engineering to the development of bespoke agile methodologies. To
	this aim, a comprehensive set of relevant methodology features has
	first been identified, spanning the range of possible requirements
	that a method engineer may define for the agile methodology under
	development. Based on this set of requirements, a method base has
	been proposed that contains the method chunks necessary for satisfying
	these requirements. The proposed method base conforms to the Software
	Process Engineering Metamodel (SPEM 2.0), and can be immediately
	plugged into CAME tools which implement this metamodel, including
	the Eclipse Process Framework Composer (EPFC).},
  doi = {10.1109/APSEC.2010.45},
  excluded = {Kimi, title},
  issn = {1530-1362},
  keywords = {CAME tools;EPFC;SME approaches;SPEM 2.0;agile software development
	methodology;assembly-based situational method engineering;bespoke
	agile methodology;computer-aided method engineering;eclipse process
	framework composer;situational engineering;software engineering methods;software
	methodology;software process engineering metamodel;tool support;software
	prototyping;software tools;}
}

@INPROCEEDINGS{5693208,
  author = {Guoping Rong and Dong Shao and He Zhang},
  title = {SCRUM-PSP: Embracing Process Agility and Discipline},
  booktitle = {Software Engineering Conference (APSEC), 2010 17th Asia Pacific},
  year = {2010},
  pages = {316 -325},
  month = {30 2010-dec. 3},
  abstract = {With the research and debates on software process, the mainstream
	software processes can be grouped into two categories, the plan-driven
	(disciplined) processes and the agile processes. In terms of the
	classification, personal software process (PSP) is a typical plan-driven
	process while SCRUM is an agile-style instance. Although they are
	distinct from each other per se, our research found that PSP and
	SCRUM may also complement each other when SCRUM provides an agile
	process management framework, and PSP provides the skills and disciplines
	that a qualified team member needs to estimate, plan and manage his/her
	job. This paper proposes an integrated process model, SCRUM-PSP,
	which combines the strengths of each. We also verified that this
	integrated process by adopting it into a real project environment
	where typical agile processes are favored, i.e. change-prone requirements,
	rapid development, fast delivery, etc. As a result, manageability
	and predictability which traditional plan-driven processes usually
	benefit can also be achieved. The work described in this paper is
	a worthy attempt to embrace both process agility and discipline.},
  doi = {10.1109/APSEC.2010.44},
  issn = {1530-1362},
  keywords = {SCRUM-PSP;agile process management framework;integrated process model;personal
	software process;process agility;software process improvement;software
	prototyping;}
}

@INPROCEEDINGS{6130648,
  author = {Buchan, J. and Ling Li and MacDonell, S.G.},
  title = {Causal Factors, Benefits and Challenges of Test-Driven Development:
	Practitioner Perceptions},
  booktitle = {Software Engineering Conference (APSEC), 2011 18th Asia Pacific},
  year = {2011},
  pages = {405 -413},
  month = {dec.},
  abstract = {This report describes the experiences of one organization's adoption
	of Test Driven Development (TDD) practices as part of a medium-term
	software project employing Extreme Programming as a methodology.
	Three years into this project the team's TDD experiences are compared
	with their non-TDD experiences on other ongoing projects. The perceptions
	of the benefits and challenges of using TDD in this context are gathered
	through five semi-structured interviews with key team members. Their
	experiences indicate that use of TDD has generally been positive
	and the reasons for this are explored to deepen the understanding
	of TDD practice and its effects on code quality, application quality
	and development productivity. Lessons learned are identified to aid
	others with the adoption and implementation of TDD practices, and
	some potential further research areas are suggested.},
  doi = {10.1109/APSEC.2011.44},
  excluded = {Kimi, title},
  issn = {1530-1362},
  keywords = {application quality;code quality;development productivity;extreme
	programming;medium-term software project;team TDD experiences;test-driven
	development;program testing;project management;software management;software
	prototyping;}
}

@INPROCEEDINGS{5783144,
  author = {Nakicenovic, M.B.},
  title = {A pragmatic approach for message modeling - A case study in an agile
	organization},
  booktitle = {Software Engineering Conference (CEE-SECR), 2010 6th Central and
	Eastern European},
  year = {2010},
  pages = {12 -18},
  month = {oct.},
  abstract = {This case-study describes how to introduce a pragmatic Model Driven
	Development (MDD) approach in a large, world-wide financial services
	software company with a conservative culture and high time-to-market
	constraints. By the application of agile principles a pragmatic simplified
	approach was produced by using only a single modeling level and using
	XML as modeling language. Although simplified, this approach could
	still significantly improve the application architecture of financial
	message structure definitions by reducing duplication and automating
	development tasks.},
  doi = {10.1109/CEE-SECR.2010.5783144},
  excluded = {Kimi, title},
  keywords = {XML;agile organization;development task automation;duplication reduction;financial
	message structure definitions;financial services software company;modeling
	language;pragmatic model driven development;time-to-market constraints;XML;electronic
	commerce;organisational aspects;software engineering;}
}

@INPROCEEDINGS{5783181,
  author = {Ovechkin, D.},
  title = {Tree-level planning in Agile, tracking an reaction},
  booktitle = {Software Engineering Conference (CEE-SECR), 2010 6th Central and
	Eastern European},
  year = {2010},
  pages = {226 -229},
  month = {oct.},
  abstract = {Agile is the main stream in a software development process today.
	There are so many articles and books describing SCRUM, Kanban and
	Lean but after reading you probably will think about how to adopt
	the described methodology in real life. In my article I am going
	to share a real experience in a multi-level planning in Agile what
	was adopted and tested in a real development center. I will observe
	quarter, release and sprint planning. Also I will touch a reaction
	mechanism on a customer when he changes plans and scope and what
	you need to be ready to that.},
  doi = {10.1109/CEE-SECR.2010.5783181},
  keywords = {Agile;Kanban;Lean;SCR UM;quarter planning;reaction mechanism;release
	planning;software development process;sprint planning;tree level
	planning;planning;software prototyping;trees (mathematics);}
}

@INPROCEEDINGS{5783157,
  author = {Obukhova, A.},
  title = {Fixed price Agile projects. How it works},
  booktitle = {Software Engineering Conference (CEE-SECR), 2010 6th Central and
	Eastern European},
  year = {2010},
  pages = {93 -96},
  month = {oct.},
  abstract = {This paper focuses on the management of the Agile projects running
	under Fixed Price Contracts. On May 2008 Exigen Services announced
	the launch of Innovative Fixed-Price Agile Package. Flex-agility
	is a packaged services offering which combines Agile methodologies
	with customer-aligned governance and fixed priced commercial terms.
	This package provides customers certainty in on-time and on-budget
	delivery, eliminating the difficulty of changing requirements while
	guaranteeing maximum value from their IT investments. The Flex-agility
	offering provides for changes to be introduced during any project
	without impacting the original schedule or budget. Use of Agile methods
	reduces the financial risks associated with large IT projects by
	treating the cause of the risk, not simply applying off-shore manpower.
	The paper examines the experience of running this model and describes
	the details, know-how and success factors that should be met to work
	under these types of contracts. At this moment several Fixed Price
	Agile contracts were completed and running and also this contractual
	model became standard approach for some of the large customers that
	have multiple projects running in XS.},
  doi = {10.1109/CEE-SECR.2010.5783157},
  keywords = {Exigen Services;IT investments;IT projects;agile project managament;customer-aligned
	governance;financial risk reduction;fixed price agile projects;fixed
	price contracts;flex-agility;innovative fixed-price agile package;onbudget
	delivery;ontime delivery;contracts;investment;pricing;project management;software
	prototyping;}
}

@INPROCEEDINGS{5783178,
  title = {Table of contents},
  booktitle = {Software Engineering Conference (CEE-SECR), 2010 6th Central and
	Eastern European},
  year = {2010},
  pages = {3 -4},
  month = {oct.},
  __markedentry = {[kimi:1]},
  abstract = {The following topics are dealt with: language based approach; pragmatic
	approach; scrum methodology; architecture lifecycle management; automating
	programming; clone detection; conceptual models; configuration oriented
	programming; defect detection; enterprise architecture modeling;
	expert system; fixed price agile projects; usability methods implementation;
	interactive 3D scene modeling; logical data model transformation;
	customer expectations management; model driven approach; mutation
	testing framework; stereo 3D TV application; software integration
	process; software requirements; SAAS support; semantic APIs; source
	code modification technology and tree level planning.},
  doi = {10.1109/CEE-SECR.2010.5783178},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {SCRUM methodology;SaaS support;architecture lifecycle management;automating
	programming;clone detection;conceptual model;configuration oriented
	programming;customer expectation;defect detection;enterprise architecture
	modeling;expert system;fixed price agile project;header driven generation;interactive
	3D scene modeling;language based approach;logical data model transformation;model
	driven approach;mutation testing framework;pragmatic approach;semantic
	API;software integration process;software requirement;source code
	modification technology;stereo 3D TV application;tree level planning;usability
	method;application program interfaces;expert systems;integrated software;program
	testing;software engineering;software reliability;}
}

@INPROCEEDINGS{5501136,
  author = {Mayorov, A.V.},
  title = {XSLT in Agile web development},
  booktitle = {Software Engineering Conference in Russia (CEE-SECR), 2009 5th Central
	and Eastern European},
  year = {2009},
  pages = {303 -306},
  month = {oct.},
  abstract = {Agile requires accordingly agile software architecture and programming
	tools. For web development popular agile architecture is MVC (Model-View-Controller).
	For transferring data between controller and view XML is very suitable.
	And to transform it into final form it's better to use XSLT. XSLT
	is not very popular among developers, because they think this is
	just yet another #x201C;strange #x201D; language, without any real
	advantage comparing to usual languages. But advantages are real -
	XSLT allows for very interesting results, not possible with other
	templating languages. It definitely worth studying and this is not
	hard.},
  doi = {10.1109/CEE-SECR.2009.5501136},
  excluded = {Kimi, title},
  keywords = {XML;XSLT;agile Web development;agile software architecture;agile software
	programming tools;model view controller;Internet;XML;software architecture;software
	prototyping;software tools;}
}

@INPROCEEDINGS{5501151,
  author = {Ieshin, A. and Gerenko, M. and Dmitriev, V.},
  title = {Test automation: Flexible way},
  booktitle = {Software Engineering Conference in Russia (CEE-SECR), 2009 5th Central
	and Eastern European},
  year = {2009},
  pages = {249 -252},
  month = {oct.},
  abstract = {F-Secure is a global leader in providing security as a service through
	ISP's and mobile operators [1]. The company first used Agile more
	than 5 years ago and is still in the transition and building the
	true Agile culture. Test automation (TA) is one of Agile practices
	that the company has been focusing on and improving lately [2]. This
	paper describes how TA has been implemented in the company, benefits
	and drawbacks of different approaches, and key learnings. Our findings
	may be of interest and help for other Agile teams using or building
	a automation test system.},
  doi = {10.1109/CEE-SECR.2009.5501151},
  excluded = {Kimi, title},
  keywords = {F-Secure;ISP;agile practices;automation test system;mobile operators;security
	as a service;automatic test software;program testing;software prototyping;}
}

@INPROCEEDINGS{566746,
  author = {Gibbon, C.A. and Higgins, C.A.},
  title = {Towards a learner-centred approach to teaching object-oriented design},
  booktitle = {Software Engineering Conference, 1996. Proceedings., 1996 Asia-Pacific},
  year = {1996},
  pages = {110 -117},
  month = {dec},
  abstract = {Recently, the problems attributed to reaching object-oriented design
	(OOD) have been likened to those encountered when applying it. The
	current waterfall approach to teaching OOD adopts a ldquo;lecture,
	apply and assess rdquo; curriculum that leaves little scope for feedback
	using iterative and recursive mechanisms touted by object-oriented
	techniques. The paper reports on a learner-centred approach to teaching
	object technology at the University of Nottingham, UK. The differences
	between object-oriented and teaching methods are amplified and a
	solution expressed in the form of quality enhancing techniques. Design
	heuristics are employed to pinpoint design anomalies and suggest
	reparative mechanisms to enhance product quality. A prototypical
	tool that implements the current catalogue of automatable design
	heuristics is outlined and progress towards it given},
  doi = {10.1109/APSEC.1996.566746},
  excluded = {Kimi, title},
  keywords = {University of Nottingham;automatable design heuristics;design anomalies;design
	heuristics;feedback;iterative mechanisms;learner-centred approach;object-oriented
	design teaching;product quality;prototypical tool;quality enhancing
	techniques;recursive mechanisms;reparative mechanisms;teaching object
	technology;computer science education;object-oriented methods;object-oriented
	programming;software tools;teaching;}
}

@INPROCEEDINGS{896702,
  author = {Bennett, K. and Layzell, P. and Budgen, D. and Brereton, P. and Macaulay,
	L. and Munro, M.},
  title = {Service-based software: the future for flexible software},
  booktitle = {Software Engineering Conference, 2000. APSEC 2000. Proceedings. Seventh
	Asia-Pacific},
  year = {2000},
  pages = {214 -221},
  __markedentry = {[kimi:1]},
  abstract = {For the past 40 years, the techniques, processes and methods of software
	development have been dominated by supply-side issues, giving rise
	to a software industry oriented towards developers rather than users.
	To achieve the levels of functionality, flexibility and time-to-market
	required by users, a radical shift is required in the development
	of software, with a more demand-centric view, leading to software
	which will be delivered as a service within the framework of an open
	marketplace. Already, there are some signs that this approach is
	being adopted by industry, but in a very limited way. We summarise
	research and a research method which has resulted in a long-term
	strategic view of software engineering innovation. Based on this
	foundation, we describe more recent work, which has resulted in an
	innovative demand-side model for the future of software. We propose
	a service architecture in which components may be bound instantly,
	just at the time they are needed, and then the binding may be discarded.
	A major benefit of this approach is that it leads to highly flexible
	and agile software that should be able to meet rapidly changing business
	needs },
  doi = {10.1109/APSEC.2000.896702},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1530-1362},
  keywords = {component binding;demand-centric view;demand-side model;flexible software;future;long-term
	strategic view;open marketplace;rapidly changing business needs;service
	architecture;service-based software;software engineering innovation;software
	functionality;software industry;time-to-market;DP industry;computer
	software;software engineering;technological forecasting;user centred
	design;}
}

@INPROCEEDINGS{1182972,
  author = {Rees, M.J.},
  title = {A feasible user story tool for agile software development?},
  booktitle = {Software Engineering Conference, 2002. Ninth Asia-Pacific},
  year = {2002},
  pages = { 22 - 30},
  __markedentry = {[kimi:2]},
  abstract = { User stories form the heart of the Extreme Programming methodology
	planning game. In its turn, Extreme Programming is one of the supporting
	pillars of the wider agile software development process. The user
	stories form a set of central work products that determine the software
	development processes. In the spirit of Extreme Programming the production
	of user stories is kept as simple as possible. Traditionally, user
	stories are hand written on index cards as they are easy to store,
	display, rearrange and distribute to the co-located development team.
	However, virtually all other work products of an application development
	team are in electronic format, and agile software development is
	increasingly being adopted by teams working from remote locations.
	In these circumstances distributed development teams look to software
	solutions for creating and using user stories. This paper surveys
	some of the tools that are being used and examines their suitability
	for the task using a set of requirements. As a result of this investigation
	the author has produced a prototype user story software tool for
	Agile Software Development called DotStories. The paper concludes
	by discussing the features of DotStories and its how closely it can
	approach the ideal user story software tool. Indeed, the proposition
	that software tools can ever improve on index cards is considered
	in the light of experience to date.},
  doi = {10.1109/APSEC.2002.1182972},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {1530-1362},
  keywords = { DotStories; agile software development process; application development
	team; distributed development teams; extreme programming methodology;
	software development; formal specification; software development
	management; software engineering; software tools;}
}

@INPROCEEDINGS{1371914,
  author = {Padberg, F. and Muller, M.M.},
  title = {Modeling the impact of a learning phase on the business value of
	a pair programming project},
  booktitle = {Software Engineering Conference, 2004. 11th Asia-Pacific},
  year = {2004},
  pages = { 142 - 149},
  month = {nov.-3 dec.},
  __markedentry = {[kimi:2]},
  abstract = { Pair programmers need a "warmup phase" before the pair can work at
	full speed. The length of the learning interval varies, depending
	on how experienced the developers are with pair programming and how
	familiar they are with each other. We study how large the impact
	of the lower pair productivity during warmup is on the business value
	of the pair programming project. To this end, we extend our net present
	value model for pair programming to explicitly include a learning
	interval for pairs. We then carry out a simulation study where we
	vary the shape of the learning curve, the length of the learning
	interval, the final productivity level of the pairs, the market pressure,
	and the size of the workforce. Our simulations show that the cost
	of the warmup phase is reasonably small compared to the project value,
	but nonetheless must be taken into account when estimating the project.
	Our results also suggest that the learning overhead is not an obstacle
	to introducing and using pair programming in a real environment.},
  doi = {10.1109/APSEC.2004.67},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {1530-1362},
  keywords = { extreme programming; learning cost; net present value; pair programming;
	project estimation; warmup phase; cost-benefit analysis; programming;
	project management; software cost estimation; software development
	management;}
}

@INPROCEEDINGS{1615073,
  author = {Schneider, J.-G. and Rajesh Vasa},
  title = {Agile practices in software development - experiences from student
	projects},
  booktitle = {Software Engineering Conference, 2006. Australian},
  year = {2006},
  pages = {10 pp. -410},
  month = {april},
  __markedentry = {[kimi:1]},
  abstract = {To address the problems of traditional software development methodologies,
	recent years have seen the introduction of more light-weight or "agile"
	development processes. These processes are intended to support early
	and quick production of working code by structuring the development
	into small release cycles and focus on continual interaction between
	developers and customers. As these kinds of software development
	processes are becoming more and more popular in industry, there is
	a growing demand to expose Software Engineering students to agile
	development practices. This, however, is not a straightforward task
	as the corresponding practices cannot be adjusted easily to a learning
	environment or may even run counter to educational goals. In this
	paper, we discuss our experiences in introducing agile practices
	in student software development projects and reflect on both the
	benefits and drawbacks of agile processes in this setting},
  doi = {10.1109/ASWEC.2006.9},
  excluded = {Verify (Kimi)},
  excludekimi = {title},
  issn = {1530-0803},
  keywords = {Software Engineering students;agile development process;software development;student
	project;computer science education;programming;project management;software
	development management;}
}

@INPROCEEDINGS{1615034,
  author = {Lopez-Nores, M. and Pazos-Arias, J.J. and Garcia-Duque, J. and Barragans-Martinez,
	B.},
  title = {An agile approach to support incremental development of requirements
	specifications},
  booktitle = {Software Engineering Conference, 2006. Australian},
  year = {2006},
  pages = { 10 pp.},
  month = {april},
  abstract = { The development of requirements specifications has to face the imprecise
	and changeable knowledge available about the desired systems at the
	early stages of development. In this paper, we take advantage of
	that changeability to introduce an agile approach that helps identify
	suitable evolutions of a specification. This approach provides a
	solution with low computational cost to achieve frequent interaction
	with the stakeholders, this being the key to support the eminently
	creative task of developing requirements specifications.},
  doi = {10.1109/ASWEC.2006.11},
  issn = {1530-0803},
  keywords = { agile approach; requirements specifications; formal specification;}
}

@INPROCEEDINGS{4425877,
  author = {Xiang-xi Meng and Ya-sha Wang and Lei Shi and Feng-jian Wang},
  title = {A Process Pattern Language for Agile Methods},
  booktitle = {Software Engineering Conference, 2007. APSEC 2007. 14th Asia-Pacific},
  year = {2007},
  pages = {374 -381},
  month = {dec.},
  abstract = {Agile methods have become a hot-spot in contemporary research and
	practice on software engineering. There are numerous successful and
	classic cases for applying agile methods. However, software processes
	must adapt to the characteristics of projects, people and organizations.
	Since each software project is unique, we can hardly define a series
	of universal and repeatable processes for all agile projects. A pattern
	is a general solution to a common problem or issue, one from which
	a specific solution may be derived. This paper introduces concept
	of pattern into software process and organizes experience proved
	to be effective in agile methods as a group of patterns. Based on
	this group of process patterns, we propose a process pattern language
	PPL for agile methods. Any agile project can find a series of process
	patterns from PPL according to its characteristics, and generate
	an appropriate process by following instructions from these patterns.
	We also give an example of applying this pattern language to generate
	software processes.},
  doi = {10.1109/ASPEC.2007.72},
  issn = {1530-1362},
  keywords = {agile methods;process pattern language;software engineering;software
	processes;software project;object-oriented programming;software engineering;}
}

@INPROCEEDINGS{5876122,
  author = {Knudson, D. and Radermacher, A.},
  title = {Updating CS capstone projects to incorporate new agile methodologies
	used in industry},
  booktitle = {Software Engineering Education and Training (CSEE T), 2011 24th IEEE-CS
	Conference on},
  year = {2011},
  pages = {444 -448},
  month = {may},
  abstract = {Computer Science capstone programs in many universities provide students
	with the opportunity to develop software systems/tools for industrial
	companies. These projects are often completed using processes that
	can be considered #x201C;heavy weight #x201D; in order to provide
	students the experience of using the same tools and practices found
	in industry. For example, North Dakota State University uses a set
	of processes modeled after CMMI level 2. However, over the past several
	years, many sponsoring companies have transitioned towards agile
	software development processes. In order to better prepare students
	for this, it is necessary to provide capstone projects offering an
	agile option as well as the more traditional methods. Interviews
	were conducted with developers and managers from five sponsoring
	companies using agile processes. The results of these interviews
	and feedback from student teams that have used agile are being used
	to create an agile software development process designed for capstone
	projects. This paper describes the agile methodology, a summary of
	suggestions from interviews and student feedback, and plans for incorporating
	agile processes in the capstone course.},
  doi = {10.1109/CSEET.2011.5876122},
  excluded = {Kimi, title},
  issn = {1093-0175},
  keywords = {CS capstone project;North Dakota State University;agile software development
	process;computer science capstone program;industrial company;software
	system;student team;computer science education;educational institutions;project
	management;software development management;software prototyping;}
}

@INPROCEEDINGS{5876129,
  author = {Feng Ji and Sedano, T.},
  title = {Comparing extreme programming and Waterfall project results},
  booktitle = {Software Engineering Education and Training (CSEE T), 2011 24th IEEE-CS
	Conference on},
  year = {2011},
  pages = {482 -486},
  month = {may},
  abstract = {Waterfall and Extreme Programming are two software project methods
	used for project management. Although there are a number of opinions
	comparing the two methods regarding how they should be applied, none
	have used project data to clearly conclude which one is better. In
	this paper, we present the results of a controlled empirical study
	conducted at Carnegie Mellon University in Silicon Valley to learn
	about the effective transition from traditional development to agile
	development. We conducted a comparison research against these two
	approaches. Multiple teams were assigned a project; some used Waterfall
	development, others used Extreme Programming. The purpose of this
	research is to look at advantages and disadvantages based upon the
	outcomes, generated artifacts, and metrics produced by the teams.},
  doi = {10.1109/CSEET.2011.5876129},
  issn = {1093-0175},
  keywords = {Carnegie Mellon University;Silicon Valley;comparing extreme programming;project
	management;software project methods;waterfall project results;project
	management;software development management;}
}

@INPROCEEDINGS{5876106,
  author = {Venkatagiri, S.},
  title = {Teach Project Management, pack an Agile punch},
  booktitle = {Software Engineering Education and Training (CSEE T), 2011 24th IEEE-CS
	Conference on},
  year = {2011},
  pages = {351 -360},
  month = {may},
  __markedentry = {[kimi:1]},
  abstract = {Agile software development methods have begun to gain wide acceptance
	by the global software industry. However, project managers with academic
	training in ASD are a rarity. This paper outlines a course in IS
	Project Management that is well-suited for an audience consisting
	of students from the information systems, business and computer science
	streams, who normally make up a graduate class. The course begins
	by adopting a process-neutral perspective towards activities such
	as requirements and estimation, before proceeding to discuss Agile
	methods. A team project allows participants to develop a hands-on
	feel for ASD, with the help of an Agile PM platform. The author has
	recently taught the course as proposed at his institution. The paper
	makes some observations on the effect of prior work experience on
	team performance. It concludes with some testimonials from professional
	participants, on the impact that the course has had on their practices
	at work.},
  doi = {10.1109/CSEET.2011.5876106},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1093-0175},
  keywords = {agile software development;process neutral perspective;project management;software
	industry;educational courses;project management;software houses;software
	prototyping;}
}

@INPROCEEDINGS{913815,
  author = {Robillard, P.N. and Kruchten, P. and d'Astous, P.},
  title = {Yoopeedoo (UPEDU): a process for teaching software process},
  booktitle = {Software Engineering Education and Training, 2001. Proceedings. 14th
	Conference on},
  year = {2001},
  pages = {18 -26},
  abstract = {The software engineering process is a growing concern for many software
	development organizations. The need for well-educated software engineers
	is bringing new software engineering programs to universities. In
	many programs, software process education adds up to a few hours
	of lectures in an introductory software engineering course. This
	paper presents the structure and the content for a full, one-semester
	course on software processes, which has been designed in close collaboration
	with industry. The course is based on a software process called UPEDU
	(Unified Process for EDUcation), pronounced Yoopeedoo, and has been
	customized from the Rational Unified Process (RUP) for the educational
	environment. Many artifacts derived from a project case study are
	used as examples or templates. The content of the course is oriented
	towards the cognitive skills needed to perform the various activities
	required in the software process},
  doi = {10.1109/CSEE.2001.913815},
  excluded = {Kimi, title},
  issn = {1093-0175},
  keywords = {RUP;Rational Unified Process;UPEDU;Unified Process for Education;cognitive
	skills;project case study;software engineering course;software process
	education;teaching;templates;universities;computer science education;educational
	courses;software engineering;teaching;}
}

@INPROCEEDINGS{1617340,
  author = {Janzen, D.S. and Saiedian, H.},
  title = {On the Influence of Test-Driven Development on Software Design},
  booktitle = {Software Engineering Education and Training, 2006. Proceedings. 19th
	Conference on},
  year = {2006},
  pages = {141 -148},
  month = {april},
  __markedentry = {[kimi:2]},
  abstract = {Test-driven development (TDD) is an agile software development strategy
	that addresses both design and testing. This paper describes a controlled
	experiment that examines the effects of TDD on internal software
	design quality. The experiment was conducted with undergraduate students
	in a software engineering course. Students in three groups completed
	semester-long programming projects using either an iterative test-first
	(TDD), iterative test-last, or linear test-last approach. Results
	from this study indicate that TDD can be an effective software design
	approach improving both code-centric aspects such as object decomposition,
	test coverage, and external quality, and developer-centric aspects
	including productivity and confidence. In addition, iterative development
	approaches that include automated testing demonstrated benefits over
	a more traditional linear approach with manual tests. This study
	demonstrates the viability of teaching TDD with minimal effort in
	the context of a relatively traditional development approach. Potential
	dangers with TDD are identified regarding programmer motivation and
	discipline. Pedagogical implications and instructional techniques
	which may foster TDD adoption will also be referenced},
  doi = {10.1109/CSEET.2006.25},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {1093-0175},
  keywords = {agile software development;internal software design quality;iterative
	development approach;iterative test-first approach;iterative test-last
	approach;linear test-last approach;object decomposition;programmer
	discipline;programmer motivation;programming project;software engineering
	course;test-driven development;undergraduate students;computer science
	education;educational courses;object-oriented programming;program
	testing;software architecture;software quality;teaching;}
}

@INPROCEEDINGS{4556949,
  author = {Epstein, R.G.},
  title = {Getting Students to Think About How Agile Processes can be Made More
	Secure},
  booktitle = {Software Engineering Education and Training, 2008. CSEET '08. IEEE
	21st Conference on},
  year = {2008},
  pages = {51 -58},
  month = {april},
  __markedentry = {[kimi:1]},
  abstract = {Agile processes play an important role in the authorpsilas undergraduate
	course in software engineering. The course is a required course for
	undergraduate majors in Computer Science. Agile processes, like eXtreme
	Programming (XP), have been criticized for not providing a good framework
	for building secure software. The course begins by covering what
	some people have called ldquothe warrdquo between the traditional
	waterfall process folks and the agile process folks. After students
	are given an introduction to various processes on both sides of ldquothe
	warrdquo (with an emphasis on PSP, CMMI and XP) and after students
	are introduced to basic concepts about how to make software systems
	more secure (drawing heavily on Viega and McGrawpsilas book Building
	Secure Software), the course turns its attention to how XP (in particular)
	can be made more secure. This topic generates a lot of enthusiasm
	among the students. The students seem to enjoy the challenge of creating
	new ideas to improve the manner in which XP addresses security issues.
	Students have come up with many creative and stimulating ideas about
	how eXtreme Programming can be made more secure without the necessity
	for what some have called ldquobig up front designrdquo. This paper
	presents some of the creative ideas students have come up with regarding
	this issue and discusses the team projects that give students the
	opportunity to explore security issues for agile processes in some
	depth.},
  doi = {10.1109/CSEET.2008.13},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1093-0175},
  keywords = {agile process;computer science;eXtreme Programming;secure software
	system;undergraduate software engineering course;waterfall process;computer
	science education;educational courses;programming;safety-critical
	software;}
}

@INPROCEEDINGS{4556951,
  author = {Epstein, R.G.},
  title = {A Software Engineering Course with an Emphasis on Software Processes
	and Security},
  booktitle = {Software Engineering Education and Training, 2008. CSEET '08. IEEE
	21st Conference on},
  year = {2008},
  pages = {67 -73},
  month = {april},
  __markedentry = {[kimi:1]},
  abstract = {This paper describes an undergraduate course in software engineering
	which introduces students to a range of approaches to developing
	software. This course is a required course in the Computer Science
	major. Special emphasis is given to PSP, CMMI, agile processes, and
	Open Source software development. Students work on a team project
	which involves developing a software process for a pretend company.
	The course also devotes attention to the strengths and weaknesses
	of various processes in terms of developing secure software. Students
	are asked to address security concerns in the second of their two
	team projects. Serving as a basic introduction to software engineering,
	this course also covers important issues relating to professional
	responsibilities, ethics and work culture. In many ways, the course
	introduces students to the human dimensions of engineering software.},
  doi = {10.1109/CSEET.2008.19},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1093-0175},
  keywords = {computer science major;open source software development;software engineering
	course;software processes;software security;undergraduate course;computer
	science education;educational courses;security of data;software engineering;}
}

@INPROCEEDINGS{5069158,
  author = {Crabtree, C.A. and Koru, A.G. and Seaman, C. and Erdogmus, H.},
  title = {An empirical characterization of scientific software development
	projects according to the Boehm and Turner model: A progress report},
  booktitle = {Software Engineering for Computational Science and Engineering, 2009.
	SECSE '09. ICSE Workshop on},
  year = {2009},
  pages = {22 -27},
  month = {may},
  __markedentry = {[kimi:2]},
  abstract = {A number of recent studies reported on the success of applying agile
	methods in scientific software development projects. These studies
	found that agile methods are well suited to the exploratory, iterative,
	and collaborative nature of scientific inquiry. However, these findings
	might not be applicable in all situations pertaining to scientific
	software development projects. In addition, they only constitute
	a subset of the important factors while deciding which development
	methods and practices should be adopted. Therefore, it becomes important
	to conduct further research before making recommendations regarding
	the adoption of certain development methods and practices in this
	domain. In this progress report, we discuss our on-going research
	that will empirically study the characteristics of various scientific
	software development projects according to a model suggested by Boehm
	and Turner. We plan to conduct interviews and collect data from various
	scientific software development projects in the Baltimore-Washington
	area. We expect that our qualitative results will increase our understanding
	of the characteristics in those projects favoring plan-driven approaches
	or agile methods, and the needs and conditions associated with those
	characteristics. Our research provides guidance to scientific software
	developers by enhancing their capacity to evaluate and understand
	their own project characteristics and select effective software practices.
	As a long-term benefit in the same direction, our qualitative results
	will generate a set of hypotheses that can be tested in different
	project environments to better understand and categorize scientific
	software development projects. Consequently, in the future, more
	generalizable and actionable recommendations can be made for scientific
	software development projects.},
  doi = {10.1109/SECSE.2009.5069158},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {Baltimore-Washington area;Boehm model;Turner model;agile methods;scientific
	software development projects;software engineering;}
}

@INPROCEEDINGS{6225488,
  author = {Mengjiao Shen and Wenrong Yang and Guoping Rong and Dong Shao},
  title = {Applying agile methods to embedded software development: A systematic
	review},
  booktitle = {Software Engineering for Embedded Systems (SEES), 2012 2nd International
	Workshop on},
  year = {2012},
  pages = {30 -36},
  month = {june},
  abstract = {Since the 21st century, embedded software products have been pervasive
	in the world we live in, however, this emerging industry is facing
	many challenges due to its own unique characteristics which distinguish
	it from non-embedded software development. The other hand, agile
	software development methods are adopted by organizations worldwide
	at an increasing speed. It seems meaningful to explore to apply agile
	methods to embedded software development and in this paper a systematic
	review was conducted to supply an initial guide to the researchers
	and industrial readership.},
  doi = {10.1109/SEES.2012.6225488},
  excluded = {Kimi, title},
  keywords = {agile methods;agile software development;embedded software development;embedded
	software products;systematic review;embedded systems;software prototyping;ubiquitous
	computing;}
}

@INPROCEEDINGS{5068440,
  title = {USB label},
  booktitle = {Software Engineering for Secure Systems, 2009. SESS '09. ICSE Workshop
	on},
  year = {2009},
  pages = {c1},
  month = {may},
  abstract = {The following topics are dealt with: reusable security use cases for
	mobile grid environments; resolving least privilege violations in
	software architectures; intrusion detection using signatures extracted
	from execution profiles; a hybrid analysis framework for detecting
	Web application vulnerabilities; SWAP: mitigating XSS attacks using
	a reverse proxy; metamodel for privacy policies within SOA; MUTEC:
	mutation-based testing of cross site scripting; RUP-based process
	model for security requirements engineering in value-added service
	development; improving perimeter security with security-oriented
	program transformations; and generating formal specifications for
	security-critical applications - a model-driven approach.},
  doi = {10.1109/IWSESS.2009.5068440},
  excluded = {Kimi, title},
  keywords = {SWAP;Web application vulnerability detection;XSS attack mitigation;cross
	site scripting;execution profiles;formal specifications;hybrid analysis
	framework;intrusion detection;least privilege violations;metamodel;mobile
	grid environments;mutation-based testing;perimeter security;privacy
	policy;process model;reusable security use cases;reverse proxy;security
	requirements engineering;security-critical applications;security-oriented
	program transformations;service-oriented architecture;signatures;software
	architectures;value-added service development;Internet;data privacy;digital
	signatures;formal specification;grid computing;mobile computing;security
	of data;software architecture;}
}

@INPROCEEDINGS{5068459,
  author = {Belani, H. and Car, Z. and Caric, A.},
  title = {RUP-based process model for security requirements engineering in
	value-added service development},
  booktitle = {Software Engineering for Secure Systems, 2009. SESS '09. ICSE Workshop
	on},
  year = {2009},
  pages = {54 -60},
  month = {may},
  __markedentry = {[kimi:2]},
  abstract = {Due to the spreading of SMS services and appearing of new business
	models, value-added SMS services have been introduced. According
	to the research results about wide distribution of security incidents
	on ICT systems worldwide, in spite of known security solutions, there
	is a necessity for organizational approach to implement security.
	This paper presents research and development efforts in building
	process model SecuRUP for security requirements engineering conformed
	to RUP framework. The model consists of processes, artifacts, activities
	and according roles for successful elicitation, analysis and specification
	of recognized security requirements and is validated on presented
	case study. The model validation results have shown significant process
	improvement, especially on roles and activities identification in
	SecuRUP elaboration process, but only further case studies in industry
	can be best indicators for usefulness of such models.},
  doi = {10.1109/IWSESS.2009.5068459},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {ICT systems;RUP framework;RUP-based process model;Rational Unified
	Process;business models;information and communication technology;model
	validation;process model SecuRUP;security requirements engineering;security
	solutions;short message services;value-added SMS service development;business
	data processing;electronic messaging;formal verification;security
	of data;}
}

@INPROCEEDINGS{6065642,
  author = {Sanghoon Jeon and Myungjin Han and Eunseok Lee and Keun Lee},
  title = {Quality Attribute Driven Agile Development},
  booktitle = {Software Engineering Research, Management and Applications (SERA),
	2011 9th International Conference on},
  year = {2011},
  pages = {203 -210},
  month = {aug.},
  abstract = {Agile development methods are being recognized as popular and efficient
	approaches to the development of software systems that have features
	such as a short delivery period and unclear requirements. They emphasize
	customer satisfaction, fast response to changes, and release in less
	time. According to a recent survey, SCRUM is one of the most popular
	methods that are currently being used. Some backlogs, especially
	high priority backlogs that are functional requirements of customers,
	are developed repeatedly at each sprint period. Despite the known
	advantages of SCRUM, however, its backlogs focus only on functional
	features. Thus, it is difficult to effectively reflect the softwares
	quality attributes. As known, the failure of a software project is
	caused by the non-satisfaction not of functional features but of
	quality attributes, such as performance, usability, and reliability.
	This paper introduces the ACRUM that is a quality attribute driven
	agile development method. The main characteristic of the proposed
	solution is that it is derived from values and practices of SCRUM
	to be compatible with the SCRUM process and to keep its agility intact.
	The effect of ACRUM was evaluated through an agile process evaluation
	checklist and applying it into a commercial project of Samsung Electronics.
	The results showed that ACRUM is more efficient than the legacy agile
	development process.},
  doi = {10.1109/SERA.2011.24},
  excluded = {Kimi, title},
  keywords = {ACRUM process;SCRUM process;Samsung electronics;customer requirement;customer
	satisfaction;high-priority backlog;legacy agile development process;software
	project failure;software quality attribute driven agile development;software
	system development;customer satisfaction;project management;software
	management;software prototyping;software quality;}
}

@INPROCEEDINGS{4609427,
  author = {Buchalcevova, A.},
  title = {Where in the Curriculum Is the Right Place for Teaching Agile Methods?},
  booktitle = {Software Engineering Research, Management and Applications, 2008.
	SERA '08. Sixth International Conference on},
  year = {2008},
  pages = {205 -209},
  month = {aug.},
  abstract = {According to several agile adoption surveys made worldwide agile practices
	gained ground. In the Czech Republic we assumed another situation.
	Therefore we decided to conduct our own research based on a survey.
	The research objective was to determine the rate of agile approaches
	usage and practical experience with these approaches in companies
	in the Czech Republic. Paper presents the survey instrument and some
	results that have influenced building new Computing Curriculum involving
	agile methods.},
  doi = {10.1109/SERA.2008.9},
  excluded = {Kimi, title},
  keywords = {agile methods;computing curriculum;teaching;computer science education;software
	engineering;teaching;}
}

@INPROCEEDINGS{4609418,
  author = {Altarawneh, H. and El Shiekh, A.},
  title = {A Theoretical Agile Process Framework for Web Applications Development
	in Small Software Firms},
  booktitle = {Software Engineering Research, Management and Applications, 2008.
	SERA '08. Sixth International Conference on},
  year = {2008},
  pages = {125 -132},
  month = {aug.},
  __markedentry = {[kimi:2]},
  abstract = {As Web based-applications become increasingly important to all aspects
	of life, there is a need to encourage practitioners to adopt best
	practices so as to improve the quality of the processes in use, and
	therefore achieve targets related to time, budget and quality. The
	Web development industry worldwide is dominated by a myriad of small
	firms. This presents a challenge in terms of determining the current
	practices of industry participants, and in devising improvement initiatives
	which are feasible for small firms. The objectives of this research
	is to propose a software process model framework that assists the
	small firms in designing Web based-applications so as not to run
	over budget and time. To achieve these objectives, an extensive literature
	survey of Web development methodologies and software process improvement
	in small firms were conducted to identify Web engineering practice
	in Web development. The literature survey clarified that, there were
	several development methodologies of Web-based application. These
	studies have not taken into consideration software process improvements.
	A software process framework for Internet development in small firms
	is proposed in this research .This framework contains several steps
	to follow; the first step is to begin with small Web project. The
	second steps is adopt the modified XP process model which is also
	a suggested process model for Internet development in small firms,
	and then apply XXPM as a quality model for software process improvement.
	If the proposed software process framework is to be successful then
	it must be laid on Web engineering practices.},
  doi = {10.1109/SERA.2008.14},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {Internet development;Web application development;Web development industry;Web
	engineering;Web project;XP process model;XXPM;agile process framework;process
	quality;software firm;software process improvement;software process
	model;software quality;Internet;Web design;software development management;software
	process improvement;software quality;}
}

@INPROCEEDINGS{4609429,
  author = {Shahir, H.Y. and Daneshpajouh, S. and Ramsin, R.},
  title = {Improvement Strategies for Agile Processes: A SWOT Analysis Approach},
  booktitle = {Software Engineering Research, Management and Applications, 2008.
	SERA '08. Sixth International Conference on},
  year = {2008},
  pages = {221 -228},
  month = {aug.},
  __markedentry = {[kimi:]},
  abstract = {Agile software development methodologies have been greeted with enthusiasm
	by many software developers, yet their widespread adoption has also
	resulted in closer examination of their strengths and weaknesses.
	While analyses and evaluations abound, the need still remains for
	an objective and systematic appraisal of Agile processes specifically
	aimed at defining strategies for their improvement. We provide a
	review of the strengths and weaknesses identified in Agile processes,
	based on which a strengths- weaknesses-opportunities-threats (SWOT)
	analysis of the processes is performed. We suggest this type of analysis
	as a useful tool for highlighting and addressing the problem issues
	in Agile processes, since the results can be used as improvement
	strategies.},
  doi = {10.1109/SERA.2008.33},
  excluded = {Kimi, title},
  keywords = {SWOT analysis;agile processes;agile software development methodologies;strengths-
	weaknesses-opportunities-threats analysis;software engineering;}
}

@INPROCEEDINGS{4402759,
  author = {Sidky, A. and Arthur, J.},
  title = {Determining the Applicability of Agile Practices to Mission and Life-Critical
	Systems},
  booktitle = {Software Engineering Workshop, 2007. SEW 2007. 31st IEEE},
  year = {2007},
  pages = {3 -12},
  month = {6 2007-feb. 8},
  abstract = {Adopting agile practices brings about many benefits and improvements
	to the system being developed. However, in mission and life-critical
	systems, adopting an inappropriate agile practice has detrimental
	impacts on the system in various phases of its lifecycle as well
	as precludes desired qualities from being actualized. This paper
	presents a three-stage process that provides guidance to organizations
	on how to identify the agile practices they can benefit from without
	causing any impact to the mission and life critical system being
	developed.},
  doi = {10.1109/SEW.2007.61},
  issn = {1550-6215},
  keywords = {agile practices;life-critical system;mission-critical system;organization
	guidance;software process improvement;}
}

@INPROCEEDINGS{4402760,
  author = {Marcal, A.S.C. and de Freitas, B.C.C. and Furtado Soares, F.S. and
	Belchior, A.D.},
  title = {Mapping CMMI Project Management Process Areas to SCRUM Practices},
  booktitle = {Software Engineering Workshop, 2007. SEW 2007. 31st IEEE},
  year = {2007},
  pages = {13 -22},
  month = {6 2007-feb. 8},
  abstract = {Over the past years, the capability maturity model (CMM) and capability
	maturity model integration (CMMI) have been broadly used for assessing
	organizational maturity and process capability throughout the world.
	However, the rapid pace of change in information technology has caused
	increasing frustration to the heavyweight plans, specifications,
	and other documentation imposed by contractual inertia and maturity
	model compliance criteria. In light of that, agile methodologies
	have been adopted to tackle this challenge. The aim of our paper
	is to present mapping between CMMI and one of these methodologies,
	Scrum. It shows how Scrum addresses the Project Management Process
	Areas of CMMI. This is useful for organizations that have their plan-driven
	process based on the CMMI model and are planning to improve its processes
	toward agility or to help organizations to define a new project management
	framework based on both CMMI and Scrum practices.},
  doi = {10.1109/SEW.2007.102},
  issn = {1550-6215},
  keywords = {agile methodologies;capability maturity model;capability maturity
	model integration mapping;information technology;organizational maturity;plan
	driven process;process capability;project management process areas;scrum
	practices;Capability Maturity Model;information technology;process
	capability analysis;project management;}
}

@INPROCEEDINGS{5328379,
  author = {Taromirad, M. and Ramsin, R.},
  title = {CEFAM: Comprehensive Evaluation Framework for Agile Methodologies},
  booktitle = {Software Engineering Workshop, 2008. SEW '08. 32nd Annual IEEE},
  year = {2008},
  pages = {195 -204},
  month = {oct.},
  abstract = {Agile software development is regarded as an effective and efficient
	approach, mainly due to its ability to accommodate rapidly changing
	requirements, and to cope with modern software development challenges.
	There is therefore a strong tendency to use agile software development
	methodologies where applicable; however, the sheer number of existing
	agile methodologies and their variants hinders the selection of an
	appropriate agile methodology or method chunk. Methodology evaluation
	tools address this problem through providing detailed evaluations,
	yet no comprehensive evaluation framework is available for agile
	methodologies. We introduce the comprehensive evaluation framework
	for agile methodologies (CEFAM) as an evaluation tool for project
	managers and method engineers. The hierarchical (and mostly quantitative)
	evaluation criterion set introduced in this evaluation framework
	enhances the usability of the framework and provides results that
	are precise enough to be useful for the selection, adaptation and
	construction of agile methodologies.},
  doi = {10.1109/SEW.2008.19},
  issn = {1550-6215},
  keywords = {CEFAM;agile methodologies;agile software development;comprehensive
	evaluation framework;hierarchical evaluation criterion set;software
	performance evaluation;}
}

@INPROCEEDINGS{1008034,
  author = {Newkirk, J.},
  title = {Introduction to agile processes and extreme programming},
  booktitle = {Software Engineering, 2002. ICSE 2002. Proceedings of the 24rd International
	Conference on},
  year = {2002},
  pages = {695 -696},
  month = {may},
  __markedentry = {[kimi:2]},
  abstract = {Extreme programming is one of the most discussed subjects in the software
	development community. But what makes XP extreme? And how does it
	fit into the New World of agile methodologies? This paper establishes
	the underpinnings of agile methodology and explains why you might
	want to try one. It shows how XP uses a set of practices to build
	an effective software development team that produces quality software
	in a predictable and repeatable manner.},
  excludekimi = {abstract},
  keywords = {agile processes;extreme programming;quality software;software development
	community;software development team;software engineering;}
}

@INPROCEEDINGS{1008039,
  author = {Kruchten, P.},
  title = {Tutorial: introduction to the Rational Unified Process/sup /spl reg//},
  booktitle = {Software Engineering, 2002. ICSE 2002. Proceedings of the 24rd International
	Conference on},
  year = {2002},
  pages = {703},
  month = {may},
  abstract = {Summary form only given. The Rational Unified Process/sup /spl reg//
	(RUP/sup /spl reg//) is a software engineering process framework.
	It captures many of the best practices in modern software development
	in a form that is suitable for a wide range of projects and organizations.
	It embeds object-oriented techniques and uses UML as the principal
	notation for the several models that are built during the development.
	The RUP is also an open process framework that allows software organizations
	to tailor the process to their specific need, and to capture their
	own specific process know-how in the form of process components.
	Many process components are now developed by various organizations
	to cover different domains, technologies, tools, or type of development,
	and these components can be assembled to rapidly compose a suitable
	process. This tutorial introduces the basic concepts and principles,
	which lie under the RUP framework, and show concrete examples of
	its usage.},
  keywords = {Rational Unified Process;UML;Unified Modeling Language;notation;object-oriented
	techniques;open process framework;software development;software engineering
	process framework;software organizations;software process components;software
	tools;formal specification;object-oriented programming;software engineering;specification
	languages;}
}

@INPROCEEDINGS{1201241,
  author = {Hedin, G. and Bendix, L. and Magnusson, B.},
  title = {Introducing software engineering by means of extreme programming},
  booktitle = {Software Engineering, 2003. Proceedings. 25th International Conference
	on},
  year = {2003},
  pages = { 586 - 593},
  month = {may},
  __markedentry = {[kimi:2]},
  abstract = { This paper reports on experience from teaching basic software engineering
	concepts by using Extreme Programming in a second year undergraduate
	course taken by 107 students. We describe how this course fits into
	a wider programme on software engineering and technology and report
	our experience from running and improving the course. Particularly
	important aspects of our setup includes team coaching (by older students)
	and "team-in-one-room". Our experience so far is very positive and
	we see that students get a good basic understanding of the important
	concepts in software engineering, rooted in their own practical experience.},
  doi = {10.1109/ICSE.2003.1201241},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {0270-5257},
  keywords = { extreme programming; software engineering; teaching; team coaching;
	undergraduate course; educational courses; software engineering;
	teaching;}
}

@INPROCEEDINGS{1201242,
  author = {Schneider, J.-G. and Johnston, L.},
  title = {eXtreme programming at universities - an educational perspective},
  booktitle = {Software Engineering, 2003. Proceedings. 25th International Conference
	on},
  year = {2003},
  pages = { 594 - 599},
  month = {may},
  __markedentry = {[kimi:1]},
  abstract = { To address the problems of traditional software development, recent
	years have shown the introduction of more light-weight or "agile"
	development processes (eXtreme Programming being the most prominent
	one). These processes are intended to support early and quick production
	of working code by structuring the development into small release
	cycles and focus on continual interaction between developers and
	customers. As such software development processes become more popular
	there is a growing demand from industry to introduce agile development
	practices in tertiary education. This is not a straightforward task
	as the corresponding practices may run counter to educational goals
	or may not be adjusted easily to a learning environment. In this
	paper, we discuss some of these issues and reflect on the problems
	of teaching agile processes in tertiary education.},
  doi = {10.1109/ICSE.2003.1201242},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0270-5257},
  keywords = { agile processes; eXtreme programming; educational perspective; software
	development; teaching; tertiary education; computer science education;
	programming; software engineering; teaching;}
}

@INPROCEEDINGS{1201267,
  author = {Constantine, L.L. and Lockwood, L.A.D.},
  title = {Usage-centered software engineering: an agile approach to integrating
	users, user interfaces, and usability into software engineering practice},
  booktitle = {Software Engineering, 2003. Proceedings. 25th International Conference
	on},
  year = {2003},
  pages = { 746 - 747},
  month = {may},
  abstract = { Usage-centered design is a systematic, model-driven approach to visual
	and interaction design with an established record of effectiveness
	in a wide variety of settings and areas of application. The tutorial
	introduces the models and methods of usage-centered design and explores
	the integration of usage-centered approaches into software engineering
	practice. Agile approaches to modeling will be emphasized, with the
	focus on use cases, which are central to usage-centered design and
	serve as a common thread throughout an integrated usage-centered
	software engineering process.},
  doi = {10.1109/ICSE.2003.1201267},
  excluded = {Kimi, title},
  issn = {0270-5257},
  keywords = { agile modeling; model-driven approach; software usability; usage-centered
	software engineering; user interfaces; software engineering; user
	centred design; user interfaces;}
}

@INPROCEEDINGS{1317460,
  author = {Manhart, P. and Schneider, K.},
  title = {Breaking the ice for agile development of embedded software: an industry
	experience report},
  booktitle = {Software Engineering, 2004. ICSE 2004. Proceedings. 26th International
	Conference on},
  year = {2004},
  pages = { 378 - 386},
  month = {may},
  abstract = { A software engineering department in a Daimler-Chrysler business
	unit was highly professional at developing embedded software for
	busses and coaches. However, customer specific add-ons were a regular
	source of hassle. Simple as they are, those individual requirements
	have to be implemented in hours or days rather than weeks or months.
	Poor quality or late upload into the bus hardware would cause serious
	cost and overhead. Established software engineering methods were
	considered inadequate and needed to be cut short. Agile methods offer
	guidance when quality, flexibility and high speed need to be reconciled.
	However, we did not adopt any full agile method, but added single
	agile practices to our process improvement toolbox. We suggested
	a number of classical process improvement activities (such as more
	systematic documentation and measurement) and combined them with
	agile elements (e.g. Test First Process). This combination seemed
	to foster acceptance of agile ideas and may help us to break the
	ice for a cautious extension of agile process improvement.},
  doi = {10.1109/ICSE.2004.1317460},
  issn = {0270-5257 },
  keywords = { agile process improvement; agile software development; embedded software;
	software engineering; software flexibility; software quality; automobile
	industry; embedded systems; manufacturing data processing; software
	process improvement;}
}

@INPROCEEDINGS{1317510,
  author = {Kontio, J. and Hoglund, M. and Ryden, J. and Abrahamsson, P.},
  title = {Managing commitments and risks: challenges in distributed agile development},
  booktitle = {Software Engineering, 2004. ICSE 2004. Proceedings. 26th International
	Conference on},
  year = {2004},
  pages = { 732 - 733},
  month = {may},
  abstract = { Software development is always a challenging undertaking and it requires
	high commitments from individuals who participate in it. Software
	development often involves new technology, challenging or unknown
	requirements, and tight schedules - making it particularly prone
	to several types of risk. These challenges are even more paramount
	in agile development and in distributed development, where the need
	for efficient information sharing is important, yet the distributed
	development makes it very difficult. This paper uses innovative learning
	methods to explore and to learn about these challenges and how to
	deal with them. The paper is partially based on presentations given
	by authors, but a major element in the paper is the case study that
	is introduced and in which will involve all the participants. The
	learning in the paper is strongly facilitated by participants' discussions
	and the insights generated in concrete problem solving situations.},
  doi = {10.1109/ICSE.2004.1317510},
  excluded = {Kimi, title},
  issn = {0270-5257 },
  keywords = { agile development; distributed development; information sharing;
	risk management; software development; risk management; software
	engineering;}
}

@INPROCEEDINGS{1553539,
  author = {Hirsch, M.},
  title = {Moving from a plan driven culture to agile development},
  booktitle = {Software Engineering, 2005. ICSE 2005. Proceedings. 27th International
	Conference on},
  year = {2005},
  pages = { 38},
  month = {may},
  abstract = { Summary form only given. Plan driven cultures are characterized by
	a strong belief in the plannability and predictability of software
	development projects. The SEI-CMM, software process improvement initiatives,
	and software metrics programs are some of the hallmarks of this school
	of thought. The trend towards agile development places the emphasis
	on constantly adapting to a project's changing goals rather than
	on detailed upfront planning. The majority of reports from practitioners
	of agile development are positive and confirm the advantages of this
	approach. However, moving from a plan driven culture to agile development
	is not easy. Making the transition requires changes to many established
	practices and may even touch core values held by stakeholders. Areas
	affected are requirements and change management, user involvement,
	willingness to take on responsibility, contract management, and the
	ability to live with many uncertainties. This paper looks at what
	it takes to make the transition and presents lessons learned from
	organizations and projects which have successfully completed the
	switch to agile development.},
  doi = {10.1109/ICSE.2005.1553539},
  keywords = { agile development; change management; contract management; human
	factors; requirements management; software development; software
	development management;}
}

@INPROCEEDINGS{1553540,
  author = {Brechner, E.},
  title = {Journey of enlightenment: the evolution of development at Microsoft},
  booktitle = {Software Engineering, 2005. ICSE 2005. Proceedings. 27th International
	Conference on},
  year = {2005},
  pages = { 39 - 42},
  month = {may},
  abstract = { Like many software companies, Microsoft has been doing distributed
	application development for many years. However, changes in the market
	have altered the rules, both in terms of customer expectations and
	programming models for ubiquitous interconnected smart devices. These
	changes have provoked two dramatic shifts in the way we develop software.
	The first is the creation and use of the .NET framework as a simple,
	secure, and robust platform for device-independent software development,
	data manipulation, and communications. The second is an agile yet
	highly disciplined approach to designing, testing, implementing,
	and verifying our software which presumes all bugs are unacceptable
	and must be found and fixed early before they impact internal groups,
	external partners, and eventually our customers. This paper discusses
	the nature and impact of these two dramatic shifts to the development
	practices at Microsoft.},
  doi = {10.1109/ICSE.2005.1553540},
  keywords = { .NET framework; Microsoft; SOAP; WSDL; XML; agile development; data
	manipulation; device-independent software development; distributed
	application development; software design; software implementation;
	software reliability; software security; software testing; software
	verification; test driven development; distributed programming; network
	operating systems; program testing; program verification; programming
	environments; software houses; software reliability; systems analysis;
	ubiquitous computing;}
}

@INPROCEEDINGS{1553634,
  author = {Visaggio, V.A.},
  title = {Empirical validation of pair programming},
  booktitle = {Software Engineering, 2005. ICSE 2005. Proceedings. 27th International
	Conference on},
  year = {2005},
  pages = { 654},
  month = {may},
  abstract = { This paper discusses an empirical assessment of pair programming.
	Several agile processes arose and have been adopted in industry with
	the promise of producing working software in the early phases of
	production process and to make the organization flexible and adaptable
	with respect to the changing environment. The outcomes of the experiments
	can be summarized as follows: (i) pair programming improves the productivity
	of developers with respect to solo programming; (ii) it also fosters
	knowledge transfer between the developers of the pair: the experiment
	suggests that this effect is emphasized when both the components
	own the same educational background; and, finally, (iii) distributing
	the components of a pair could seriously deteriorate expected benefits,
	if an appropriate support for communication and collaboration is
	not set up.},
  doi = {10.1109/ICSE.2005.1553634},
  excluded = {Kimi, title},
  keywords = { agile process; empirical software engineering; knowledge transfer;
	pair programming; programming; software engineering;}
}

@INPROCEEDINGS{1553593,
  author = {Melnik, G. and Maurer, F.},
  title = {A cross-program investigation of students' perceptions of agile methods},
  booktitle = {Software Engineering, 2005. ICSE 2005. Proceedings. 27th International
	Conference on},
  year = {2005},
  pages = { 481 - 488},
  month = {may},
  __markedentry = {[kimi:1]},
  abstract = { Research was conducted on using agile methods in software engineering
	education. This paper explores the perceptions of students from five
	different academic levels of agile practices. Information has been
	gathered through the collection of quantitative and qualitative data
	over three academic years, and analysis reveals student experiences,
	mainly positive but also some negative. Student opinions indicate
	the preference to continue to use agile practices at the workplace
	if allowed. A way these findings may potentially be extrapolated
	to the industrial settings is discussed. Finally, this report should
	encourage other academics considering adoption of agile methods in
	their computer science or software engineering curricula.},
  doi = {10.1109/ICSE.2005.1553593},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = { agile methods; extreme programming; software engineering education;
	student perceptions; computer science education; software engineering;}
}

@INPROCEEDINGS{4483219,
  author = {Sharifloo, A.A. and Saffarian, A.S. and Shams, F.},
  title = {Embedding Architectural Practices into Extreme Programming},
  booktitle = {Software Engineering, 2008. ASWEC 2008. 19th Australian Conference
	on},
  year = {2008},
  pages = {310 -319},
  month = {march},
  abstract = {Today, agile methods become a popular approach to develop software
	systems. They try to satisfy customer, respond to changes, release
	in less time and achieve suitable profits for developers. XP is one
	of the most popular agile methods which is currently being used and
	different kinds of research have been accomplished about its various
	aspects such as pair programming. In spite of all benefits known
	of XP, it does not involve architectural techniques yet. As it is
	mentioned in many technical reports, the way to achieve high quality
	of system is to consider its architecture as an important matter
	in the development process. This paper introduces two practices in
	order to empower XP's development process toward improving system's
	architecture. The main characteristic of proposed solution is that
	it is derived from values and practices of XP in order to be compatible
	with XP process model and to keep its agility intact.},
  doi = {10.1109/ASWEC.2008.4483219},
  issn = {1530-0803},
  keywords = {agile methods;development process;embedding architectural practices;pair
	programming;software systems;system architecture;embedded systems;software
	architecture;}
}

@INPROCEEDINGS{4483196,
  author = {Nyfjord, J. and Kajko-Mattsson, M.},
  title = {Agile Implementation Phase in Two Canadian Organizations},
  booktitle = {Software Engineering, 2008. ASWEC 2008. 19th Australian Conference
	on},
  year = {2008},
  pages = {86 -96},
  month = {march},
  abstract = {In this paper, we investigate the status of the agile implementation
	phase within two Canadian organizations. We do this by comparing
	current agile process models to the industrial practice. Our results
	show that the organizations studied have adopted most of the activities
	as suggested in the agile models. However, they had to make some
	revisions, due to the fact that some of the guidelines as provided
	by the agile models were unclear, conflicting, ambiguous or they
	were simply missing.},
  doi = {10.1109/ASWEC.2008.4483196},
  issn = {1530-0803},
  keywords = {Canadian organizations;agile implementation phase;agile process models;DP
	industry;software development management;}
}

@INPROCEEDINGS{4483259,
  author = {Mirakhorli, M. and Rad, A.K. and Aliee, F.S. and Mirakhorli, A. and
	Pazoki, M.},
  title = {RDP Technique: Take a Different Look at XP for Adoption},
  booktitle = {Software Engineering, 2008. ASWEC 2008. 19th Australian Conference
	on},
  year = {2008},
  pages = {656 -662},
  month = {march},
  abstract = {Although software projects can benefit from XP practices, all projects
	can't directly adopt it. Characteristics of some projects make it
	difficult to use XP directly, therefore, we need to tailor XP to
	the local conditions, contexts and the size of these projects. In
	this article we will describe why defining XP by its practices has
	problems and with the belief that XP's values make it agile, XP's
	practices do not define XP and XP is defined by its rules, we introduce
	a practical technique for tailoring XP. Proposed technique benefits
	from RDP (rule-description-practice) cards for identifying a set
	of suitable practices for a specific project: organizing "YourXP"
	software development process.},
  doi = {10.1109/ASWEC.2008.4483259},
  issn = {1530-0803},
  keywords = {extreme programming;rule-description-practice cards;software development
	process;software projects;programming;software engineering;}
}

@INPROCEEDINGS{4483195,
  author = {Moe, N.B. and Dingsoyr, T. and Dyba, T.},
  title = {Understanding Self-Organizing Teams in Agile Software Development},
  booktitle = {Software Engineering, 2008. ASWEC 2008. 19th Australian Conference
	on},
  year = {2008},
  pages = {76 -85},
  month = {march},
  abstract = {Traditional software teams consist of independently focused self-managing
	professionals with high individual but low team autonomy. A challenge
	with introducing agile software development is that it requires a
	high level of both individual and team autonomy. This paper studies
	the barriers with introducing self-organizing teams in agile software
	development and presents data from a seven month ethnographic study
	of professional developers in a Scrum team. We found the most important
	barrier to be the highly specialized skills of the developers and
	the corresponding division of work. In addition we found a lack of
	system for team support, and reduced external autonomy to be important
	barriers for introducing self- organizing teams. These findings have
	implications for software development managers and practitioners.},
  doi = {10.1109/ASWEC.2008.4483195},
  issn = {1530-0803},
  keywords = {agile software development;self-organizing teams;software development
	management;software development management;}
}

@INPROCEEDINGS{5319542,
  author = {Gautham, R.N.},
  title = {Testing Processes in Business-Critical Chain Software Lifecycle},
  booktitle = {Software Engineering, 2009. WCSE '09. WRI World Congress on},
  year = {2009},
  volume = {4},
  pages = {238 -242},
  month = {may},
  abstract = {The business-critical chain lifecycle is an agile software development
	lifecycle that aims at aligning the software project deliverables
	to attain the business objectives based on business priorities. The
	traditional software development projects work on the assumption
	that all `equal effort consumers' would be treated equally and worked
	upon. The agile methodology ensures that the delivery cycles are
	reduced thus introducing agility in the way business is supported
	by underlying technologies. The proposed lifecycle model introduces
	new variables pertaining to the business value generation each finished
	piece of code would produce. Hence the software project processes
	have to be modified to cater to it. Even the usual agile lifecycle
	testing strategies need to be modified to suit the proposed model.
	The test plans, test estimations, test resource management, quality
	control, regression plans and automation road map and plans have
	to be customized to cater to the new life cycle model. The secondary
	project management activities such as risk management, procurement
	management, etc also may to be modified with respect to the testing
	processes. My paper aims at using the critical chain principles and
	proposes a software lifecycle model that can cater to business priorities
	and aligning the testing processes not only to development cycles
	but also to the actual business value created. In this paper I would
	take a case study and compare and contrast when project uses the
	regular models and this new model. I would also provide guidelines
	to use this lifecycle model and modify regular project management
	activities to cater to the new model with emphasis on the testing
	processes. The paper would try to provide the ideal scenarios; in
	project teams, in consulting firms and in new customers and expectations;
	where such a model could provide high impact on the way consulting
	companies can do successful projects and creating more value to the
	customers.},
  doi = {10.1109/WCSE.2009.424},
  excluded = {Kimi, title},
  keywords = {agile lifecycle testing strategies;agile software development lifecycle;automation
	road map;business priorities;business value generation;business-critical
	chain software lifecycle;quality control;regression plans;secondary
	project management;software development projects;software project
	processes;test estimations;test plans;test resource management;testing
	processes;business data processing;life testing;program testing;project
	management;software quality;}
}

@INPROCEEDINGS{5319399,
  author = {Cao Ying and Zhang Mier},
  title = {Integration of Enterprise Application Based on SOA},
  booktitle = {Software Engineering, 2009. WCSE '09. WRI World Congress on},
  year = {2009},
  volume = {3},
  pages = {227 -231},
  month = {may},
  abstract = {Globalisation, business process outsourcing and ever increasing regulatory
	environments are forcing the large enterprises to transform the way
	they provide their business and services. Businesses are required
	to be more agile and flexible, and IT managers are being asked to
	deliver improved functionality while leveraging existing IT investment.
	Service-oriented Architectures (SOA) has a major impact on the development
	of software systems because of its potential for increased business
	agility, adaptability of applications, integration and interoperability
	between systems, and reuse of legacy assets. This paper will briefly
	introduce SOA and analyzes integration of enterprise application
	based on SOA through a case of marine emergency auxiliary command
	system.},
  doi = {10.1109/WCSE.2009.286},
  excluded = {Kimi, title},
  keywords = {IT investment;IT manager;SOA;application adaptability;business agility;business
	process outsourcing;enterprise application;globalisation;interoperability;legacy
	asset reuse;marine emergency auxiliary command system;service-oriented
	architecture;software system development;Web services;emergency services;marine
	systems;open systems;software architecture;software maintenance;software
	reusability;}
}

@INPROCEEDINGS{6062096,
  author = {Hoda, R. and Noble, J. and Marshall, S.},
  title = {Organizing self-organizing teams},
  booktitle = {Software Engineering, 2010 ACM/IEEE 32nd International Conference
	on},
  year = {2010},
  volume = {1},
  pages = {285 -294},
  month = {may},
  abstract = {Agile teams are described as "self-organizing". How these teams actually
	organize themselves in practice, however, is not well understood.
	Through Grounded Theory research involving 24 Agile practitioners
	across 14 software organizations in New Zealand and India, we identified
	six informal roles that team members adopt in order to help their
	teams self-organize. These roles - Mentor, Co-ordinator, Translator,
	Champion, Promoter, and Terminator - help teams learn Agile practices,
	liaise with customers, maintain management support, and remove ineffective
	team members. Understanding these roles will help software teams
	become self-organizing, and should guide Agile coaches in working
	with Agile teams.},
  doi = {10.1145/1806799.1806843},
  issn = {0270-5257},
  keywords = {agile teams;self-organizing teams;software organizations;software
	teams;software prototyping;}
}

@INPROCEEDINGS{6063567,
  author = {Shata, O.},
  title = {A Crash Undergraduate Course in Global Software Engineering},
  booktitle = {Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed
	Computing (SNPD), 2011 12th ACIS International Conference on},
  year = {2011},
  pages = {213 -218},
  month = {july},
  __markedentry = {[kimi:1]},
  abstract = {Teaching Software Engineering must adopt new approaches to respond
	to the rapid globalization of software development. This puts pressure
	on instructors to select focused course contents to prepare students
	for working in global environments. This paper presents an innovative
	approach to teaching Software Engineering and which emphasizes the
	learning of project managements skills as well as the most important
	software development concepts in an environment which simulates a
	geographically distributed environment. Our approach is to synchronize
	class teaching with the development of real-world software projects
	in a setting designed to simulate geographically distributed working
	environments. The theoretical part of the course is Object-Oriented-centric,
	whereas the practical part is the larger part and is facilitated
	through two projects and which are designed to simulate real-world
	environments with global customers where students from different
	courses collaborate to play different roles. The projects give students
	skills in using the Agile and Spiral models.},
  doi = {10.1109/SNPD.2011.26},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {agile models;class teaching;geographically distributed environment;globalization;object
	oriented centric course;software development;software engineering;software
	project management skill;spiral model;undergraduate course;computer
	science education;educational courses;further education;object-oriented
	methods;project management;software development management;software
	prototyping;teaching;}
}

@ARTICLE{268922,
  author = {Lustman, F.},
  title = {Specifying transaction-based information systems with regular expressions},
  journal = {Software Engineering, IEEE Transactions on},
  year = {1994},
  volume = {20},
  pages = {207 -217},
  number = {3},
  month = {mar},
  __markedentry = {[kimi:1]},
  abstract = {The work is about the formal specification of transaction-based, interactive
	information systems. A transaction is a task that the user can execute
	independently, and the system can be defined as a partially ordered
	set of transactions. The general framework is the transformational
	paradigm, based on the classical Waterfall development model (W.W.
	Royce, 1970). The stages are systems analysis, software specification,
	design, and implementation. The systems analysis and software specification
	stages are covered. An informal, transaction-oriented method for
	systems analysis is proposed. The resulting system specification
	involves two parts: a high-level specification of each transaction
	and a formal specification of the system's control flow, i.e., the
	order of execution of the transactions. The system's control flow
	is expressed in a formal language describing concurrent regular expressions
	built on transaction names. At the software specification stage,
	some operational requirements, such as connect/disconnect transactions
	and the application of the all-or-nothing principle, are added to
	the system specification. Then a serial product automaton (SPA) is
	used to transform the concurrent expression into a single regular
	expression. This result is proven to be consistent with the system
	specification},
  doi = {10.1109/32.268922},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0098-5589},
  keywords = {SPA;all-or-nothing principle;classical Waterfall development model;concurrent
	expression;concurrent regular expressions;connect/disconnect transactions;formal
	language;formal specification;high-level specification;interactive
	information systems;operational requirements;regular expressions;serial
	product automaton;software specification;systems analysis;transaction-based
	information systems;transaction-oriented method;transformational
	paradigm;formal specification;information systems;systems analysis;transaction
	processing;}
}

@ARTICLE{655593,
  author = {Pemberton, D. and Sommerville, I.},
  title = {VOCAL: a framework for test identification and deployment},
  journal = {Software Engineering. IEE Proceedings- [see also Software, IEE Proceedings]},
  year = {1997},
  volume = {144},
  pages = {249 -260},
  number = {5},
  month = {oct/dec},
  abstract = {Viewpoint oriented verification and validation (VOCAL) is a novel
	technique for the identification and application of a structured
	life-cycle based software testing process to a broad array of systems.
	Application of the technique can be specifically tailored to embedded,
	interactive and multimedia applications, as well as those systems
	requiring a well defined approach in the quality assurance process.
	The authors introduce an approach for performance enhancement during
	the testing process. Problems faced when constructing software systems
	in time-constrained, market-driven development processes are highlighted.
	Emphasis is given to test process improvements by stressing some
	of the failures encountered when using traditional test models. Traditionally,
	testing follows the stages of specify, develop, test and release
	in a standard waterfall based approach. The use of viewpoints is
	introduced as a technique for structuring, identification, organisation
	and deployment of test information. Finally, the method is illustrated
	with a small example using a bank ATM machine. In conclusion, the
	authors evaluate VOCAL, and outline areas of future work},
  doi = {10.1049/ip-sen:19971643},
  excluded = {Kimi, title},
  issn = {1364-5080},
  keywords = {VOCAL framework;bank ATM machine;embedded system;interactive system;market
	driven development processes;multimedia applications;performance
	enhancement;quality assurance;review processes;software testing process;structured
	life cycle;test deployment;test identification;test process modelling;time
	constrained development;viewpoint oriented verification and validation;waterfall
	based approach;automatic teller machines;bank data processing;program
	testing;program verification;software quality;}
}

@INPROCEEDINGS{6229785,
  author = {Filieri, A. and Ghezzi, C.},
  title = {Further steps towards efficient runtime verification: Handling probabilistic
	cost models},
  booktitle = {Software Engineering: Rigorous and Agile Approaches (FormSERA), 2012
	Formal Methods in},
  year = {2012},
  pages = {2 -8},
  month = {june},
  __markedentry = {[kimi:1]},
  abstract = {We consider high-level models that specify system behaviors probabilistically
	and support the specification of cost attributes. Specifically, we
	focus on Discrete Time Markov Reward Models (D-MRMs), i.e. state
	machines where probabilities can be associated with transitions and
	rewards (costs) can be associated with states and transitions. Through
	probabilities we model assumptions on the behavior of environment
	in which an application is embedded. Rewards can instead model the
	cost assumptions involved in the system's operations. A system is
	designed to satisfy the requirements, under the given assumptions.
	Design-time assumptions, however, can turn out to be invalid at runtime,
	and therefore it is necessary to verify whether changes may lead
	to requirements violations. If they do, it is necessary to adapt
	the behavior in a self-healing manner to continue to satisfy the
	requirements. We have previously presented an approach to support
	efficient runtime probabilistic model checking of DTMCs for properties
	expressed in PCTL. In this paper we extend the approach to D-MRMs
	and reward properties. The benefits of the approach are justified
	both theoretically and empirically on significant test cases.},
  doi = {10.1109/FormSERA.2012.6229785},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {D-MRM;cost attributes;discrete time Markov reward models;probabilistic
	cost models;requirements violations;runtime verification;specification;Markov
	processes;formal specification;formal verification;}
}

@INPROCEEDINGS{6229789,
  author = {Iliasov, A. and Romanovsky, A. and Laibinis, L. and Troubitsyna,
	E. and Latvala, T.},
  title = {Augmenting Event-B modelling with real-time verification},
  booktitle = {Software Engineering: Rigorous and Agile Approaches (FormSERA), 2012
	Formal Methods in},
  year = {2012},
  pages = {51 -57},
  month = {june},
  __markedentry = {[kimi:2]},
  abstract = {A large number of dependable embedded systems have stringent real-time
	requirements imposed on them. Analysis of their real-time behaviour
	is usually conducted at the implementation level. However, it is
	desirable to obtain an evaluation of real-time properties early at
	the development cycle, i.e., at the modelling stage. In this paper
	we present an approach to augmenting Event-B modelling with verification
	of real-time properties in Uppaal. We show how to extract a process-based
	view from an Event-B model that together with introducing time constraints
	allows us to obtain a timed automata model - an input model of Uppaal.
	We illustrate the approach by development and verification of the
	data processing software of the BepiColombo Mission.},
  doi = {10.1109/FormSERA.2012.6229789},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {BepiColombo mission;Event-B modelling;Uppaal;data processing software;dependable
	embedded systems;development cycle;real-time properties verification;real-time
	requirements;real-time verification;time constraints;timed automata
	model;automata theory;embedded systems;program verification;}
}

@INPROCEEDINGS{6229786,
  author = {Krka, I. and Medvidovic, N.},
  title = {Revisiting modal interface automata},
  booktitle = {Software Engineering: Rigorous and Agile Approaches (FormSERA), 2012
	Formal Methods in},
  year = {2012},
  pages = {30 -36},
  month = {june},
  __markedentry = {[kimi:1]},
  abstract = {Modern software systems are typically built of components that communicate
	through their external interfaces. A component's behavior can be
	effectively described using finite state automata-based formalisms
	(e.g., statecharts [5]). The basic formalism, labelled transition
	systems, describes the behavior of a component in terms of states
	and labeled transitions. The more advanced formalisms, such as modal
	transition systems and interface automata, extend LTS to incorporate
	additional information related to interface operation controllability
	- distinguishing between input, output, and internal actions - and
	the possible partiality of a component's specification - distinguishing
	between required and unknown (maybe) behaviors. Capturing the controllability
	and partiality aspects of a component's specification facilitates
	(1) checking interface compatibility, (2) checking whether one component
	can safely replace another component, and (3) checking whether one
	specification is a proper refinement of another specification. In
	this paper, we study the existing definitions of these three types
	of checks, and then exemplify their limitations in the context of
	modal interface automata (MIA); MIA is a class of component behavior
	specifications that incorporates both controllability and partiality
	information. We outline a set of enhancements to MIA as possible
	solutions to the identified limitations.},
  doi = {10.1109/FormSERA.2012.6229786},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {component specification;finite state automata-based formalisms;interface
	compatibility;interface operation controllability;labelled transition
	systems;modal interface automata;modal transition systems;partiality
	information;software systems;finite automata;formal specification;}
}

@INPROCEEDINGS{6229788,
  author = {Gonzalez, C.A. and Buttner, F. and Clariso, R. and Cabot, J.},
  title = {EMFtoCSP: A tool for the lightweight verification of EMF models},
  booktitle = {Software Engineering: Rigorous and Agile Approaches (FormSERA), 2012
	Formal Methods in},
  year = {2012},
  pages = {44 -50},
  month = {june},
  __markedentry = {[kimi:1]},
  abstract = {The increasing popularity of MDE results in the creation of larger
	models and model transformations, hence converting the specification
	of MDE artefacts in an error-prone task. Therefore, mechanisms to
	ensure quality and absence of errors in models are needed to assure
	the reliability of the MDE-based development process. Formal methods
	have proven their worth in the verification of software and hardware
	systems. However, the adoption of formal methods as a valid alternative
	to ensure model correctness is compromised for the inner complexity
	of the problem. To circumvent this complexity, it is common to impose
	limitations such as reducing the type of constructs that can appear
	in the model, or turning the verification process from automatic
	into user assisted. Since we consider these limitations to be counterproductive
	for the adoption of formal methods, in this paper we present EMFtoCSP,
	a new tool for the fully automatic, decidable and expressive verification
	of EMF models that uses constraint logic programming as the underlying
	formalism.},
  doi = {10.1109/FormSERA.2012.6229788},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {EMFtoCSP;MDE artefacts specification;MDE-based development process
	reliability;automatic verification process;constraint logic programming;error-prone
	task;formal methods;hardware verification;lightweight EMF models
	verification;model transformations;problem complexity;software verification;user
	assisted verification process;computational complexity;constraint
	handling;formal verification;software reliability;}
}

@INPROCEEDINGS{1231211,
  author = {O'Reilly, C. and Morrow, P. and Bustard, D.},
  title = {Lightweight prevention of architectural erosion},
  booktitle = {Software Evolution, 2003. Proceedings. Sixth International Workshop
	on Principles of},
  year = {2003},
  pages = { 59 - 64},
  month = {sept.},
  abstract = { Avoiding architectural erosion helps extend the lifetime of an evolving
	software system. Erosion can be reduced by ensuring that (i) developers
	share a good understanding of a system's architecture; (ii) alignment
	is preserved between the architectural description and its implementation
	at all stages of system construction and maintenance; and (iii) architectural
	changes are treated with the same care and attention as the production
	of the initial design. Through the metaphor of 'agile development'
	we present a lightweight approach to the control of architectural
	erosion. In particular, it covers the representation of an architectural
	description and the management of alignment between description and
	implementation during system evolution. A prototype support tool,
	ArchAngel, is introduced. This maintains an architectural design
	description, identifies when changes occur with respect to that description,
	and reports these changes for evaluation.},
  doi = {10.1109/IWPSE.2003.1231211},
  excluded = {Kimi, title},
  issn = { },
  keywords = { ArchAngel prototype support tool; agile software development; architectural
	design description; architectural erosion prevention; lightweight
	approach; software system evolution; system architecture; system
	construction; system maintenance; formal specification; formal verification;
	software architecture; software maintenance; software prototyping;
	software tools; specification languages;}
}

@INPROCEEDINGS{5609587,
  author = {Rajlich, V.},
  title = {Teaching undergraduate software engineering},
  booktitle = {Software Maintenance (ICSM), 2010 IEEE International Conference on},
  year = {2010},
  pages = {1 -2},
  month = {sept.},
  __markedentry = {[kimi:1]},
  abstract = {During the last decade, software engineering changed rapidly, from
	the emphasis on waterfall lifecycle to the emphasis on software evolution
	and agile programming. This tutorial provides a brief introduction
	and overview of the results of this development. It presents agile
	programming, Personal and Team Software Process, software change,
	concept location, refactoring, and so forth. The organizing principle
	is an outline of an undergraduate software engineering course that
	is based on these results. The audience interested in this tutorial
	may be teachers of software engineering, and also software practitioners
	who want learn how these results fit together and how to apply them
	in software projects.},
  doi = {10.1109/ICSM.2010.5609587},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1063-6773},
  keywords = {agile programming;open-source project;software evolution;undergraduate
	software engineering course;waterfall lifecycle;computer science
	education;software maintenance;software prototyping;}
}

@INPROCEEDINGS{6080809,
  author = {Gang Zhang and Liwei Shen and Xin Peng and Zhenchang Xing and Wenyun
	Zhao},
  title = {Incremental and iterative reengineering towards Software Product
	Line: An industrial case study},
  booktitle = {Software Maintenance (ICSM), 2011 27th IEEE International Conference
	on},
  year = {2011},
  pages = {418 -427},
  month = {sept.},
  abstract = {It is common in practice that a Software Product Line (SPL) is constructed
	by reengineering a set of existing variant products. To alleviate
	the problems of high risks of failures and the limitations of resources
	and cost, incremental reengineering towards a SPL is a natural choice
	in many cases. However, several problems remain unaddressed properly,
	such as how to define increments, how to satisfy regular product
	delivery in parallel with reengineering, and how to achieve early
	successes. In this paper, we report an industrial case study on a
	successful SPL-targeted reengineering project conducted in Alcatel-Lucent.
	In this project, the project team applied the principles of agile
	development in the process of SPL reengineering. The key practices
	of the project include value-based increment definition, domain-driven
	responsibility alignment, iterative component refactoring and integration.
	We analyze the reengineering process of a major component qualitatively
	and quantitatively, with the focus on initial investment required,
	trend of investment, returns on investment and quality improvement.
	Our case study shows that incremental and iterative approach with
	stakeholder-value considerations can help to achieve steady and successful
	SPL reengineering in a cost-effective manner. We also find that SPL
	adoption can be regarded as an emergent result of the reconstruction
	and improvement of existing product assets.},
  doi = {10.1109/ICSM.2011.6080809},
  issn = {1063-6773},
  keywords = {Alcatel-Lucent;SPL-targeted reengineering project;agile development;cost;domain-driven
	responsibility alignment;incremental reengineering;industrial case
	study;investment;iterative component refactoring;iterative reengineering;product
	delivery;software product line;value-based increment definition;cost
	accounting;investment;production engineering computing;software prototyping;}
}

@INPROCEEDINGS{5714452,
  author = {Marinescu, R. and Ganea, G. and Verebi, I.},
  title = {InCode: Continuous Quality Assessment and Improvement},
  booktitle = {Software Maintenance and Reengineering (CSMR), 2010 14th European
	Conference on},
  year = {2010},
  pages = {274 -275},
  month = {march},
  __markedentry = {[kimi:2]},
  abstract = {While significant progress has been made over the last ten years in
	the research field of quality assessment, developers still can't
	take full advantage of the benefits of these new tools and technique.
	We believe that there at least two main causes for this lack of adoption:
	(i) the lack of integration in mainstream IDEs and (ii) the lack
	of support for a continuous (daily) usage of QA tools. In this context
	we created INCODE as an Eclipe plug in that would transform quality
	assessment and code inspections from a standalone activity, into
	a continuous, agile process, fully integrated in the development
	life-cycle. But INCODE not only assesses continuously the quality
	of Java systems, it also assists developers in taking restructuring
	decisions, and even supports them in triggering refactorings.},
  doi = {10.1109/CSMR.2010.44},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {1534-5351},
  keywords = {Eclipe plugin;IDE;InCode;Java system;QA tool;agile process;code inspection;continuous
	quality assessment;continuous quality improvement;development life-cycle;Java;life
	cycle costing;software prototyping;software quality;software tools;}
}

@INPROCEEDINGS{5714419,
  author = {Shrinivasan, C.},
  title = {Data Migration from a Product to a Data Warehouse Using ETL Tool},
  booktitle = {Software Maintenance and Reengineering (CSMR), 2010 14th European
	Conference on},
  year = {2010},
  pages = {63 -65},
  month = {march},
  __markedentry = {[kimi:1]},
  abstract = {One of emerging trends in today's market is usage of products for
	core business operations instead of using homegrown code. Migration
	from application to a new product or from one product to another
	is considered very risky. Each product will not expose their underlying
	database due to Intellectual property rights (IPR). This paper attempts
	to describe an approach used for migration of historical data from
	a risk management product to a data warehouse product and setting
	up a daily feed from the product into the data warehouse to have
	previous day reports available for current day trading.},
  doi = {10.1109/CSMR.2010.25},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1534-5351},
  keywords = {ETL tool;data warehouse product;historical data migration;intellectual
	property rights;risk management product;business data processing;data
	handling;data warehouses;industrial property;risk management;}
}

@INPROCEEDINGS{756693,
  author = {Jahnke, J.H. and Wadsack, J.},
  title = {Integration of analysis and redesign activities in information system
	reengineering},
  booktitle = {Software Maintenance and Reengineering, 1999. Proceedings of the
	Third European Conference on},
  year = {1999},
  pages = {160 -168},
  __markedentry = {[kimi:2]},
  abstract = {Emerging key technologies like the World Wide Web, object-orientation,
	and distributed computing enable new applications, e.g., in the area
	of electronic commerce, management information systems, and decision
	support systems. Today, many companies face the problem that they
	have to reengineer pre-existing information systems to take advantage
	of these technologies. Various computer-aided reengineering tools
	have been developed to reduce the complexity of the reengineering
	task. However a major limitation of current approaches is that they
	impose a strictly phase-oriented waterfall-type reengineering process,
	without the support for iterations. Still, such iterations often
	occur in real world examples, e.g., when additional knowledge about
	the legacy system becomes available or when the legacy system is
	modified during the migration process. We present an approach to
	incremental consistency management that allows to overcome this limitation
	by integrating reverse and forward engineering activities in an intertwined
	process. The described mechanism is based on a formalization of redesign
	transformations by graph rewriting rules and has been implemented
	in the Varlet reengineering environment},
  doi = {10.1109/CSMR.1999.756693},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {Varlet reengineering environment;World Wide Web;companies;computer-aided
	reengineering tools;decision support systems;distributed computing;electronic
	commerce;forward engineering;graph rewriting rules;incremental consistency
	management;information system reengineering;legacy system;management
	information systems;object-orientation;redesign;reverse engineering;waterfall-type
	reengineering;business data processing;information systems;reverse
	engineering;software tools;systems re-engineering;}
}

@INPROCEEDINGS{1192421,
  author = {Jeyaraman, G. and Krishnamurthy, K. and Raveendra, V.V.S.},
  title = {Reengineering legacy application to e-business with modified Rational
	Unified Process},
  booktitle = {Software Maintenance and Reengineering, 2003. Proceedings. Seventh
	European Conference on},
  year = {2003},
  pages = { 143 - 150},
  month = {march},
  abstract = { Experience in reengineering a legacy application into a web based
	J2EE system with modified Rational Unified Process (RUP) is presented
	RUP is adopted into an onsite-offshore development model along with
	ISO 9001 and SEI CMM Level 5 standards. The new application has above
	2500 code components and the effort is about 100 person years. For
	the benefit of software development community, some of our experiences
	in design, development, testing and project management are elaborated
	as generalized concepts. We have demonstrated that development process
	could be improved with lessons learnt from the initial iterations.
	The three views of a Web application are explained and the translations
	between the layers are discussed. Benefit of continuous integration
	is highlighted. Various types of dependencies to be taken into account
	for sequencing the development are elaborated. The levels of testing
	in iterative development are mentioned. The importance of adaptive
	team structure and various parameters guiding iteration planning
	are dealt with. A simple estimation model based on types of transactions
	is presented. Finally, a fine grained risk management concept that
	can integrate with the development process is proposed.},
  doi = {10.1109/CSMR.2003.1192421},
  issn = {1534-5351 },
  keywords = { ISO 9001 standards; Java 2 Enterprise Edition; SEI CMM Level 5 standards;
	Web based J2EE system; adaptive team structure; development process;
	fine grained risk management concept; iteration planning; iterative
	development; legacy application; modified Rational Unified Process;
	onsite-offshore development model; project management; reengineering;
	simple estimation model; software development community; testing;
	Java; electronic commerce; insurance data processing; program testing;
	software engineering; systems re-engineering;}
}

@INPROCEEDINGS{1402140,
  author = { Svensson, H. and Host, M.},
  title = {Introducing an Agile Process in a Software Maintenance and Evolution
	Organization},
  booktitle = {Software Maintenance and Reengineering, 2005. CSMR 2005. Ninth European
	Conference on},
  year = {2005},
  pages = { 256 - 264},
  month = {march},
  abstract = { The purpose of this paper is to present results of introducing an
	agile process based on extreme programming, XP, in an evolutionary
	and maintenance software development environment. The agile process
	was introduced to a large software development organization. The
	process was applied by a team during eight months. The conclusions
	indicate that it in this case is more difficult to introduce XP,
	in its original appearance, to the case environment than to less
	complex environments. The complexity of the organization made it
	necessary to redesign many of the practices in order for them to
	fit the needs of the software development team.},
  doi = {10.1109/CSMR.2005.33},
  issn = {1534-5351},
  keywords = { agile process; evolution organization; extreme programming; software
	development environment; software maintenance; organisational aspects;
	software development management; software maintenance; software metrics;
	software prototyping;}
}

@INPROCEEDINGS{972743,
  author = {Poole, C.J. and Murphy, T. and Huisman, J.W. and Higgins, A.},
  title = {Extreme maintenance},
  booktitle = {Software Maintenance, 2001. Proceedings. IEEE International Conference
	on},
  year = {2001},
  pages = {301 -309},
  abstract = {This paper examines some of the problems experienced by IONA Technology
	Orbix Generation 3 maintenance and enhancement team and how the adoption
	of Extreme Programming has further improved the team's ability to
	deliver quality support and enhancements to the products they work
	on. The issues identified and discussed are common issues for companies
	moving from the startup pressures of time to market to those related
	to supporting large numbers of customers with bug fixes and enhancements
	to existing applications in existing deployment scenarios. The paper
	briefly reviews the history of the teams development and maintenance
	practices prior to the implementation of the Extreme Programming
	practices. It then focuses on how Extreme Programming was implemented
	and used to resolve some of the identified problems. Results are
	detailed as both a qualitative view on the Extreme Programming project
	and the impacts on morale along with some of the quantitative analysis
	related to productivity and customer satisfaction. This experience
	has shown that Extreme programming is a viable and very successful
	model for teams involved in pure maintenance and enhancement of a
	legacy code base},
  doi = {10.1109/ICSM.2001.972743},
  issn = {1063-6773},
  keywords = {Extreme maintenance;Extreme programming;customer satisfaction;productivity;quality
	support;quantitative analysis;software maintenance;software maintenance;}
}

@INPROCEEDINGS{5306347,
  author = {Harrold, M.J.},
  title = {Reduce, reuse, recycle, recover: Techniques for improved regression
	testing},
  booktitle = {Software Maintenance, 2009. ICSM 2009. IEEE International Conference
	on},
  year = {2009},
  pages = {5},
  month = {sept.},
  __markedentry = {[kimi:1]},
  abstract = {One of the most expensive activities that occurs as software is developed
	and maintained is the testing (or retesting) of the software after
	it has been modified. Studies suggest that a significant portion
	of development and maintenance costs go to this retesting, which
	is known as regression testing. Reports estimate that regression
	testing consumes as much as 80% of the overall testing budget and
	can consume up to 50% of the cost of software maintenance. Rapidly
	changing software and computing environments present many challenges
	for effective and efficient regression testing in practice. Regression
	testing can be performed after changes are made to the software,
	such as after nightly or regular builds, before a new version of
	the software is released, every time the software is saved and compiled,
	such as in an agile development environment, or before patches, such
	as security patches, are released. Regardless of the environment
	or when it is performed, the goals of regression testing are the
	same: to improve confidence that the changes behave as intended and
	that they have not adversely affected unchanged parts of the software.
	Because regression testing is important, but expensive, much research
	has been performed, both in industry and in academia, to develop
	techniques to make regression testing more effective and efficient.
	This research has also produced many tools and systems that have
	been used for empirical studies that investigate the effectiveness,
	scalability, and practicality of the techniques. Researchers have
	developed techniques for addressing a number of issues related to
	regression testing, and, in this talk, I will discuss them in four
	areas. First, techniques attempt to reduce the regression testing
	time by creating effective regression test suites that test the changed
	part of the software, by identifying test cases in the regression
	test suite that do not need to be rerun on the changed software,
	and by identifying and removing obsolete test - cases. Second, techniques
	can reuse test suites created for one version of the software by
	identifying those test cases that need to be rerun for testing subsequent
	versions of the software and by computing an effective ordering for
	running the test cases. Third, techniques can recycle test cases
	by monitoring executions to gather test inputs that can be used for
	retest-ing and by creating unit test cases from system test cases.
	Finally, techniques could recover test cases by identifying, manipulating,
	and transforming obsolete test cases, by generating new test cases
	from old ones, and by repairing test cases when the software changes.
	In this talk, I will overview the research in testing of evolving
	software, and discuss achievements to date in managing regression
	testing by reducing, reusing, recycling, and recovering test cases.
	I will also present the state of the research and the state of the
	practice in regression testing. Finally, I will discuss the current
	trends in both academia and industry, the challenges for solving
	the difficult problems that exist, the promise for testing of evolving
	software in the future, and the important open challenges for regression
	testing in the next decade.},
  doi = {10.1109/ICSM.2009.5306347},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1063-6773},
  keywords = {agile development environment;regression testing;security patches;software
	changes;software evolution;software recovery;software recycling;software
	reusability;software testing;program testing;software maintenance;software
	reusability;}
}

@INPROCEEDINGS{6113071,
  author = {Desharnais, J.-M. and Kocaturk, B. and Abran, A.},
  title = {Using the COSMIC Method to Evaluate the Quality of the Documentation
	of Agile User Stories},
  booktitle = {Software Measurement, 2011 Joint Conference of the 21st Int'l Workshop
	on and 6th Int'l Conference on Software Process and Product Measurement
	(IWSM-MENSURA)},
  year = {2011},
  pages = {269 -272},
  month = {nov.},
  abstract = {Agile Project Management (APM) must adopt dynamic project plans to
	better handle the uncertainty and unpredictability associated with
	the Agile Software Development (ASD) methodologies. For these dynamic
	project plans, the functional size of the evolving requirements can
	be measured with COSMIC measurement method. To support this measurement
	activity, the quality of the documentation of the user stories, which
	represent the user requirements, is important to be interpreted correctly.
	In the research reported here, the COSMIC method is used to analyze
	and report on the quality of the documentation of user stories.},
  doi = {10.1109/IWSM-MENSURA.2011.45},
  excluded = {Kimi, title},
  keywords = {COSMIC measurement method;agile project management;agile software
	development;agile user stories;documentation quality evaluate;dynamic
	project plan;uncertainty handling;unpredictability handling;user
	requirements;formal specification;project management;software development
	management;software metrics;software prototyping;system documentation;}
}

@INPROCEEDINGS{5457331,
  author = {Vlaanderen, K. and Brinkkemper, S. and Jansen, S. and Jaspers, E.},
  title = {The Agile Requirements Refinery: Applying SCRUM Principles to Software
	Product Management},
  booktitle = {Software Product Management (IWSPM), 2009 Third International Workshop
	on},
  year = {2009},
  pages = {1 -10},
  month = {sept.},
  abstract = {Although agile software development methods such as SCRUM and DSDM
	are gaining popularity, the consequences of applying agile principles
	to software product management have received little attention until
	now. In this paper, this gap is filled by the introduction of a method
	for the application of SCRUM principles to software product management.
	For this purpose, the 'agile requirements refinery' is presented,
	an extension to the SCRUM process that enables product managers to
	cope with large requirements in an agile development environment.
	A real-life case study is presented to illustrate how agile methods
	can be applied to software product management. The experiences of
	the case study company are provided as a set of lessons learned that
	will help others to apply agile principles to their software product
	management process.},
  doi = {10.1109/IWSPM.2009.7},
  keywords = {SCRUM principles;agile requirement refinery;agile software development
	methods;software product management process;product life cycle management;software
	management;software prototyping;}
}

@INPROCEEDINGS{4022014,
  author = {Cooper, K.M.L.},
  title = {Can Agility be Introduced into Requirements Engineering for COTS
	Component Based Development?},
  booktitle = {Software Product Management, 2006. IWSPM '06. International Workshop
	on},
  year = {2006},
  pages = {35 -37},
  month = {sept. },
  abstract = {The Rational Unified Process is a popular software development process
	framework that can be tailored to meet the needs of different kinds
	of projects (large, small, component development, component based
	application development, etc.). This position paper presents an overview
	of a comprehensive RUP based process for developing COTS based systems
	and poses a set of questions that need to be considered to introduce
	agility into the process from a requirements engineering perspective.},
  doi = {10.1109/IWSPM.2006.2}
}

@INPROCEEDINGS{1383124,
  author = {Davidsson, M. and Zheng, J. and Nachiappan Nagappan and Williams,
	L. and Vouk, M.},
  title = {GERT: an empirical reliability estimation and testing feedback tool},
  booktitle = {Software Reliability Engineering, 2004. ISSRE 2004. 15th International
	Symposium on},
  year = {2004},
  pages = { 269 - 280},
  month = {nov.},
  __markedentry = {[kimi:2]},
  abstract = { Software testing is an integral part of the software development
	process. Some software developers, particularly those who use the
	Extreme Programming test-driven development practice, continuously
	write automated tests to verify their code. We present a tool to
	complement the feedback loops created by continuous testing. The
	tool combines static source code metrics with dynamic test coverage
	for use throughout the development phase to predict a reliability
	estimate based on a linear combination of these values. Implemented
	as an open source plug-in to the Eclipse IDE, the tool facilitates
	the rapid transition between unit test case completions and testing
	feedback. The color-coded results highlight inadequate testing efforts
	as well as weaknesses in overall program structure. To illustrate
	the tool's efficacy, we share the results of its use on university
	software engineering course projects.},
  doi = {10.1109/ISSRE.2004.21},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {1071-9458},
  keywords = { Eclipse IDE; Extreme Programming; GERT; Good Enough Reliability Tool;
	empirical reliability estimation; feedback loop; open source plug-in;
	reliability testing feedback tool; software development process;
	software testing; source code metrics; unit test case completion;
	university software engineering course project; program compilers;
	program control structures; program testing; public domain software;
	software metrics; software prototyping; software reliability; software
	tools;}
}

@INPROCEEDINGS{6225513,
  author = {Razavian, M. and Tamburri, D.A. and Qing Gu and Lago, P.},
  title = {Modeling to support communication and engineering of service-oriented
	software},
  booktitle = {Software Services and Systems Research - Results and Challenges (S-Cube),
	2012 Workshop on European},
  year = {2012},
  pages = {8 -9},
  month = {june},
  __markedentry = {[kimi:2]},
  abstract = {Our research focus is on social and sustainable Service-Oriented software
	engineering. From a social point of view, understanding social structures
	in Service-Oriented software engineering can lead to better software
	(as phrased in Conway's law). From a sustainable point of view, notational,
	methodological and techological support for Service-Oriented software
	engineering should aim at retaining past investments (in e.g. legacies),
	simplifying development processes and addressing global problems
	like the increasing need for remote collaboration, and the increasing
	scarcity of energy resources hence demanding for energy efficient
	solutions.},
  doi = {10.1109/S-Cube.2012.6225513},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {Conways law;energy resources;methodological support;notational support;remote
	collaboration;service-oriented software engineering;social structures;techological
	support;service-oriented architecture;}
}

@INPROCEEDINGS{6225500,
  author = {Di Nitto, E. and Meilander, D. and Gorlatch, S. and Metzger, A. and
	Psaier, H. and Dustdar, S. and Razavian, M. and Tamburri, D.A. and
	Lago, P.},
  title = {Research challenges on engineering service-oriented applications},
  booktitle = {Software Services and Systems Research - Results and Challenges (S-Cube),
	2012 Workshop on European},
  year = {2012},
  pages = {14 -20},
  month = {june},
  __markedentry = {[kimi:2]},
  abstract = {This paper focuses on providing an overview of the research challenges
	that have been identified toward the end of the S-Cube network in
	the area of service engineering. These challenges concern the need
	for agility and dynamicity of the development process for service-based
	applications, the importance of focusing on proper approaches to
	support migration of legacy application into service-based applications
	and the role of humans and of teams of humans in service-based applications.},
  doi = {10.1109/S-Cube.2012.6225500},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {S-Cube network;SOA;agile service network;agility;dynamicity;legacy
	application;service engineering;service-based application;service-oriented
	application;service-oriented architecture;software evolution;support
	migration;service-oriented architecture;software maintenance;software
	prototyping;}
}

@INPROCEEDINGS{1611736,
  author = {Xiaoying Bai and Guilan Dai and Dezheng Xu and Wei-Tek Tsai},
  title = {A multi-agent based framework for collaborative testing on Web services},
  booktitle = {Software Technologies for Future Embedded and Ubiquitous Systems,
	2006 and the 2006 Second International Workshop on Collaborative
	Computing, Integration, and Assurance. SEUS 2006/WCCIA 2006. The
	Fourth IEEE Workshop on},
  year = {2006},
  pages = {6 pp.},
  month = {april},
  __markedentry = {[kimi:2]},
  abstract = {Web services (WS) is currently the major implementation of service-oriented
	architecture (SOA). It defines a framework for agile and flexible
	integration among autonomous services based on Internet open standards.
	However, testing has been a challenge due the dynamic and collaborative
	nature of WS. This paper introduces an on-going project on a multiagent
	based framework to coordinate distributed test agents to generate,
	plan, execute, monitor and communicate tests on WS. Test agents are
	classified into different roles which communicate through XML-based
	agent test protocols. Test master accepts test cases from test generator,
	generates test plans and distributed them to various test groups.
	A set of test agents that implement a test plan are organized into
	a test group, which is coordinated by a test coordinator. Test runners
	execute the test scripts, collect test results and forward the results
	to test analyzer for quality and reliability analysis. The status
	of the test agents are monitored by the test monitor. Test agents
	are dynamically created, deployed and organized. Through the monitoring
	and coordinating mechanism, the agents can re-adjust the test plan
	and their behavior at runtime to be adaptive to the changing environment},
  doi = {10.1109/SEUS-WCCIA.2006.7},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {Internet open standard;XML agent test protocol;autonomous Web service;collaborative
	testing;distributed test agent coordination;eXtensible Markup Language;multiagent
	systems;quality analysis;reliability analysis;service-oriented architecture;test
	case generator;test group coordinator;test master;test monitor;test
	plan;test runner;test script analyzer;Internet;XML;multi-agent systems;program
	testing;}
}

@INPROCEEDINGS{5608805,
  author = {Roy, S. and Debnath, M.K.},
  title = {Designing SOA based e-governance system using eXtreme Programming
	methodology for developing countries},
  booktitle = {Software Technology and Engineering (ICSTE), 2010 2nd International
	Conference on},
  year = {2010},
  volume = {2},
  pages = {V2-277 -V2-282},
  month = {oct.},
  abstract = {Information technology for e-governance system could yield great benefits
	and modernization of the different government sectors. The experience
	of e-governance system in a number of developed and developing countries
	has shown that information technology can provide greater service
	delivery with great quality. The purpose of this paper is to better
	understand how agile principles, specifically eXtreme Programming
	(XP) practices, can be effectively introduced and implemented into
	e-government system in developing countries that have historically
	embraced the plan-driven traditional software development environment.},
  doi = {10.1109/ICSTE.2010.5608805},
  keywords = {SOA;XP;agile principle;e-governance system;e-government system;eXtreme
	Programming;software development environment;government data processing;software
	architecture;software prototyping;}
}

@INPROCEEDINGS{5477060,
  author = {Causevic, A. and Sundmark, D. and Punnekkat, S.},
  title = {An Industrial Survey on Contemporary Aspects of Software Testing},
  booktitle = {Software Testing, Verification and Validation (ICST), 2010 Third
	International Conference on},
  year = {2010},
  pages = {393 -401},
  month = {april},
  __markedentry = {[kimi:2]},
  abstract = {Software testing is a major source of expense in software projects
	and a proper testing process is a critical ingredient in the cost-efficient
	development of high-quality software. Contemporary aspects, such
	as the introduction of a more lightweight process, trends towards
	distributed development, and the rapid increase of software in embedded
	and safety-critical systems, challenge the testing process in unexpected
	manners. To our knowledge, there are very few studies focusing on
	these aspects in relation to testing as perceived by different contributors
	in the software development process. This paper qualitatively and
	quantitatively analyses data from an industrial questionnaire survey,
	with a focus on current practices and preferences on contemporary
	aspects of software testing. Specifically, the analysis focuses on
	perceptions of the software testing process in different categories
	of respondents. Categorization of respondents is based on safety-criticality,
	agility, distribution of development, and application domain. While
	confirming some of the commonly acknowledged facts, our findings
	also reveal notable discrepancies between preferred and actual testing
	practices. We believe continued research efforts are essential to
	provide guidelines in the adaptation of the testing process to take
	care of these discrepancies, thus improving the quality and efficiency
	of the software development.},
  doi = {10.1109/ICST.2010.52},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {embedded system;industrial survey;safety critical system;software
	development process;software project;software testing contemporary
	aspect;embedded systems;program testing;safety-critical software;software
	engineering;}
}

@INPROCEEDINGS{5770623,
  author = {Causevic, A. and Sundmark, D. and Punnekkat, S.},
  title = {Factors Limiting Industrial Adoption of Test Driven Development:
	A Systematic Review},
  booktitle = {Software Testing, Verification and Validation (ICST), 2011 IEEE Fourth
	International Conference on},
  year = {2011},
  pages = {337 -346},
  month = {march},
  abstract = {Test driven development (TDD) is one of the basic practices of agile
	software development and both academia and practitioners claim that
	TDD, to a certain extent, improves the quality of the code produced
	by developers. However, recent results suggest that this practice
	is not followed to the extent preferred by industry. In order to
	pinpoint specific obstacles limiting its industrial adoption we have
	conducted a systematic literature review on empirical studies explicitly
	focusing on TDD as well as indirectly addressing TDD. Our review
	has identified seven limiting factors viz., increased development
	time, insufficient TDD experience/knowledge, lack of upfront design,
	domain and tool specific issues, lack of developer skill in writing
	test cases, insufficient adherence to TDD protocol, and legacy code.
	The results of this study is of special importance to the testing
	community, since it outlines the direction for further detailed scientific
	investigations as well as highlights the requirement of guidelines
	to overcome these limiting factors for successful industrial adoption
	of TDD.},
  doi = {10.1109/ICST.2011.19},
  excluded = {Kimi, title},
  keywords = {agile software development;industrial adoption;legacy code;test driven
	development;program testing;software maintenance;software prototyping;}
}

@INPROCEEDINGS{5954467,
  author = {Entin, V. and Winder, M. and Bo Zhang and Christmann, S.},
  title = {Combining Model-Based and Capture-Replay Testing Techniques of Graphical
	User Interfaces: An Industrial Approach},
  booktitle = {Software Testing, Verification and Validation Workshops (ICSTW),
	2011 IEEE Fourth International Conference on},
  year = {2011},
  pages = {572 -577},
  month = {march},
  __markedentry = {[kimi:2]},
  abstract = {Various approaches for the automated test case generation and execution
	in the area of graphical user interface testing (GUI) have emerged
	in recent years. Two notable trends are model-based testing as well
	as capture and replay technique. In this contribution we present
	an approach which allows a meaningful combination of both in order
	to be able to derive fully executable test cases from usage-models
	and to keep them highly maintainable in a SCRUM process. We first
	define a set of re-useable test steps by means of a capture and replay
	tool (TAISpy). Next, we show how it is possible to directly integrate
	these test steps into the usage models of a GUI and subsequently
	to generate executable test cases from them without further refinement
	or transformation to other formats. General idea, implemented architecture,
	tool chain and, finally, a case study are presented.},
  doi = {10.1109/ICSTW.2011.13},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {GUI testing;SCRUM process;TAISpy;automated test case generation;capture-and-replay
	tool;capture-replay testing;graphical user interface;model-based
	testing;graphical user interfaces;program testing;}
}

@INPROCEEDINGS{4976385,
  author = {Knauth, T. and Fetzer, C. and Felber, P.},
  title = {Assertion-Driven Development: Assessing the Quality of Contracts
	Using Meta-Mutations},
  booktitle = {Software Testing, Verification and Validation Workshops, 2009. ICSTW
	'09. International Conference on},
  year = {2009},
  pages = {182 -191},
  month = {april},
  __markedentry = {[kimi:2]},
  abstract = {Agile development methods have gained momentum in the last few years
	and, as a consequence, test-driven development has become more prevalent
	in practice. However, test cases are not sufficient for producing
	dependable software and we rather advocate approaches that emphasize
	the use of assertions or contracts over that of test cases. Yet,
	writing self-checks in code has been shown to be difficult and is
	itself prone to errors. A standard technique to specify runtime properties
	is design-by contract(DbC). But how can one test if the contracts
	themselves are sensible and sufficient? We propose a measure to quantify
	the goodness of contracts (or assertions in a broader sense). We
	introduce meta-mutations at the source code level to simulate common
	programmer errors that the self-checks are supposed to detect. We
	then use random mutation testing to determine a lower and upper bound
	on the detectable mutations and compare these bounds with the number
	of mutants detected by the contracts. Contracts are considered ldquogoodrdquo
	if they detect a certain percentage of the detectable mutations.We
	have evaluated our tools on Java classes with contracts specified
	using the Java Modeling Language (JML). We have additionally tested
	the contract quality of 19 implementations, written independently
	by students, based on the same specification.},
  doi = {10.1109/ICSTW.2009.40},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {Java modeling language;agile development methods;assertion-driven
	development;design-by-contract;quality of contracts;random mutation
	testing;test-driven development;Java;program testing;software engineering;}
}

@INPROCEEDINGS{5463685,
  author = {Hellmann, T.D. and Hosseini-Khayat, A. and Maurer, F.},
  title = {Supporting Test-Driven Development of Graphical User Interfaces Using
	Agile Interaction Design},
  booktitle = {Software Testing, Verification, and Validation Workshops (ICSTW),
	2010 Third International Conference on},
  year = {2010},
  pages = {444 -447},
  month = {april},
  __markedentry = {[kimi:2]},
  abstract = {Test-driven development of GUIs is currently very difficult. On the
	one hand, to avoid frequent updates of the tests, test-driven development
	requires a degree of stability in the application under development,
	whereas GUIs are very likely to change during development. On the
	other hand, the easiest way of creating GUI tests - using a capture/replay
	tool - requires the GUI to exist. This paper introduces a new approach
	to user-interface test-driven development, wherein a capture-replay
	tool is used to record test scripts from low-fidelity prototypes.
	This allows GUI tests to be written simply and without requiring
	that the GUI exist first.},
  doi = {10.1109/ICSTW.2010.35},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {GUI testing;agile interaction design;capture replay tool;graphical
	user interface;user interface test driven development;graphical user
	interfaces;program testing;software tools;}
}

@INPROCEEDINGS{5463689,
  author = {Atkinson, C. and Barth, F. and Brenner, D.},
  title = {Software Testing Using Test Sheets},
  booktitle = {Software Testing, Verification, and Validation Workshops (ICSTW),
	2010 Third International Conference on},
  year = {2010},
  pages = {454 -459},
  month = {april},
  __markedentry = {[kimi:2]},
  abstract = {Although testing is one of the most important activities in software
	development, especially in projects which emphasize agile development,
	the basic approach used to define and report tests has changed little
	since JUnit was introduced over a decade ago. JUnit and its derivatives
	such as NUnit significantly simplify the task of programming tests
	but still leave the test logic tangled up with program scaffolding,
	making it difficult to see and validate. On the other hand, recently
	introduced validation oriented approaches, such as FIT, provide a
	much more concise and easy to understand description of test logic,
	but cannot cope with code-level testing. In this paper we present
	a new metaphor for test definition and reporting, referred to as
	"test sheets", that combines the expressive strength of JUnit with
	the visual simplicity of tabular approaches such as FIT. After discussing
	the strengths and weaknesses of the technologies used today we present
	the test sheet approach using some simple examples.},
  doi = {10.1109/ICSTW.2010.21},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {JUnit;NUnit;agile development;code-level testing;program scaffolding;programming
	testing;software development;software testing;tabular approach;test
	definition;test logic;test reporting;test sheets;validation oriented
	approach;program testing;software prototyping;}
}

@ARTICLE{4118652,
  author = {Alexander, L. and Kent Beck},
  title = {Point/Counterpoint},
  journal = {Software, IEEE},
  year = {2007},
  volume = {24},
  pages = {62 -65},
  number = {2},
  month = {march-april },
  abstract = {The key to successful systems is building what the stakeholders desire.
	In a way, this point can hardly be gain.said: nobody wants to build
	what the stakeholders don't desire. But as usual, the devil is in
	the details. this paper contrasts two examples to illustrate what
	it can mean to build what stakeholders desire. There's an old saying
	in software development that the users don't know what they want
	until you give them what they asked for. Experienced developers often
	smile ruefully when they hear this, having been told at least once
	in their careers that a system they had delivered was totally unacceptable
	when it was exactly (as far as they could tell) what was requested.
	There's more to delivering good software than following orders. The
	paper describes what positive role developers can play in discovering
	and exploring requirements},
  doi = {10.1109/MS.2007.50},
  excluded = {Kimi, title},
  issn = {0740-7459},
  keywords = {DWTTY;requirements engineering;software development;stakeholders requirements;formal
	specification;software development management;systems analysis;}
}

@ARTICLE{1020280,
  author = {Reifer, D.J.},
  title = {How good are agile methods?},
  journal = {Software, IEEE},
  year = {2002},
  volume = {19},
  pages = {16 -18},
  number = {4},
  month = {july-aug. },
  abstract = {The software industry seems to be embracing yet another change to
	the way it does business. Because of their emphasis on agility and
	time-to-market, many programming shops are moving to agile methods.
	Unlike more traditional approaches, these methods focus on generating
	early releases of working products using mostly collaborative techniques
	such as pair programming, refactoring, and having customers work
	on site as team members. Programmers use these releases-which are
	working products, not prototypes-to demonstrate features and functions
	to stakeholders involved in their use, marketing, and support. This
	article surveys the experience software engineers in a wide, range
	of industries have had in deploying agile methods.},
  doi = {10.1109/MS.2002.1020280},
  issn = {0740-7459},
  keywords = {agile methods;collaborative techniques;pair programming;refactoring;software
	industry;programming;software engineering;}
}

@ARTICLE{5396318,
  author = {Madison, J},
  title = {Agile Architecture Interactions (was: Agile Architecture Insertion
	Points)},
  journal = {Software, IEEE},
  year = {2010},
  volume = {PP},
  pages = {1},
  number = {99},
  month = { },
  abstract = {Agile delivers value quickly, using a series of short-term goals based
	on immediate priorities. Architecture grows value carefully, using
	a set of long-term objectives based on fundamental principles. The
	two seem at odds, but the architect can bring them together at four
	well-defined points in agile projects: during project initiation
	by setting architectural direction, through storyboarding by introducing
	specific architectural tasks, within sprints by close collaboration
	on challenging issues, and as working software gets delivered by
	performing direct inspection. These must be done with four critical
	skills: decomposing architectural work into iterative form, advocating
	the merits of architecture throughout development, tracking the architectural
	state of the project as it executes, and driving toward a broader
	enterprise architecture to which all agile projects are contributing.
	When done effectively, this approach achieves a pragmatic balance
	between business and architectural priorities while delivering both
	with agility.},
  doi = {10.1109/MS.2010.27},
  excluded = {Kimi, title},
  issn = {0740-7459}
}

@ARTICLE{1331307,
  author = {Yuefeng Zhang},
  title = {Test-driven modeling for model-driven development},
  journal = {Software, IEEE},
  year = {2004},
  volume = {21},
  pages = { 80 - 86},
  number = {5},
  month = {sept.-oct.},
  __markedentry = {[kimi:2]},
  abstract = { A new software development process called test-driven modeling applies
	the Extreme Programming test-driven paradigm in a model-driven development
	environment. (The basis of this article is a project in Motorola's
	iDEN division that is extending and migrating a large legacy telecommunication
	system to new platforms using TDM.) This process involves automatic
	testing through simulation and using executable models as living
	software system architecture documents. In TDM, we use the same message
	sequence charts (MSCs) for both system analysis (or design documents)
	and unit test cases. Similarly, we use the same high-level modeling
	diagrams for both automatic code generation and living software architecture
	documents to guide the system's detailed implementation in later
	phases. Practical results show that developers can effectively apply
	TDM to large projects with high productivity and quality in terms
	of the number of code defects.},
  doi = {10.1109/MS.2004.1331307},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {0740-7459},
  keywords = { Extreme Programming; automatic testing; high-level modeling diagrams;
	message sequence charts; model-driven development; software development
	process; software system architecture documents; system analysis;
	test-driven modeling; program testing; software architecture; software
	development management; software quality; systems analysis;}
}

@ARTICLE{6216346,
  author = {Grau, R. and Joseph, B. and Sagesser, K.},
  title = {Introducing an Iterative Lifecycle Model at Credit Suisse IT Switzerland},
  journal = {Software, IEEE},
  year = {2012},
  volume = {PP},
  pages = {1},
  number = {99},
  month = { },
  abstract = {Abstract amp;#x2014;. Credit Suisse IT Switzerland decided to introduce
	an iterative life cycle model (ILCM) based on the Rational Unified
	Process (RUP), a de facto industry standard, in addition to the well-established
	waterfall lifecycle model (WLCM). Such a large scale change management
	initiative is fraught with risks, challenges and requires a mind-shift
	on the part of the organization embracing this change. Careful consideration
	was given to a number of aspects, such as the gap between RUP and
	CMMI, process vocabulary, best practices, development and maintenance
	effort, training and company culture as a precursor to such a profound
	change. The activities to deploy the model through out the organization
	were coordinated in collaboration with actual practitioners towards
	creating awareness, knowledge management, managing resistance factors
	and effecting the required mindset change.},
  doi = {10.1109/MS.2012.74},
  issn = {0740-7459}
}

@ARTICLE{1438323,
  author = {Mellor, S.J.},
  title = {Editor's Introduction: Adapting Agile Approaches to Your Project
	Needs},
  journal = {Software, IEEE},
  year = {2005},
  volume = {22},
  pages = { 17 - 20},
  number = {3},
  month = {may-june},
  __markedentry = {[kimi:2]},
  abstract = { The author describes how the Agile Alliance began, what the Agile
	Manifesto advocates, and what he feels are the most important principles
	in agile practices.},
  doi = {10.1109/MS.2005.61},
  excludekimi = {abstract},
  issn = {0740-7459},
  keywords = { agile programming; customer management; project management; teamwork;
	testing;}
}

@ARTICLE{1196316,
  author = {Rasmussen, J.},
  title = {Introducing XP into Greenfield Projects: lessons learned},
  journal = {Software, IEEE},
  year = {2003},
  volume = {20},
  pages = { 21 - 28},
  number = {3},
  month = {may-june},
  abstract = { ThoughtWorks introduced XP into an organization and successfully
	completed a bleeding-edge technology project with client staff that
	had no previous experience using an agile development approach. This
	article illustrates not only how XP helped make the project a success,
	but also gives other lessons learned regarding the introduction of
	XP at client sites.},
  doi = {10.1109/MS.2003.1196316},
  issn = {0740-7459},
  keywords = { Extreme Programming; Greenfield Projects; ThoughtWorks; TransCanada
	Pipelines Limited; Web service; project management; software development;
	test-driven development; project engineering; project management;
	software development management; software engineering;}
}

@ARTICLE{965801,
  author = {Poole, C. and Huisman, J.W.},
  title = {Using extreme programming in a maintenance environment},
  journal = {Software, IEEE},
  year = {2001},
  volume = {18},
  pages = {42 -50},
  number = {6},
  month = {nov/dec},
  abstract = {In response to problems experienced by the Orbix Generation 3 maintenance
	and enhancement team, Iona Technologies tried to introduce industry-level
	best practices by adopting extreme programming. The issues discussed
	are common for companies moving from startup mode to those supporting
	numerous customers in need of bug fixes and application enhancements
	for existing deployment scenarios},
  doi = {10.1109/52.965801},
  issn = {0740-7459},
  keywords = {Orbix Generation 3 maintenance;extreme programming;maintenance environment;software
	development management;}
}

@ARTICLE{6276296,
  author = {Ebert, Christof and Abrahamsson, Pekka and Oza, Nilay},
  title = {Lean Software Development},
  journal = {Software, IEEE},
  year = {2012},
  volume = {29},
  pages = {22 -25},
  number = {5},
  month = {sept.-oct. },
  abstract = {This special issue addresses lean software development. What principles
	deliver value, and how are they introduced to best manage change?},
  doi = {10.1109/MS.2012.116},
  issn = {0740-7459}
}

@ARTICLE{1049384,
  author = {Wallin, C. and Ekdahl, F. and Larsson, S.},
  title = {Integrating business and software development models},
  journal = {Software, IEEE},
  year = {2002},
  volume = {19},
  pages = {28 -33},
  number = {6},
  month = {nov.-dec. },
  abstract = {Developing the right products the right way is challenging, not least
	in software product development. It requires sound business decisions
	as well as good engineering practices. Various software development
	life-cycle models can be mapped to business decision models by mapping
	business decision gates and major development milestones. Two well-known
	life-cycle models have been mapped to the ABB Gate Model, a business
	decision model for product development projects that was developed
	to ensure that released products could be successfully deployed into
	the marketplace.},
  doi = {10.1109/MS.2002.1049384},
  issn = {0740-7459},
  keywords = {ABB Gate Model;Extreme Programming;budget;business decision models;software
	development life-cycle models;software engineering;software product
	development;product development;project management;software development
	management;}
}

@ARTICLE{991334,
  author = {Ambler, S.W.},
  title = {Lessons in agility from Internet-based development},
  journal = {Software, IEEE},
  year = {2002},
  volume = {19},
  pages = {66 -73},
  number = {2},
  month = {mar/apr},
  abstract = {This article describes the experiences of two Internet startup companies
	adopting effective and efficient modeling and documentation practices.
	Both organizations successfully developed agile approaches for enterprise
	architectural modeling, one taking a communal team-based approach
	and the other a chief-architect approach. They adopted similar strategies
	for project-level modeling, adopting highly iterative and incremental
	approaches that focused on modeling and not on the resulting models
	themselves. There is a "sweet spot" where modeling efforts can provide
	significant benefit without incurring the costs of onerous documentation},
  doi = {10.1109/52.991334},
  issn = {0740-7459},
  keywords = {Internet;PQR;XYZ net;agile modeling;architectural documentation;architecture
	modelling;software architecture;software development;Internet;software
	architecture;software development management;software engineering;}
}

@ARTICLE{5210088,
  author = {Moe, N and Dingsoyr, T and Dyba, T},
  title = {Overcoming barriers to self-management in software teams},
  journal = {Software, IEEE},
  year = {2009},
  volume = {PP},
  pages = {1},
  number = {99},
  month = { },
  abstract = {This longitudinal case study reports upon the experiences from three
	small and medium-sized software product companies implementing Scrum
	#150; an agile process. Self-management emerged as the key topic
	that was challenging throughout all projects. When transforming from
	traditional command-and-control management to collaborative self-managing
	team, the main challenges were found to be the absence of redundancy
	and the conflict between team level and individual level autonomy.
	Our findings are primarily based on qualitative analysis of interviews
	and observations with developers and product managers. Our findings
	may give important advice to other product companies considering
	introducing self-managing teams and agile development practices.},
  doi = {10.1109/MS.2009.114},
  excluded = {Kimi, title},
  issn = {0740-7459}
}

@ARTICLE{6226343,
  author = {Maglyas, A. and Nikula, U. and Smolander, K.},
  title = {Lean Solutions to Software Product Management Problems},
  journal = {Software, IEEE},
  year = {2012},
  volume = {29},
  pages = {40 -46},
  number = {5},
  month = {sept.-oct. },
  abstract = {Although the discipline of software product management plays an important
	role in the development of successful products, each company adopts
	its practices in its own way. Regardless of variations, companies
	face common problems. This article identifies five problems that
	lean principles to software product management can help organizations
	avoid or solve.},
  doi = {10.1109/MS.2012.108},
  excluded = {Kimi, title},
  issn = {0740-7459},
  keywords = {lean solutions;software product development;software product management
	problems;software development management;software houses;}
}

@ARTICLE{1657934,
  title = {Guest Editors' Introduction: Software Testing Practices in Industry},
  journal = {Software, IEEE},
  year = {2006},
  volume = {23},
  pages = {19 -21},
  number = {4},
  month = {july-aug. },
  __markedentry = {[kimi:1]},
  abstract = {Four papers and a roundtable discussion shed light on the current
	state of software testing practices. Case studies from industry experience
	address topics including unit-testing practices, agile testing, and
	automating software testing. Although many of these approaches show
	promise, software testing is still one of the more neglected practices
	within the software development life cycle. Suggestions for improvements
	in industry and academia are offered.},
  doi = {10.1109/MS.2006.104},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0740-7459},
  keywords = {SQA;V amp;amp;V;agile software testing;parameterized unit testing;scripting
	language;software testing;symbolic execution;test automation;test
	coverage;test design;testing practice;testing tools;unit testing;}
}

@ARTICLE{1576653,
  author = {Lesiecki, N.},
  title = {Applyinq AspectJ to J2EE application development},
  journal = {Software, IEEE},
  year = {2006},
  volume = {23},
  pages = {24 -32},
  number = {1},
  month = {jan.-feb. },
  __markedentry = {[kimi:2]},
  abstract = {(AOP) programming is a technique that allows programmers to modularize
	crosscutting concerns (behavior that cuts across the typical divisions
	of responsibility, such as concurrency or security). Aspect-oriented
	programming and the AspectJ language can reduce code size and defects
	while increasing understandability. Video Monitoring Services of
	America (VMS) began to investigate the adoption of AOP into the development
	of Adbase, the Java 2 Enterprise Edition-based application. Adbase
	supplies a Web-based search and e-commerce interface on VMS's library
	of advertising data. It uses a wide range of J2EE technologies, both
	commercial and open source. The Adbase team varied from four to seven
	full-time developers during the time frame covered by this article.
	We followed a modified version of extreme programming with a focus
	on emergent design and adherence to XP practices such as programmer
	testing-and pair programming},
  doi = {10.1109/MS.2006.1},
  excludekimi = {abstract},
  issn = {0740-7459},
  keywords = {AOP programming;AspectJ language;J2EE application development;Web-based
	search;aspect-oriented programming;e-commerce interface;extreme programming;pair
	programming;Java;object-oriented programming;}
}

@ARTICLE{4163032,
  author = {Vodde, Bas and Koskela, Lasse},
  title = {Learning Test-Driven Development by Counting Lines},
  journal = {Software, IEEE},
  year = {2007},
  volume = {24},
  pages = {74 -79},
  number = {3},
  month = {may-june },
  __markedentry = {[kimi:2]},
  abstract = {During the last two years, Nokia Networks has started changing much
	of its product development from a traditional waterfall approach
	to Scrum, an agile software development process. Besides Scrum, there
	has been a lot of focus on engineering practices such as test-driven
	development. We've been involved in creating TDD training at Nokia
	Networks to support the transition to agile development. This training
	approach has students write tests that count lines of code. The problems
	they encounter provide valuable insights into TDD and its benefits},
  doi = {10.1109/MS.2007.80},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {0740-7459},
  keywords = {Nokia Networks;Scrum agile software development process;line-counting
	exercise;test-driven development training;waterfall product development
	approach;computer based training;computer science education;program
	testing;software engineering;}
}

@ARTICLE{6226342,
  author = {Rudorfer, A. and Stenzel, T. and Herold, G.},
  title = {A Business Case for Feature-Oriented Requirements Engineering},
  journal = {Software, IEEE},
  year = {2012},
  volume = {29},
  pages = {54 -59},
  number = {5},
  month = {sept.-oct. },
  abstract = {Owing to strong market growth for medical devices deployed in critical-care
	facilities, development organizations in medical engineering must
	continually look for opportunities to drive engineering efficiency
	and cost effectiveness. Furthermore, cycle time must decrease, the
	alignment of clinical workflow is breaking down departmental barriers,
	and an increased amount of product functionality is being realized
	in software. To help meet such challenges, adequate requirements
	engineering is necessary. Toward that end, Syngo (a business unit
	of the Imaging and Therapy division of Siemens) introduced Feature-Oriented
	Requirements Engineering (FORE) and developed a business case for
	using it in the context of a lean engineering program. FORE integrates
	with other engineering disciplines such as project management, software
	architecture, and test management. There was an error in the biographical
	information for Tobias Stenzel. Stenzel's biography should have indicated
	that he has an MS in industrial engineering and management from the
	University of Technology Karlsruhe, Germany.},
  doi = {10.1109/MS.2012.106},
  excluded = {Kimi, title},
  issn = {0740-7459},
  keywords = {FORE;Germany;Syngo;University of Technology Karlsruhe;biographical
	information;business unit;clinical workflow alignment;critical-care
	facilities;development organization;feature-oriented requirements
	engineering;imaging division;industrial engineering and management;lean
	engineering program;medical devices;medical engineering;product functionality;project
	management;software architecture;test management;therapy division;formal
	specification;medical computing;software architecture;}
}

@ARTICLE{5287005,
  author = {Moe, N.B. and Dingsoyr, T. and Dyba, T.},
  title = {Overcoming Barriers to Self-Management in Software Teams},
  journal = {Software, IEEE},
  year = {2009},
  volume = {26},
  pages = {20 -26},
  number = {6},
  month = {nov.-dec. },
  abstract = {The basic work unit in innovative software organizations is the team
	rather than the individual. Such teams consist of "a small number
	of people with complementary skills who are committed to a common
	purpose, set of performance goals, and approach for which they hold
	themselves mutually accountable". Work teams have many advantages,
	such as increased productivity, innovation, and employee satisfaction.
	However, their implementation doesn't always result in organizational
	success. It isn't enough to put individuals together and expect that
	they'll automatically know how to work effectively as a team. Lack
	of redundancy and conflict between team and individual autonomy are
	key issues when transforming from traditional command-and-control
	management to collaborative self-managing teams.},
  doi = {10.1109/MS.2009.182},
  excluded = {Kimi, title},
  issn = {0740-7459},
  keywords = {basic work unit;collaborative self-managing team;command-and-control
	management;complementary skill;employee satisfaction;increased productivity;innovation;innovative
	software organization;performance goal set;redundancy;software team;team
	conflict;work team;employee welfare;software development management;team
	working;}
}

@ARTICLE{5604357,
  author = {Berczuk, Steve and Lv, Yi},
  title = {We're All in This Together},
  journal = {Software, IEEE},
  year = {2010},
  volume = {27},
  pages = {12 -15},
  number = {6},
  month = {nov.-dec. },
  abstract = {Being agile is hard, and some organizations experience different challenges
	than others. In this interview, Steve Berczuk has a conversation
	with Yi Lv about the change process of introducing Scrum into organizations
	with different cultural, geographic, and size attributes. They focus
	on the role line managers and Scrum Masters play in establishing
	a sustainable Scrum culture. They also discover that agile introduction
	has some universals.},
  doi = {10.1109/MS.2010.151},
  issn = {0740-7459}
}

@ARTICLE{5420791,
  author = {Abrahamsson, P. and Babar, M.A. and Kruchten, P.},
  title = {Agility and Architecture: Can They Coexist?},
  journal = {Software, IEEE},
  year = {2010},
  volume = {27},
  pages = {16 -22},
  number = {2},
  month = {march-april },
  abstract = {Agile development has significantly impacted industrial software development
	practices. However, despite its wide popularity, there's an increasing
	perplexity about software architecture's role and importance in agile
	approaches. Advocates of architecture's vital role in achieving quality
	goals for large software-intensive systems doubt the scalability
	of any development approach that doesn't pay sufficient attention
	to architecture. This article talks about software architecture being
	relevant to the basis of aspects such as communication among team
	members, inputs to subsequent design decisions, documenting design
	assumptions, and evaluating design alternatives. In a large software
	organization, implementing agile approaches isn't a straightforward
	adoption problem. Most likely, it will take several years to shorten
	the feedback cycles to benefit from the adaptability and earlier
	value-creation opportunities. Failure is a natural part of process
	improvement.},
  doi = {10.1109/MS.2010.36},
  issn = {0740-7459},
  keywords = {agile development;design assumptions;design decisions;industrial software
	development practices;software architecture;software intensive systems;software
	architecture;software development management;}
}

@ARTICLE{1438326,
  author = {Schatz, B. and Abdelshafi, I.},
  title = {Primavera gets agile: a successful transition to agile development},
  journal = {Software, IEEE},
  year = {2005},
  volume = {22},
  pages = { 36 - 42},
  number = {3},
  month = {may-june},
  abstract = { Primavera Systems provides enterprise project portfolio management
	solutions that help customers manage their projects, programs, and
	resources. When we decided to improve how we build software and increase
	the quality of life for everyone on the team, we found our answer
	in agile software development. Adopting agile practices is a process
	of continuous learning and improvement. Primavera's development team
	is a model for others looking to adopt agile processes.},
  doi = {10.1109/MS.2005.74},
  issn = {0740-7459},
  keywords = { Primavera Systems; agile software development; enterprise project
	portfolio management; software process improvement; software quality;
	project management; software development management; software process
	improvement; software quality;}
}

@ARTICLE{1231156,
  author = {Ambler, S.W.},
  title = {Agile model driven development is good enough},
  journal = {Software, IEEE},
  year = {2003},
  volume = {20},
  pages = { 71 - 73},
  number = {5},
  month = {sept.-oct.},
  abstract = { I'm not all that sure about the direction that model-driven development
	appears to be taking. Don't get me wrong-I'm a firm believer in modeling.
	It's just that I think that there's a lot more to development than
	this. Here's my point: We need to distinguish between generative
	MDD and Agile MDD. Generative MDD, epitomized by the Object Management
	Group's Model Driven Architecture, is based on the idea that people
	will use very sophisticated modeling tools to create very sophisticated
	models that they can automatically "transform" with those tools to
	reflect the realities of various deployment platforms. Great theory-as
	was the idea that the world is flat. In my opinion, generative MDD
	is a lost cause for the current generation of developers. Agile MDD
	will be a struggle to pull off, but at least it has a chance of succeeding.},
  doi = {10.1109/MS.2003.1231156},
  issn = {0740-7459},
  keywords = { agile model driven development; generative model-driven development;
	model-centric development; test-driven development; object-oriented
	programming; software engineering;}
}

@ARTICLE{4455636,
  author = {Janzen, D.S. and Saiedian, H.},
  title = {Does Test-Driven Development Really Improve Software Design Quality?},
  journal = {Software, IEEE},
  year = {2008},
  volume = {25},
  pages = {77 -84},
  number = {2},
  month = {march-april },
  __markedentry = {[kimi:1]},
  abstract = {Support for test-driven development [TDD] is growing in many development
	contexts beyond its common association with extreme programming.
	By focusing on how TDD influences design characteristics, we hope
	to raise awareness of TDD as a design approach and assist others
	in decisions on whether and how to adopt TDD. Our results indicate
	that test-first programmers are more likely to write software in
	more and smaller units that are less complex and more highly tested.
	We weren't able to confirm claims that TDD improves cohesion while
	lowering coupling, but we anticipate ways to clarify the questions
	these design characteristics raised. In particular, we're working
	to eliminate the confounding factor of accessor usage in the cohesion
	metrics.},
  doi = {10.1109/MS.2008.34},
  excluded = {Kimi, title (see later)},
  excludekimi = {title},
  issn = {0740-7459},
  keywords = {cohesion metrics;confounding factor;extreme programming;software design
	quality improvement;test-driven development;program testing;software
	metrics;software process improvement;software quality;}
}

@ARTICLE{4163036,
  author = {Faegri, Tor Erlend and Hanssen, Geir Kjetil},
  title = {Collaboration, Process Control, and Fragility in Evolutionary Product
	Development},
  journal = {Software, IEEE},
  year = {2007},
  volume = {24},
  pages = {96 -104},
  number = {3},
  month = {may-june },
  abstract = {Evolutionary development is an agile software engineering approach
	that embraces continuous customer collaboration to assist the construction
	of a gradually evolving product. Its benefits and challenges are
	revealed in a longitudinal study we performed of a medium-sized company's
	transition from a traditional plan-based software process to an evolutionary
	process},
  doi = {10.1109/MS.2007.68},
  issn = {0740-7459},
  keywords = {agile software engineering approach;continuous customer collaboration;evolutionary
	product development;evolutionary software process;plan-based software
	process;software maintenance;software process improvement;}
}

@ARTICLE{5560625,
  author = {Conboy, K. and Coyle, S. and Xiaofeng Wang and Pikkarainen, M.},
  title = {People over Process: Key Challenges in Agile Development},
  journal = {Software, IEEE},
  year = {2011},
  volume = {28},
  pages = {48 -57},
  number = {4},
  month = {july-aug. },
  abstract = {Case studies of 17 organizations that have used agile methods for
	more than three years uncovered many serious "people" challenges
	including recruitment, training, motivation, and performance evaluation.},
  doi = {10.1109/MS.2010.132},
  issn = {0740-7459},
  keywords = {agile development;motivation;organisations;performance evaluation;recruitment;training;organisational
	aspects;recruitment;training;}
}

@ARTICLE{6265073,
  author = {Morris, Chris and Segal, Judith},
  title = {Lessons Learned from a Scientific Software Development Project},
  journal = {Software, IEEE},
  year = {2012},
  volume = {29},
  pages = {9 -12},
  number = {4},
  month = {july-aug. },
  abstract = {In the mid-90s, I was working for a company transitioning to agile
	software development. We hadn't considered that our biggest problem
	in this change was that developers would be talking directly to customers.
	After some small disasters, we realized that somehow we needed to
	transfer the expertise and experience of our business and marketing
	teams to developers. When I first read the current Insights article,
	I immediately recognized many patterns in the list of lessons learned
	and that what these authors have to say is much broader than amp;#x201C;scientific
	amp;#x201D; software amp;#x2014;it's about any kind of software,
	actually, any kind of development effort.},
  doi = {10.1109/MS.2012.93},
  issn = {0740-7459}
}

@ARTICLE{1196314,
  author = {Reifer, D.J.},
  title = {XP and the CMM},
  journal = {Software, IEEE},
  year = {2003},
  volume = {20},
  pages = { 14 - 15},
  number = {3},
  month = {may-june},
  abstract = { Organizations implementing XP practices can easily fit them under
	the SW-CMM because it represents a framework for self-improvement.
	However, there is a problem that organizations must address: putting
	XP to work in an SW-CMM environment is often difficult, because guidance
	on how to take advantage of existing best practices is not available
	while transitioning to XP.},
  doi = {10.1109/MS.2003.1196314},
  issn = {0740-7459},
  keywords = { Extreme Programming; SW-CMM; Web development; XP transition; software
	capability maturity model; software compatibility; software engineering;
	business data processing; software engineering; software portability;}
}

@ARTICLE{1438324,
  author = {Ceschi, M. and Sillitti, A. and Succi, G. and De Panfilis, S.},
  title = {Project management in plan-based and agile companies},
  journal = {Software, IEEE},
  year = {2005},
  volume = {22},
  pages = { 21 - 27},
  number = {3},
  month = {may-june},
  abstract = { Agile methods are a recent set of development techniques that apply
	a human-centered approach to software production. The agile approach
	aims to deliver high-quality products faster, producing satisfied
	customers. We conducted an empirical study to investigate whether
	agile methods change and improve project management practices in
	software companies. Survey results show that adopting agile methods
	appears to improve management of the development process and customer
	relationships. This article has given a first analysis of the advantages
	and disadvantages of adopting agile methods from a project management
	perspective.},
  doi = {10.1109/MS.2005.75},
  issn = {0740-7459},
  keywords = { agile methods; customer relationship management; human-centered approach;
	project management; software development; customer satisfaction;
	project management; software development management;}
}

@ARTICLE{5383344,
  author = {Faber, R},
  title = {Architects as Service Providers},
  journal = {Software, IEEE},
  year = {2011},
  volume = {PP},
  pages = {1},
  number = {99},
  month = { },
  abstract = {This paper describes our experience with providing architecture as
	a service to application developers. The approach is an effective
	way to implement the architecture process especially, but not only,
	in the context of agile development. In their role as stakeholders
	of non-functional system qualities, architects prepare and support
	the developers through participating in coding activities and play
	a key role in communicating the architecture throughout the lifetime
	of the project. Especially in an agile context, it is important to
	build up the trust which is encouraged by the idea of the architects
	offering their practical-oriented #x00026;#x201C;services #x00026;#x201D;
	to the development team. Within our agile projects we found that
	in addition to a customer representative it is important to have
	an #x00026;#x201C;architecture representative #x00026;#x201D; counterpart
	who is responsible for the system qualities to keep an adequate balance
	between the functional and non-functional requirements in the course
	of the project.},
  doi = {10.1109/MS.2010.25},
  excluded = {Kimi, title},
  issn = {0740-7459}
}

@ARTICLE{4012627,
  author = {Crispin, L.},
  title = {Driving Software Quality: How Test-Driven Development Impacts Software
	Quality},
  journal = {Software, IEEE},
  year = {2006},
  volume = {23},
  pages = {70 -71},
  number = {6},
  month = {nov.-dec. },
  __markedentry = {[kimi:1]},
  abstract = {Recently, software development teams using agile processes have started
	widely adopting test-driven development. Despite its name, "test
	driven" or "test first" development isn't really a testing technique.
	Also known as test-driven design, TDD works like this: For each small
	bit of functionality the programmers code, they first write unit
	tests. Then they write the code that makes those unit tests pass.
	This forces the programmer to think about many aspects of the feature
	before coding it. It also provides a safety net of tests that the
	programmers can run with each update to the code, ensuring that refactored,
	updated, or new code doesn't break existing functionality},
  doi = {10.1109/MS.2006.157},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0740-7459},
  keywords = {TDD techniques;software quality;test-driven design;test-driven development;program
	testing;software quality;}
}

@ARTICLE{4721191,
  author = {De Roure, D. and Goble, C.},
  title = {Software Design for Empowering Scientists},
  journal = {Software, IEEE},
  year = {2009},
  volume = {26},
  pages = {88 -95},
  number = {1},
  month = {jan.-feb. },
  __markedentry = {[kimi:1]},
  abstract = {Scientific research is increasingly digital. Some activities, such
	as data analysis, search, and simulation, can be accelerated by letting
	scientists write workflows and scripts that automate routine activities.
	These capture pieces of the scientific method that scientists can
	share. The Taverna Workbench, a widely deployed scientific-workflow-management
	system, together with the myExperiment social Web site for sharing
	scientific experiments, follow six principles of designing software
	for adoption by scientists and six principles of user engagement.},
  doi = {10.1109/MS.2009.22},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {0740-7459},
  keywords = {Taverna Workbench;scientific method;scientific research;scientific
	workflow management system;scientists;social Web site;software design;scientific
	information systems;software engineering;}
}

@ARTICLE{5452144,
  author = {McGregor, J.D. and Muthig, D. and Yoshimura, K. and Jensen, P.},
  title = {Guest Editors' Introduction: Successful Software Product Line Practices},
  journal = {Software, IEEE},
  year = {2010},
  volume = {27},
  pages = {16 -21},
  number = {3},
  month = {may-june },
  __markedentry = {[kimi:2]},
  abstract = {A software product line is a set of software-intensive systems sharing
	a common, managed set of features that satisfy the specific needs
	of a particular market segment or mission and that are developed
	from a common set of core assets in a prescribed way in place. Organizations
	adopting product development strategies that include a software product
	line have achieved impressive results, reducing product cycle time
	and increasing productivity by an order of magnitude. The software
	product line strategy is a blend of business and technical actions
	that lets an organization satisfy a wide range of customers, gain
	leverage with suppliers, meet the threats of substitute products,
	and deter other companies seeking to enter the market. The strategy
	is robust over a wide range of technologies, domains, and organizations
	of different structures, cultures, and goals. Service-oriented architectures,
	agile development methods, and open source business models have all
	played roles in successful product line organizations.},
  doi = {10.1109/MS.2010.74},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {0740-7459},
  keywords = {agile development methods;market segment;open source business models;product
	cycle time reduction;product development strategies;service-oriented
	architectures;software product line strategy;software-intensive systems;business
	data processing;product development;software architecture;software
	reusability;}
}

@ARTICLE{1270762,
  author = {Kam Hay Fung and Low, G. and Bay, P.K.},
  title = {Embracing dynamic evolution in distributed systems},
  journal = {Software, IEEE},
  year = {2004},
  volume = {21},
  pages = { 49 - 55},
  number = {2},
  month = {march-april},
  abstract = { Distributed systems aren't only more widespread than they used to
	be, but they've become more critical than ever, having moved from
	client-server systems to multitier heterogeneous systems. Many of
	these applications - such as telephone exchange systems - must be
	operational 24 hours a day, so shutting them down isn't a viable
	option for administrators who must make systemwide changes. As a
	system becomes larger and more complex, the likelihood of defects
	increases, which means a greater number of required fixes. Studies
	have found that nearly half the software development effort in complex
	distributed systems is devoted to maintenance. Furthermore, the industry
	currently favors iterative and incremental development approaches
	over the traditional waterfall approach in software engineering to
	flexibly handle requirements and reduce project risks by deploying
	smaller changes. These changes are regular and predictable. So, how
	can we build distributed systems to handle these kinds of changes?
	The answer, we argue, is dynamic evolution. From a business perspective,
	dynamic evolution permits frequent upgrades, which reduces the time
	between releases. Dynamic evolution also enhances flexibility in
	implementing changes to unforeseen and fluctuating business requirements.
	Many specialized distributed systems will benefit from factoring
	dynamic evolution into their designs. We can easily achieve dynamic
	evolution in a component-based distributed system. The abstraction
	of components and their connectors facilitates system structures
	to accommodate changes.},
  doi = {10.1109/MS.2004.1270762},
  excluded = {Kimi, title},
  issn = {0740-7459},
  keywords = { distributed systems; dynamic evolution; flexibility; incremental
	development approaches; iterative development approaches; multitier
	heterogeneous systems; upgrades; distributed processing;}
}

@ARTICLE{1196318,
  author = {Murru, O. and Deias, R. and Mugheddue, G.},
  title = {Assessing XP at a European Internet company},
  journal = {Software, IEEE},
  year = {2003},
  volume = {20},
  pages = { 37 - 43},
  number = {3},
  month = {may-june},
  abstract = { Fst, a European Internet services company, has been experimenting
	with introducing XP in its development work. The article describes
	the company's experiences with XP, explores its implementation practice
	by practice, and discusses XPs pros and cons in three key areas;
	customer relationships, project management, and ISO 9001 quality
	assurance.},
  doi = {10.1109/MS.2003.1196318},
  issn = {0740-7459},
  keywords = { Extreme Programming; Fst; Internet services company; project management;
	risk management; software development process; software quality;
	project management;}
}

@ARTICLE{1159037,
  author = {Austin, R. and Devin, L.},
  title = {Beyond requirements: software making as art},
  journal = {Software, IEEE},
  year = {2003},
  volume = {20},
  pages = { 93 - 95},
  number = {1},
  month = {jan/feb},
  abstract = { Quality is meeting requirements - or is it? The authors challenge
	this familiar metaphor for requirements and introduce a new one based
	on their experience in an industry that seems far from software development
	or is it?.},
  doi = {10.1109/MS.2003.1159037},
  excluded = {Kimi, title},
  issn = {0740-7459},
  keywords = { agile software developers; quality; requirements; software developers;
	software development; software development management;}
}

@ARTICLE{5523692,
  author = {Garcia, I. and Pacheco, C. and Calvo-Manzano, J.},
  title = {Using a web-based tool to define and implement software process improvement
	initiatives in a small industrial setting},
  journal = {Software, IET},
  year = {2010},
  volume = {4},
  pages = {237 -251},
  number = {4},
  month = {august },
  abstract = {Top-down process improvement approaches provide a high-level model
	of what the process of a software development organisation should
	be. Such models are based on the consensus of a designated working
	group on how software should be developed or maintained. They are
	very useful in that they provide general guidelines on where to start
	improving, and in which order, to people who do not know how to do
	it. However, the majority of models have only worked in scenarios
	within large companies. The authors aim to help small software development
	organisations adopt an iterative approach by providing a process
	improvement web-based tool. This study presents research into a proposal
	which states that a small organisation may use this tool to assess
	and improve their software process, identifying and implementing
	a set of agile project management practices that can be strengthened
	using the CMMI-DEV 1.2 model as reference.},
  doi = {10.1049/iet-sen.2009.0045},
  excluded = {Kimi, title},
  issn = {1751-8806},
  keywords = {agile project management practices;high-level model;process improvement
	Web-based tool;software development organisation;software process
	improvement initiatives;top-down process improvement;Internet;software
	development management;software process improvement;}
}

@ARTICLE{4460895,
  author = {Salo, O. and Abrahamsson, P.},
  title = {Agile methods in European embedded software development organisations:
	a survey on the actual use and usefulness of Extreme Programming
	and Scrum},
  journal = {Software, IET},
  year = {2008},
  volume = {2},
  pages = {58 -64},
  number = {1},
  month = {february },
  abstract = {Press releases, scientific publications and anecdotal evidence demonstrate
	that organisations worldwide are adopting agile software development
	methods at increasing speed. Little is still known about the current
	usefulness of agile methods in the complex environment of the embedded
	software development industry. Embedded devices are already commonplace
	in regular households. The goal of this survey is to provide first-hand
	knowledge of the adoption and experience of two of the most known
	agile methods, namely Extreme Programming and Scrum, in a number
	of European organisations of embedded software known to be interested
	and active in experimenting with agile software development methods.
	The survey involved 13 industrial organisations in eight European
	countries and 35 individual software development projects. The focus
	of the questionnaire was to enquire into the level of use as well
	as the experienced usefulness - or expected usefulness if there was
	no experience available - of the two agile methods and their individual
	practices. The results show that the embedded industry has been able
	to apply agile methods in its development processes. The results
	also indicate that the appreciation of the agile methods and their
	individual practices appears to increase once adopted and applied
	in practice.},
  doi = {10.1049/iet-sen:20070038},
  issn = {1751-8806},
  keywords = {European embedded software development organisations;agile methods;embedded
	software development industry;extreme programming and scrum;software
	development projects;project management;software development management;}
}

@INPROCEEDINGS{4384083,
  author = {Kleyman, M. and Tyszberowicz, S. and Yehudai, A.},
  title = {Refactoring Aspects into Java Code},
  booktitle = {Software-Science, Technology Engineering, 2007. SwSTE 2007. IEEE
	International Conference on},
  year = {2007},
  pages = {35 -47},
  month = {oct.},
  __markedentry = {[kimi:2]},
  abstract = {One of the principles of the agile development methodology is to "welcome
	changing requirements even late in development". Refactoring is a
	major technique used to cope with changes. It enables to reorganize
	code while preserving the external behavior. Several refactorings
	can be performed automatically. Aspect oriented programming (AOP)
	is a powerful technology that greatly improves programmer's ability
	to quickly introduce changes to a software system. AOP enables easily
	modifying behavior of numerous locations in the system code or adding
	new behavior. AOP is perceived by some people not to be mature enough;
	hence they avoid using it in production software. We have developed
	ACME, a prototype tool that implements a refactoring process for
	aspects. ACME enables a developer to convert AspectJ code to pure
	Java code according to conversion patterns. The available patterns
	are creating a singleton class from an aspect and merging aspects
	into existing classes. The tool creates modular and readable object-oriented
	code. This paper presents ACME functionality using example transformations
	and discusses the tool's applicability and decisions made during
	its design.},
  doi = {10.1109/SwSTE.2007.7},
  excluded = {Kimi, title},
  excludekimi = {abstract}
}

@INPROCEEDINGS{132324,
  author = {Leonhard, C.A.},
  title = {A job shop paradigm for software development and maintenance},
  booktitle = {Southeastcon '89. Proceedings. Energy and Information Technologies
	in the Southeast., IEEE},
  year = {1989},
  pages = {73 -79 vol.1},
  month = {apr},
  __markedentry = {[kimi:2]},
  abstract = {Presents a job-shop approach for the stochastic processes of software
	development and maintenance. The author introduces a flexible job-shop
	process model using a modified waterfall and a stochastic network
	cost model. The advantages of such an approach are discussed, and
	the current research direction is described},
  doi = {10.1109/SECON.1989.132324},
  excludekimi = {abstract},
  keywords = {cost model;flexible job-shop;job shop paradigm;modified waterfall;software
	development;software maintenance;stochastic network;stochastic processes;software
	engineering;}
}

@INPROCEEDINGS{1629365,
  author = {Mills, D. and Sherrell, L. and Boydstun, J. and Guoqing Wei},
  title = {Experiences using Agile Software Development for a Marketing Simulation},
  booktitle = {SoutheastCon, 2006. Proceedings of the IEEE},
  year = {2006},
  pages = {285 -290},
  month = {31 2005-april 2},
  abstract = {Agile software development methodologies present an enticing alternative
	to the heavyweight plan-driven methods that are traditionally employed.
	This paper describes how the authors used a home-ground chart (B.
	Boehm and R. Turner, 2005) to determine which approach to apply in
	the development of international market (IM), an online tool to administer
	shopping simulations for marketing studies. In addition, the paper
	gives a brief overview of extreme programming (XP), the agile methodology
	selected by the authors, and discusses the authors' adherence to
	the 13 practices of XP as outlined by Ron Jeffries (2001). This discussion
	should prove beneficial to those developers considering the adoption
	of agile practices},
  doi = {10.1109/second.2006.1629365},
  keywords = {agile software development;extreme programming;heavyweight plan-driven
	methods;home-ground chart;international market;marketing simulation;marketing;software
	engineering;}
}

@INPROCEEDINGS{1629340,
  author = {Livermore, J.A.},
  title = {What Elements of XP are being Adopted by Industry Practitioners?},
  booktitle = {SoutheastCon, 2006. Proceedings of the IEEE},
  year = {2006},
  pages = {149 -152},
  month = {31 2005-april 2},
  abstract = {This research focused on the factors that impact implementing agile
	software development methodologies. Extreme programming is the most
	commonly implemented agile methodology. Information on agile methodology
	implementation was collected via an online survey instrument distributed
	to members of software process improvement user groups. During the
	course of the research, it was discovered that very few organizations
	implement all of the XP principles. Organizations are also modifying
	the XP principles to suit their corporate cultures and development
	environments. This research measured the degree to which each of
	the XP principles has been adopted and modified by industry practitioners},
  doi = {10.1109/second.2006.1629340},
  keywords = {agile software development methodologies;extreme programming;industry
	practitioners;programming environments;software development management;}
}

@INPROCEEDINGS{5958156,
  author = {Lehman, T.J. and Sharma, A.},
  title = {Software Development as a Service: Agile Experiences},
  booktitle = {SRII Global Conference (SRII), 2011 Annual},
  year = {2011},
  pages = {749 -758},
  month = {29 2011-april 2},
  abstract = {At the IBM Almaden Research Center, we have been working with other
	divisions of IBM, offering Software Development as a Service (SDaaS).
	We work with our colleagues to understand their business and pain
	points, and then leverage that knowledge to build an application
	that at least meets, but ideally exceeds their needs. In our experience,
	applications built in the mode of Software Development as a Service
	have the following characteristics. There is a single client that
	owns the program requirements, the requirements are not fully formed,
	and, the software is at least partly, if not completely, custom.
	With many decades of software development experience in our group,
	we have used many different techniques for conducting software projects.
	In SDaaS, the style of interaction between the client team and the
	development team is a natural fit for Agile Software Development
	methods. Although our conditions do not fit the ideal Agile Software
	Development project profile, we have consistently experienced significant
	gains from taking the approach of iterative and incremental development.
	We have used the Waterfall, or plan-based, method many times for
	past projects, and we have consistently paid a significant price
	for the "Big Design Up Front" problems that go with that type of
	schedule. Although agile methods have consistently outperformed other
	methods in the early stages of a project, they do less well as the
	application program grows and the project matures. Once an application
	is in production and has an established user base, the emphasis of
	the client and development teams change from fast, easy and elegant
	feature additions to stability, release planning and maintenance.
	The imposition of a fixed schedule naturally transitions the overall
	project management into a plan-based model. However, we came to realize
	that agile methods still play an essential role, even when the overall
	project has matured to a steady state and is managed in a plan-based
	fashion. When de- - veloping a new program requirement, unless it
	is completely understood (i.e. all aspects and expected results documented),
	then it must go through an agile prototyping phase in order for it
	to be properly developed and scheduled. That agile prototyping phase
	is still bound inside a plan-based schedule, but that leaves room
	for iteration and innovation that we would not otherwise have in
	a fixed schedule. In this paper, we examine the various forces that
	influence both the client and development organizations that are
	engaged in Software Development as a Service. Using several projects
	from our past as examples, we show that the level of program technology
	and requirement understanding determines which development method
	will be more successful. Plan-based methods will work if all aspects
	of the project are known and there are minimal variables. Otherwise,
	our experience shows that an Agile Development model is likely to
	be the best choice for the beginning of a project. Once a project
	reaches steady state, with production releases, then a hybrid model
	works best, where agile methods are used to prototype new features,
	but bounded inside of a plan-based schedule.},
  doi = {10.1109/SRII.2011.82},
  keywords = {IBM Almaden research center;agile experiences;agile prototyping phase;agile
	software development methods;big design up front problems;plan based
	model;project management;software development as a service;software
	projects;project management;software development management;software
	prototyping;}
}

@INPROCEEDINGS{4123713,
  author = {Stephenson, Z. R. and McDermid, J. A. and Ward, A. G.},
  title = {Health Modelling for Agility in Safety-Critical Systems Development},
  booktitle = {System Safety, 2006. The 1st Institution of Engineering and Technology
	International Conference on},
  year = {2006},
  pages = {260 -265},
  month = {jun. },
  abstract = {In the domain of software development, agile techniques are increasingly
	being used to improve the development process. Agile software development
	relies in part on rapid feedback of working software products to
	validate user requirements. There has been some effort to introduce
	agility in security-critical systems, using an explicit representation
	of security concerns known as an iterative security architecture.
	We propose a similar explicit representation of safety concerns in
	order to introduce agility into the safety-critical development process:
	the agile health model.},
  issn = {0537-9989}
}

@INPROCEEDINGS{6149538,
  author = {Read, A. and Briggs, R.O.},
  title = {The Many Lives of an Agile Story: Design Processes, Design Products,
	and Understandings in a Large-Scale Agile Development Project},
  booktitle = {System Science (HICSS), 2012 45th Hawaii International Conference
	on},
  year = {2012},
  pages = {5319 -5328},
  month = {jan.},
  abstract = {In Agile Software Development (ASD), stakeholders use stories to stimulate
	conversations that create and convey understanding of software requirements.
	Some authors have argued that ASD methods have limited applicability
	to large-scale projects because agile stories are not sufficient
	to capture the complexities of up-front design. This paper reports
	a 2.5-year field study of how an ASD team for a complex software
	system adapted the user story concept and the Scrum approach. The
	team sought to create a convention for representing agile stories
	which could capture the complexities of the system requirements without
	burdening the team with unneeded documentation. They developed eight
	different ways to represent a story. The core representation of the
	approach was called a HyperEpic, a structured collection of closely-related
	HyperStories. HyperEpics required 90-99% fewer words than conventional
	specifications. Because of their dense form, Hyper-epics were not
	useful for other phases in the design/build processes. The team evolved
	a design/build work practice that proceeded in stages. In each stage,
	stories underwent a one or more transformations. Each transformation
	represented stories differently to create varied kinds of understandings
	among different stakeholder sets. The team was able to gain the benefits
	of ASD - faster development cycles, less documentation, rapid adaptation
	to insights and conditions.},
  doi = {10.1109/HICSS.2012.684},
  issn = {1530-1605},
  keywords = {ASD method;ASD team;HyperEpics;Scrum approach;agile software development;closely-related
	HyperStories;complex software system;design process;design product;design-build
	process;design-build work practice;development cycle;large scale
	agile development project;rapid adaptation;software requirement;system
	requirement complexity;unneeded documentation;upfront design complexity;user
	story concept;computational complexity;formal specification;formal
	verification;software architecture;software prototyping;}
}

@INPROCEEDINGS{6149063,
  author = {Dolk, D. and Anderson, T. and Busalacchi, F. and Tinsley, D.},
  title = {GINA: System Interoperability for Enabling Smart Mobile System Services
	in Network Decision Support Systems},
  booktitle = {System Science (HICSS), 2012 45th Hawaii International Conference
	on},
  year = {2012},
  pages = {1472 -1481},
  month = {jan.},
  __markedentry = {[kimi:2]},
  abstract = {Smart mobile systems deployed in support of organizational decision-making
	objectives lead to a new, highly dynamic form of decision support
	systems (DSS) called network-DSS (NWDSS). We describe the salient
	properties of an NWDSS, emphasizing the central role of sensors and
	emergent knowledge processes (EKP) in such an environment. From a
	system design and development perspective, the defining property
	of sensor-driven EKP is that requirements cannot be identified in
	advance but rather emerge from the environment. This, in turn, demands
	an agile system development methodology which we argue must be built
	upon a flexible semantic system interoperability approach. We present
	the GINA (Global Information Network Architecture), a reflexive,
	executable, component-based, platform agnostic, model-driven architecture,
	which provides the necessary data, information and knowledge interoperability
	to enable services for smart mobile systems. We show how this approach
	works in a specific smart mobile system environment called Dragon
	Pulse.},
  doi = {10.1109/HICSS.2012.293},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {1530-1605},
  keywords = {Dragon Pulse;GINA;NWDSS;agile system development methodology;component-based
	architecture;defining property;development perspective;emergent knowledge
	processes;executable architecture;flexible semantic system interoperability
	approach;global information network architecture;knowledge interoperability;model-driven
	architecture;network decision support systems;network-DSS;organizational
	decision-making objectives;platform agnostic architecture;reflexive
	architecture;salient property;sensor-driven EKP;smart mobile system
	environment;smart mobile system services;smart mobile systems;system
	design;decision making;decision support systems;mobile computing;object-oriented
	programming;open systems;organisational aspects;software architecture;}
}

@INPROCEEDINGS{6149555,
  author = {Overhage, S. and Schlauderer, S.},
  title = {Investigating the Long-Term Acceptance of Agile Methodologies: An
	Empirical Study of Developer Perceptions in Scrum Projects},
  booktitle = {System Science (HICSS), 2012 45th Hawaii International Conference
	on},
  year = {2012},
  pages = {5452 -5461},
  month = {jan.},
  abstract = {Agile development methodologies have gained great interest in research
	and practice. As their introduction considerably changes traditional
	working habits of developers, the long-term acceptance of agile methodologies
	becomes a critical success factor. Yet, current studies primarily
	examine the early adoption stage of agile methodologies. To investigate
	the long-term acceptance, we conducted a study at a leading insurance
	company that introduced Scrum in 2007. Using a qualitative research
	design and the Diffusion of Innovations Theory as a lens for analysis,
	we gained in-depth insights into factors influencing the acceptance
	of Scrum. Particularly, developers felt Scrum to be more compatible
	to their actual working practices. Moreover, they perceived the use
	of Scrum to deliver numerous relative advantages. However, we also
	identified possible barriers to acceptance since developers felt
	both the complexity of Scrum and the required discipline to be higher
	in comparison with traditional development methodologies.},
  doi = {10.1109/HICSS.2012.387},
  issn = {1530-1605},
  keywords = {Scrum project;agile development methodology;diffusion of innovation
	theory;insurance company;long term acceptance;qualitative research
	design;innovation management;insurance;software prototyping;}
}

@INPROCEEDINGS{6149493,
  author = {Waguespack, L.J. and Schiano, W.T.},
  title = {SCRUM Project Architecture and Thriving Systems Theory},
  booktitle = {System Science (HICSS), 2012 45th Hawaii International Conference
	on},
  year = {2012},
  pages = {4943 -4951},
  month = {jan.},
  abstract = {Agile project management continues to gain a widening and enthusiastic
	following. Agile methods can achieve a high level of satisfaction
	among all project stakeholders (users, customers, business managers,
	developers, and project managers) in terms of productivity, product
	quality, cost containment, time-to-market, and overall morale. Success
	with agile requires focus on requirements and design as a continuous
	discovery process, posing challenges for practitioners of more traditional
	project management both in terms of method adoption and sustained
	commitment. Thriving Systems Theory clarifies the appeal of agile
	project structure and processes, helps project teams determine and
	achieve the optimal portfolio of quality characteristics, and better
	articulate their value to all stakeholders. Thriving Systems Theory
	is an emerging framework of systems design quality that translates
	the research of design pattern patriarch Christopher Alexander on
	physical architecture design quality into the domain of systems engineering.
	The satisfaction achieved through agile methods is explained by Thriving
	Systems Theory's fifteen choice properties of systems design quality.
	We demonstrate by identifying the manifestation of the choice properties
	in SCRUM, an exemplar of agile software project management.},
  doi = {10.1109/HICSS.2012.513},
  issn = {1530-1605},
  keywords = {SCRUM project architecture;agile project management;agile project
	process;agile project structure;optimal portfolio;project stakeholders;thriving
	systems theory;software architecture;software prototyping;}
}

@INPROCEEDINGS{6149533,
  author = {Aitken, Ashley M.},
  title = {Introduction to Agile Software Engineering Minitrack},
  booktitle = {System Science (HICSS), 2012 45th Hawaii International Conference
	on},
  year = {2012},
  pages = {5278},
  month = {jan.},
  __markedentry = {[kimi:1]},
  abstract = {This minitrack seeks to explore the middle ground between traditional
	software engineering (TSE) and the new agile software development
	(ASD), or what we call agile software engineering (ASE). The minitrack
	includes six contemporary and high quality research papers.},
  doi = {10.1109/HICSS.2012.340},
  excludekimi = {title},
  issn = {1530-1605}
}

@INPROCEEDINGS{6149491,
  title = {[Cover art]},
  booktitle = {System Science (HICSS), 2012 45th Hawaii International Conference
	on},
  year = {2012},
  pages = {C1},
  month = {jan.},
  __markedentry = {[kimi:1]},
  abstract = {The following topics are dealt with: collaboration systems; teaching;
	learning technologies; cognitive perspectives; collaborative modeling;
	cross-organizational collaboration; cross-border IS/IT collaboration;
	distributed group decision-making; global virtual teams; human-computer
	interaction; negotiation support systems; object oriented GUI; social
	media; e-business transformation; social networks; healthcare; managerial
	decision support; fuzzy logic; soft computing; intelligent decision
	support; supply chain management; digital libraries; information
	access; social informatics; electric energy systems; information
	security; trust; electronic government; e-policy; e-governance; infrastructure
	security; HCI; consumer health informatics issues; data mining; biomedical
	informatics; digital economy; electronic marketing; social networking;
	Web mining; knowledge management; business process management; end
	user computing; radio frequency identification; agile software engineering;
	digital forensics; secure cloud computing; software product lines;
	software testing and wireless networks.},
  doi = {10.1109/HICSS.2012.701},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1530-1605},
  keywords = {HCI;Web mining;agile software engineering;biomedical informatics;business
	process management;collaboration systems;collaborative modeling;consumer
	health informatics issues;cross-border IS/IT collaboration;data mining;digital
	forensics;digital libraries;distributed group decision-making;e-business
	transformation;e-governance;electric energy systems;electronic government;electronic
	marketing;fuzzy logic;global virtual teams;healthcare;human-computer
	interaction;information security;infrastructure security;knowledge
	management;learning technologies;managerial decision support;negotiation
	support systems;object oriented GUI;radio frequency identification;secure
	cloud computing;social media;social networking;social networks;soft
	computing;software product lines;supply chain management;teaching;wireless
	networks;bioinformatics;cloud computing;data mining;digital libraries;fuzzy
	logic;government data processing;graphical user interfaces;group
	decision support systems;groupware;health care;human computer interaction;knowledge
	management;learning (artificial intelligence);negotiation support
	systems;object-oriented methods;radiofrequency identification;security
	of data;social networking (online);software prototyping;supply chain
	management;teaching;}
}

@INPROCEEDINGS{6149553,
  author = {Sutherland, Jeff},
  title = {Introduction to Agile Software Development: Lean, Distributed, and
	Scalable Minitrack},
  booktitle = {System Science (HICSS), 2012 45th Hawaii International Conference
	on},
  year = {2012},
  pages = {5441},
  month = {jan.},
  __markedentry = {[kimi:1]},
  doi = {10.1109/HICSS.2012.677},
  excludekimi = {title},
  issn = {1530-1605}
}

@INPROCEEDINGS{5428537,
  author = {Sutherland, J. and Altman, I.},
  title = {Organizational Transformation with Scrum: How a Venture Capital Group
	Gets Twice as Much Done with Half the Work},
  booktitle = {System Sciences (HICSS), 2010 43rd Hawaii International Conference
	on},
  year = {2010},
  pages = {1 -9},
  month = {jan.},
  abstract = {OpenView Venture Partners is a venture capital fund that uses Scrum
	as best practice in software development and for project management
	in all other parts of the organization. OpenView is the first high-performance
	non-software Scrums that has documented twice as much value produced
	in fewer working hours. The model at OpenView provides a working
	manual on how to do Scrum outside of software development. Their
	aggressive removal of impediments (take no prisoners!) distinguishes
	them from Scrum implementations that are captive of their institutionalized
	waste. The founder of OpenView saw that maximum productivity in Scrum
	occurs at a sustainable pace with less hours of work per week than
	without Scrum. He set the goal of reducing hours of work while doubling
	production and the Scrum teams exceeded his expectations. Focus on
	removal of impediments led to reorganization of the teams several
	times a year and showed how to capitalize on Scrum as a powerful
	organizational transformation tool.},
  doi = {10.1109/HICSS.2010.299},
  issn = {1530-1605},
  keywords = {OpenView Venture Partners;organizational transformation;project management;scrum;software
	development;venture capital group;organisational aspects;software
	development management;venture capital;}
}

@INPROCEEDINGS{5428534,
  author = {Hanssen, G.K. and Yamashita, A.F. and Conradi, R. and Moonen, L.},
  title = {Software Entropy in Agile Product Evolution},
  booktitle = {System Sciences (HICSS), 2010 43rd Hawaii International Conference
	on},
  year = {2010},
  pages = {1 -10},
  month = {jan.},
  abstract = {As agile software development principles and methods are being adopted
	by large software product organizations it is important to understand
	the role of software entropy. That is, how the maintainability of
	a system may degrade over time due to continuous change. This may
	on one side affect the ability to act agile in planning and development.
	On the other side, an agile process may affect growth of entropy.
	We report from a case study of a successful software product line
	organization that has adopted the agile development method Evo, showing
	how agility and entropy are negatively related. We conclude this
	study by suggesting a two-step approach to manage entropy while maintaining
	process agility. First, the system needs to be restructured to establish
	a level of manageable entropy, and then, that the agile process must
	be complemented with continuous semi-automated quality monitoring
	and refactoring support.},
  doi = {10.1109/HICSS.2010.344},
  issn = {1530-1605},
  keywords = {Evo;agile development method;agile product evolution;agile software
	development;continuous refactoring support;continuous semiautomated
	quality monitoring;large software product organizations;software
	entropy;software product line organization;system maintainability;DP
	industry;entropy;software development management;software maintenance;software
	prototyping;software quality;}
}

@INPROCEEDINGS{5428541,
  author = {Greening, D.R.},
  title = {Enterprise Scrum: Scaling Scrum to the Executive Level},
  booktitle = {System Sciences (HICSS), 2010 43rd Hawaii International Conference
	on},
  year = {2010},
  pages = {1 -10},
  month = {jan.},
  abstract = {Our company manages 25 software engineering teams across 6 products
	using a single top-down Enterprise Scrum. We know of no other company
	doing this, yet it provides extreme visibility and control at the
	CXO level. It promotes agile thinking enterprise-wide, driving non-engineering
	departments to adopt Scrum. We believe it is making us more profitable.We
	estimate effort in team months, run quarterly Sprints, assign whole
	teams to projects, meet in weekly stand-ups. We start, postpone or
	cancel whole projects. Within individual projects, we still use 1-4
	week Sprints and all the trappings of the classic Scrum process,
	including, in some cases, Scrum-of-Scrums. New challenges arise:
	Shared resource constraints suggest Kanban methods. Net Present Value
	can justify prioritization, but creates controversy. Moving teams
	between projects requires rapid programming environment setup. The
	process forces executives to justify decisions. We want simple improvement
	metrics, but they seem elusive.},
  doi = {10.1109/HICSS.2010.186},
  issn = {1530-1605},
  keywords = {Kanban methods;classic Scrum process;enterprise scrum;executive level;single
	top down enterprise scrum;software engineering teams;software development
	management;}
}

@INPROCEEDINGS{5718463,
  author = {Nevo, S. and Chengalur-Smith, I.},
  title = {Enhancing the Performance of Software Development Virtual Teams through
	the Use of Agile Methods: A Pilot Study},
  booktitle = {System Sciences (HICSS), 2011 44th Hawaii International Conference
	on},
  year = {2011},
  pages = {1 -10},
  month = {jan.},
  abstract = {This paper develops a conceptual model that explicates the role of
	synchronous communication media in enabling - directly and indirectly,
	via social presence - virtual software development teams to adopt
	and apply Agile methods. In turn, Agile methods, as well as perceived
	social presence, are theorized to have a positive impact on communication
	convergence and transactive memory. Ultimately, these outcomes are
	formulated as direct antecedents of virtual team performance. A pilot
	study of 40 Free/Libre Open Source Software (FLOSS) teams provides
	preliminary supporting evidence for the conceptual model.},
  doi = {10.1109/HICSS.2011.186},
  issn = {1530-1605},
  keywords = {agile methods;communication convergence;direct antecedents;free-libre
	open source software;perceived social presence;synchronous communication
	media;transactive memory;virtual software development teams;groupware;public
	domain software;software prototyping;virtual reality;}
}

@INPROCEEDINGS{5718995,
  author = {Friis, D. and Ostergaard, J. and Sutherland, J.},
  title = {Virtual Reality Meets Scrum: How a Senior Team Moved from Management
	to Leadership},
  booktitle = {System Sciences (HICSS), 2011 44th Hawaii International Conference
	on},
  year = {2011},
  pages = {1 -7},
  month = {jan.},
  abstract = {The role of managers in a Scrum organization is a topic of high interest
	with almost no research. Changes in management roles and behaviors
	were evaluated in a rapidly growing, social entertainment and gaming
	company in Finland. Sulake introduced Scrum in 2006 and within 6
	months institutionalized Scrum across the organization. The company
	was surveyed in 2009 and responses from 19 managers and 36 non-managers
	were carefully studied. The biggest challenges of Scrum for managers
	were keeping up with the team and learning to "let go" and stop micro-managing
	the teams. Managers report Scrum increases productivity (73%), increases
	quality (58%), and makes it easier to change direction (84%). The
	role of the manager changes from telling people what to do into communicating
	goals and visions (a key insight of Takeuchi and Nonaka). Increased
	responsibility of the team affects hiring practices of managers in
	a Scrum company.},
  doi = {10.1109/HICSS.2011.483},
  issn = {1530-1605},
  keywords = {Scrum organization;senior team leadership;senior team management;virtual
	reality;organisational aspects;software development management;software
	prototyping;virtual reality;}
}

@INPROCEEDINGS{5718964,
  author = {Overhage, S. and Schlauderer, S. and Birkmeier, D. and Miller, J.},
  title = {What Makes IT Personnel Adopt Scrum? A Framework of Drivers and Inhibitors
	to Developer Acceptance},
  booktitle = {System Sciences (HICSS), 2011 44th Hawaii International Conference
	on},
  year = {2011},
  pages = {1 -10},
  month = {jan.},
  abstract = {In recent years, the agile Scrum methodology has become a popular
	software development approach. It significantly differs from traditional
	approaches as it promotes communication, self-organization, flexibility,
	and innovation instead of extensive planning and codified processes.
	While such a paradigm shift promises to better support the timely
	delivery of high-quality software in turbulent business environments,
	its success considerably depends on the willingness of developers
	to adopt the agile methodology. In this paper, we present a framework
	with drivers and inhibitors to the developer acceptance of Scrum.
	It combines analytical with empirical findings and can be used as
	a theoretical basis to empirically evaluate the actual support of
	Scrum in concrete scenarios. The introduced framework is based on
	the extended Technology Acceptance Model (TAM), which has been proven
	to be also applicable to describe the intention of developers to
	use a methodology. Building upon results from qualitative in-depth
	interviews with six experienced Scrum experts of a German DAX-30
	company, we refine the general determinants of adoption contained
	in the TAM with several observed factors that influence the willingness
	of developers to use Scrum in practice.},
  doi = {10.1109/HICSS.2011.493},
  issn = {1530-1605},
  keywords = {German DAX-30 company;IT personnel;agile scrum methodology;business
	environments;developer acceptance;software development approach;technology
	acceptance model;software prototyping;software quality;}
}

@INPROCEEDINGS{5718993,
  author = {Rautiainen, K. and von Schantz, J. and Vä andhä andniitty, J.},
  title = {Supporting Scaling Agile with Portfolio Management: Case Paf.com},
  booktitle = {System Sciences (HICSS), 2011 44th Hawaii International Conference
	on},
  year = {2011},
  pages = {1 -10},
  month = {jan.},
  abstract = {This paper is a descriptive case study of how one department at Paf,
	Paf.com, introduced portfolio management to help support scaling
	agile software development. Paf.com had experienced problems with
	long time-to-market due to thrashing, which was caused by frequently
	changing priorities due to an ad-hoc prioritization process and handovers.
	Also, there was lack of visibility into projects entering and progressing
	in the development pipeline. No structured way of starting projects
	was enforced company-wide, and too many parallel projects got started.
	As a result of introducing a structured portfolio management process,
	the number of ongoing projects has dramatically reduced, from over
	200 to 30, reducing thrashing. Listing all projects in priority order
	in the Paf.com backlog provides visibility into what is currently
	ongoing, helping coordinate the work of multiple Scrum teams. The
	portfolio follow-up function provides progress data on the projects,
	helping managers make more informed decisions, considering the whole
	portfolio.},
  doi = {10.1109/HICSS.2011.390},
  issn = {1530-1605},
  keywords = {Paf.com backlog;ad hoc prioritization process;agile software development;multiple
	scrum team;portfolio management;scaling support;time to market problem;DP
	industry;business data processing;project management;software development
	management;software prototyping;}
}

@INPROCEEDINGS{5718989,
  author = {Kowark, T. and Mü andller, J. and Mü andller, S. and Zeier, A.},
  title = {An Educational Testbed for the Computational Analysis of Collaboration
	in Early Stages of Software Development Processes},
  booktitle = {System Sciences (HICSS), 2011 44th Hawaii International Conference
	on},
  year = {2011},
  pages = {1 -10},
  month = {jan.},
  __markedentry = {[kimi:2]},
  abstract = {Agile software development processes are widely adopted in software
	engineering projects. Their low organizational overhead and iterative
	nature make them ideal choices for small development teams. The application
	of those methods in software projects that require collaboration
	between multiple sub-teams is a challenging task that remains subject
	to intensive research. Especially the initial phases of such projects
	are crucial for project success since a problem-free inception period
	generates a basis for efficient development later in the process.
	We introduce a testbed that allows analyzing collaboration processes
	during those early stages of software development within a low-risk,
	educational setup. Participants of a software engineering lecture
	form development teams of considerable size and develop real-life
	applications in a realistic, yet controlled, environment. By combining
	manual observations with the computational analysis of digital collaboration
	artifacts we are able to gain insights into distinctive patterns
	of collaboration activity and reason about their triggers within
	the process setup.},
  doi = {10.1109/HICSS.2011.50},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {1530-1605},
  keywords = {agile software development process;collaboration process;computational
	analysis;digital collaboration artifacts;educational setup;educational
	testbed;iterative nature;multiple sub team;organizational overhead;problem
	free inception period;real life application;software engineering
	project;groupware;organisational aspects;software development management;software
	prototyping;}
}

@INPROCEEDINGS{5718991,
  author = {Sutherland, J. and Frohman, R.},
  title = {Hitting the Wall: What to Do When High Performing Scrum Teams Overwhelm
	Operations and Infrastructure},
  booktitle = {System Sciences (HICSS), 2011 44th Hawaii International Conference
	on},
  year = {2011},
  pages = {1 -6},
  month = {jan.},
  abstract = {All-at-once Scrum implementations require total commitment to change,
	high level management support and aggressive removal of impediments.
	Several company-wide implementations are known to the authors but
	none of them had to deal with the complexity of a large, mission-critical,
	enterprise software product. Pegasystems develops software to manage,
	automate and optimize a broad array of business processes. In July
	of 2009 the company deployed over 20 Scrum teams in the U.S. and
	India within two months. Complexity of languages, frameworks, and
	tools led to an architecture where continuous integration support
	for software development teams was impossible without a major upgrade
	in infrastructure and operations. A virtual Scrum team was formed
	to avoid "hitting the wall" before this impediment impacted the first
	Scrum release of the software. Here we describe how a Scrum team
	engineered a continuous integration environment for hundreds of software
	developers on two continents within a few weeks.},
  doi = {10.1109/HICSS.2011.222},
  issn = {1530-1605},
  keywords = {Pegasystems;Scrum implementation;aggressive impediment removal;business
	process;high level management support;mission-critical enterprise
	software product;software development team;virtual Scrum team;business
	data processing;software development management;software prototyping;}
}

@INPROCEEDINGS{495321,
  author = {Andersson, T. and Eriksson, I.V.},
  title = {Measuring the quality needs of an organization's software},
  booktitle = {System Sciences, 1996., Proceedings of the Twenty-Ninth Hawaii International
	Conference on ,},
  year = {1996},
  volume = {4},
  pages = {139 -154 vol.4},
  month = {jan},
  __markedentry = {[kimi:2]},
  abstract = {Investments in information systems and the annual costs of running
	the systems are considerable. The utility of information systems
	thus becomes the ultimate quality requirement from the organization's
	point of view. Quality models are used to support the management
	of quality. Such models describe the characteristics of products
	and services and of processes. The measurement of quality is a means
	of controlling quality. The problem that organizations face when
	they become interested in improving and controlling the quality of
	their information systems is twofold: there are many quality models
	and measurement is considered difficult. We address this issue by
	linking a basic quality model with existing software metrics. We
	use a quality model, the SOLE model, which covers the interests of
	all the stake-holders in an organization. We show how to adapt the
	model to the specific needs of an organization, how to identify their
	special quality factors and break these down to the metrics level.
	The general input-process-output (IPO) method from system theory
	is applied in the construction process. We propose a do-it-yourself
	approach which offers organizations the flexibility to construct
	quality models to meet their own needs. The construction process
	is the emphasis of this paper, rather than a complete quality model.
	A fictive case study is used to illustrate the construction process.
	We have chosen project management as the problem area of our ldquo;case
	rdquo; organization and adopt the waterfall model for the systems
	development process},
  doi = {10.1109/HICSS.1996.495321},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {SOLE model;information system utility;information systems investment;input-process-output
	method;maintainability;organizational software;processes;products;project
	management;quality control;quality management;quality needs measurement;services;software
	metrics;stake-holders;system theory;systems development process;waterfall
	model;information systems;investment;project management;software
	development management;software maintenance;software metrics;software
	quality;systems analysis;}
}

@INPROCEEDINGS{1174329,
  author = {Giinter, M. and Gisler, M. and von Bredow, B.},
  title = {New software development paradigms and possible adoption for security},
  booktitle = {System Sciences, 2003. Proceedings of the 36th Annual Hawaii International
	Conference on},
  year = {2003},
  pages = { 10 pp.},
  month = {jan.},
  __markedentry = {[kimi:2]},
  abstract = { E-government would be a lot easier if it could be handled like e-business.
	Unfortunately there are organizational and legal obstacles that make
	it virtually impossible. The security level needed for public administrations
	is usually at the level of top private sector industries and service
	organizations like banks. In project management there has been a
	paradigm shift towards new methodologies for the development of software.
	This article studies some possibilities along the same lines with
	regard to security. We will use extreme programming (XP) as an example
	of the new software development paradigms.},
  doi = {10.1109/HICSS.2003.1174329},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = { e-government; electronic government; extreme programming; legal obstacles;
	organizational obstacles; project management; public administrations;
	security level; software development; government data processing;
	public administration; risk analysis; security of data; software
	development management;}
}

@INPROCEEDINGS{1174397,
  author = {Smolander, K.},
  title = {The birth of an e-business system conflicts, compromises, and gaps
	in methods},
  booktitle = {System Sciences, 2003. Proceedings of the 36th Annual Hawaii International
	Conference on},
  year = {2003},
  pages = { 10 pp.},
  month = {jan.},
  __markedentry = {[kimi:2]},
  abstract = { This paper describes the system architecture development process
	in an international ICT company, which is building a comprehensive
	e-business system for its customers. The implementation includes
	the integration of data and legacy systems from independent business
	units and the construction of a uniform Web-based customer interface.
	The research focuses on the creation of e-business system architecture
	and observes that the architecture is not completely designed through
	rational decisions and trade-offs. Instead, it emerges through somewhat
	non-deliberate actions obliged by the situation and its constraints,
	conflicts, compromises, and political decisions. The interview-based
	qualitative data is analyzed using grounded theory and a general
	explanation model for the creation of e-business system architecture
	is introduced. The role of technical system architecture in e-business
	systems development is clarified and e-business specific requirements
	for development methods are listed and compared to the support provided
	by UML and RUP.},
  doi = {10.1109/HICSS.2003.1174397},
  excludekimi = {abstract},
  keywords = { RUP; UML; Web-based customer interface; e-business system architecture
	development process; international ICT company; DP industry; Internet;
	electronic commerce; marketing data processing; software architecture;
	user interfaces;}
}

@INPROCEEDINGS{1265419,
  author = {Alaa, G. and Fitzgerald, G.},
  title = {A proposal of an upfront requirements modeling design practice for
	e-commerce projects},
  booktitle = {System Sciences, 2004. Proceedings of the 37th Annual Hawaii International
	Conference on},
  year = {2004},
  pages = { 10 pp.},
  month = {jan.},
  __markedentry = {[kimi:2]},
  abstract = { This paper examines the nature of e-commerce systems development
	and finds that e-commerce is different requiring a high degree of
	business innovation and responsiveness. A study undertaken on a B-B
	e-marketplace in Egypt illustrates the problems with the use of traditional
	analysis and design techniques. They reduce imagination and the ability
	to respond to change, as they are systematic, comprehensive and plan-driven.
	The study focuses attention on the importance of modeling value-added
	services beside businesses processes for e-commerce applications,
	as well as the need for self-organizing, non-prescriptive activities,
	which we call the 'practice', that enhances creative thinking and
	self-reflection on the problem situation. As a response to these
	findings an 'upfront requirements modeling and design practice' is
	identified, outlined, and experimented with. It is based on brainstorming
	sessions guided by the use of a 'non-prescriptive' requirements modeling
	tool that provides a classification of the possible different e-commerce
	issues. The introduced tool (the e-business issues roadmap) helps
	to trigger issues and design ideas. The results found a number of
	business innovative ideas that were unlikely to have been generated
	by traditional analysis models.},
  doi = {10.1109/HICSS.2004.1265419},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = { e-business issues roadmap; e-commerce systems development; upfront
	requirements design; upfront requirements modeling; electronic commerce;
	software engineering; systems analysis;}
}

@INPROCEEDINGS{1579597,
  author = { Keith, M. and Goul, M. and Demirkan, H. and Nichols, J. and Mitchell,
	M.C.},
  title = {Contextualizing Knowledge Management Readiness to Support Change
	Management Strategies},
  booktitle = {System Sciences, 2006. HICSS '06. Proceedings of the 39th Annual
	Hawaii International Conference on},
  year = {2006},
  volume = {7},
  pages = { 152a},
  month = {jan.},
  __markedentry = {[kimi:1]},
  abstract = { Research on knowledge management (KM) readiness has matured. However,
	recent organizational structures have emerged which prevent traditional
	instruments from adequately measuring KM readiness in an organization.
	For example, service-oriented enterprise (SOE) structure and agile
	software development techniques are characterized by multiple groups
	working together with each performing "services" as part of project
	pattern or process. Each group acts in its own role as a sub-organization
	with its unique helping patterns and cultures [17]. Traditional instruments
	which measure aggregate constructs across the entire organization
	will miss important between-group differences in an SOE that might
	influence KM readiness. This paper presents a case-based field-study
	from a large Fortune 500 financial firm transitioning its structure
	to SOE and considering agile software development methodologies.
	Survey data was collected along with a series of interviews with
	key managers and developers. Findings indicate statistically significant
	differences in KM readiness between groups and the need for alignment.},
  doi = {10.1109/HICSS.2006.97},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1530-1605}
}

@INPROCEEDINGS{1579312,
  author = { Patel, C. and Lycett, M. and Macredie, R. and de Cesare, S.},
  title = {Perceptions of Agility and Collaboration in Software Development
	Practice},
  booktitle = {System Sciences, 2006. HICSS '06. Proceedings of the 39th Annual
	Hawaii International Conference on},
  year = {2006},
  volume = {1},
  pages = { 10c},
  month = {jan.},
  abstract = { Agility is a facet of software development attracting increasing
	interest. The purpose of this paper is to investigate the value of
	agility in practice. Data collected from senior development/project
	managers in 62 organizations is used to investigate perceptions related
	to agile development. Specifically, the perceptions tested relate
	to (a) belief in agile values and principles, and (b) value of agile
	principles within current development and organizational practice.
	These perceptions are then examined in the context of current practice
	in order to test perceptions against behavior and understand the
	valued aspects of agile practice that are implicit in software development
	today. The findings suggest that agile values and principles related
	to communication and collaboration, and team involvement are perceived
	as important and are being practiced widely. On the other hand, principles
	related to reflection and frequent delivery of software are rated
	high to medium in importance but its full adoption in practice is
	limited. The principle relating to managing changing requirements
	is perceived as significant but agile practices relating to this
	principle are not being implemented in practice.},
  doi = {10.1109/HICSS.2006.378},
  excluded = {Kimi, title},
  issn = {1530-1605}
}

@INPROCEEDINGS{4076939,
  author = {Brent Barton and Evan Campbell},
  title = {Implementing a Professional Services Organization Using Type C Scrum},
  booktitle = {System Sciences, 2007. HICSS 2007. 40th Annual Hawaii International
	Conference on},
  year = {2007},
  pages = {275a},
  month = {jan. },
  abstract = {SolutionsIQ's professional services division dramatically improved
	project quality and team productivity through the adoption of Scrum
	and agile values, principles, and practices. The organization's original
	structure was typical of a consulting organization; functional silos
	(developers, testers, project managers) matrixed into project assignments.
	This model was misaligned with the team-based principals inherent
	in Scrum and agile. This misaligned organizational structure created
	inefficiencies and obstacles (waste) in team and departmental function.
	In an effort to improve this misalignment, the authors designed and
	implemented an innovative organizational model based on type C Scrum.
	This paper assumes the reader is generally familiar with agile and
	Scrum basics, and provides a cursory definition of type C; an advanced
	organization-wide extension of the simple Scrum project management
	wrapper. The paper provides a fairly detailed description of a specific
	instantiation of Scrum and agile organizational design in a 400 person
	services business},
  doi = {10.1109/HICSS.2007.265},
  issn = {1530-1605},
  keywords = {professional service organization;project management;team productivity;type
	C Scrum;consultancies;project management;software development management;software
	houses;}
}

@INPROCEEDINGS{4076938,
  author = {Smits, H.},
  title = {The Impact of Scaling on Planning Activities in an Agile Software
	Development Center},
  booktitle = {System Sciences, 2007. HICSS 2007. 40th Annual Hawaii International
	Conference on},
  year = {2007},
  pages = {274c},
  month = {jan. },
  abstract = {This paper evaluates agile practices when applied in multi-team and
	multi-person-year projects. It does so through inspection of the
	requirements brought on by scaling projects, and applying basic agile
	principles to those requirements. In the introduction section the
	main agile principles are introduced, as well as the Lean principles
	upon which the agile methods are built. One of those Lean principles,
	Muri or overburdening of people, are addressed through the extension
	of the agile planning process. The extension of the most used agile
	planning technique (iteration planning) is described in detail, both
	the motivation for the extension as well as the collaboration practices
	behind each planning level. In the final chapter the impact of product
	complexities on the planning process is evaluated, and a solution
	to create a smooth flow in the planning/delivery cycle is presented},
  doi = {10.1109/HICSS.2007.536},
  issn = {1530-1605},
  keywords = {Lean principle;agile planning technique;agile software development
	context;project management;software development management;}
}

@INPROCEEDINGS{4076937,
  author = {Jari Vanhanen and Harri Korpi},
  title = {Experiences of Using Pair Programming in an Agile Project},
  booktitle = {System Sciences, 2007. HICSS 2007. 40th Annual Hawaii International
	Conference on},
  year = {2007},
  pages = {274b},
  month = {jan. },
  __markedentry = {[kimi:2]},
  abstract = {The interest in pair programming (PP) has increased recently, e.g.
	by the popularization of agile software development. However, many
	practicalities of PP are poorly understood. We present experiences
	of using PP extensively in an industrial project. The fact that the
	team had a limited number of high-end workstations forced it in a
	positive way to quick deployment and rigorous use of PP. The developers
	liked PP and learned it easily. Initially, the pairs were not rotated
	frequently but adopting daily, random rotation improved the situation.
	Frequent rotation seemed to improve knowledge transfer. The driver/navigator
	roles were switched seldom, but still the partners communicated actively.
	The navigator rarely spotted defects during coding, but the released
	code contained almost no defects. Test-driven development and design
	in pairs possibly decreased defects. The developers considered that
	PP improved quality and knowledge transfer, and was better suited
	for complex tasks than for easy tasks},
  doi = {10.1109/HICSS.2007.218},
  excluded = {Verify (Kimi)},
  excludekimi = {abstract},
  issn = {1530-1605},
  keywords = {agile project;pair programming;software development;test-driven development;program
	testing;programming;project management;software development management;}
}

@INPROCEEDINGS{5335658,
  author = {Rowen, C. and Nuth, P. and Fiske, S.},
  title = {A DSP architecture optimized for wireless baseband},
  booktitle = {System-on-Chip, 2009. SOC 2009. International Symposium on},
  year = {2009},
  pages = {151 -156},
  month = {oct.},
  __markedentry = {[kimi:1]},
  abstract = {The high computation demands of next generation cellular and broadcast
	wireless require both higher efficiency and greater flexibility in
	baseband processing. This paper introduces a new DSP architecture
	optimized for baseband applications, especially applications with
	heavy workload of complex filtering, FFT and MIMO matrix operations
	such as LTE. The Tensilica ConnX Baseband Engine processor core implements
	a 3-issue VLIW, 8-way SIMD architecture. It can perform 16 multiply-add
	operations per cycle, and executes a full radix-4 FFT butterfly or
	4 complex FIR filter taps per cycle. It directly implements vector
	division and reciprocal square root operations. At 400 MHz, it provides
	almost 13 GB per second of memory bandwidth. The rich programming
	environment, including vectorization of scalar C applications, allows
	easy deployment into cellular base-station, femto-cell and other
	software-agile radio applications, and into multi-standard broadcast
	receivers.},
  doi = {10.1109/SOCC.2009.5335658},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {DSP architecture;FIR filter;Tensilica ConnX Baseband Engine processor;fast
	Fourier transforms;frequency 400 MHz;next generation cellular network;radix-4
	FFT butterfly;wireless baseband processing;FIR filters;cellular radio;digital
	arithmetic;digital signal processing chips;fast Fourier transforms;}
}

@INPROCEEDINGS{6189431,
  author = {Cagle, R.},
  title = {Enterprise Architecture facilitates adopting Agile development methodologies
	into a DoD acquisition},
  booktitle = {Systems Conference (SysCon), 2012 IEEE International},
  year = {2012},
  pages = {1 -5},
  month = {march},
  abstract = {The role of the Contract Data Requirements List [CDRL] in the DoD
	acquisition process is to provide the authoritative list of required
	artifacts for a given procurement. It forms an appendix to the acquisition
	contract, and includes delivery information and a schedule for each,
	typically mapped to milestone events such as the Preliminary Design
	Review [PDR] or the Critical Design Review [CDR] in the DoD Acquisition
	Waterfall Lifecycle. A number of CDRLs were proposed for the Joint
	Mission Planning Systems [JMPS] Framework, including a number of
	artifacts specific to the architecture and design of the application.
	Alignment with the DoD Acquisition Waterfall Lifecycle milestone
	events posed significant challenges to the program, given the contractor's
	proposed Agile development methodology. Many of these architectural
	and design documents carried a delivery-schedule expectation that
	placed them in conflict with the best practices and anticipated benefits
	of Agile, including the principle of #x201C;design only as much as
	is necessary to build features #x201D;. Using the Enterprise Architect
	tool, the contractor was able to produce a #x201C;living design #x201D;
	used daily by the development team, including architects, designers,
	developers, integrators, and testers. The tool provided capabilities
	that facilitated templates for various CDRLs, including the Systems
	Architecture Description [SAD], the Software Design Description [SDD],
	and the Interface Design Description [IDD], allowing on-demand generation
	of snapshots of the architecture and detailed design as it evolved,
	providing the appropriate level of documentation of the as-built
	system. The result better addressed the contractual intent of the
	CDRLs, to provide subsequent platform developers an accurate and
	up-to-date understanding of the architecture and design of the JMPS
	Framework, while better preserving the integrity of the development
	of the Enterprise Architecture within the selected Zachman Fram-
	work, and in the context of the contractor's Agile methodology.},
  doi = {10.1109/SysCon.2012.6189431},
  keywords = {CDR;CDRL;DoD acquisition process;DoD acquisition waterfall lifecycle;IDD;JMPS;PDR;SAD;SDD;Zachman
	framework;acquisition contract;agile development methodologies;contract
	data requirements list;critical design review;delivery information;delivery-schedule
	expectation;enterprise architect tool;enterprise architecture;interface
	design description;joint mission planning systems;living design;preliminary
	design review;software design description;systems architecture description;data
	acquisition;military computing;scheduling;software architecture;software
	prototyping;}
}

@INPROCEEDINGS{6189437,
  author = {Gregorio, D.D.},
  title = {How the Business Analyst supports and encourages collaboration on
	agile projects},
  booktitle = {Systems Conference (SysCon), 2012 IEEE International},
  year = {2012},
  pages = {1 -4},
  month = {march},
  abstract = {Agile teams need the Business Analyst (BA) to clearly define and communicate
	the detailed user stories to ensure a successful product. MITRE's
	Corporate IT Systems Engineering department supports software development
	activities which recently adopted an agile methodology. Unlike the
	detailed requirements documentation of more traditional, waterfall-based
	projects, we have found the streamlined #x201C;user stories #x201D;
	inadequate for developers or testers. Our BA experiences with eliciting
	user story details and maintaining the backlog for sprint planning
	are a critical component to agile development. BA activities include
	grooming the backlog, documenting user stories with detailed contracts,
	and performing user story verification through testing. This paper
	will review the techniques we have used during agile projects to
	manage the sprint cycle, including templates for user story management.
	Capturing artifacts from other agile projects and documenting recommended
	agile process guidelines can help projects be successful through
	reuse and collaboration. Many agile projects generate artifacts that
	are lost or are created for the benefit of only their project and
	discarded when through. Agile encourages lean documentation in order
	to maximize agility. We established a repository using an internal
	website where we documented corporte IT processes and share agile
	templates and samples. This repository includes samples of sprint
	schedules, backlog lists, burn-down charts, retrospective items,
	and user stories. The corporate IT process recommends agile but also
	includes traditional waterfall guidance and correlates the two different
	approaches. All projects, whether they are agile or otherwise, need
	similar deliverables, including project schedules and project plans.
	In correlating agile considerations to a waterfall approach, we hope
	to ease the transition to agile. The process guidance and repository
	site promotes collaboration, reuse, and review among agile pro- ects
	within the organization.},
  doi = {10.1109/SysCon.2012.6189437},
  keywords = {MITRE Corporate IT Systems Engineering department;agile development;agile
	methodology;agile projects;agile samples;agile templates;backlog
	lists;backlog maintenance;burn-down charts;business analyst;corporate
	IT processes;internal Web site;lean documentation;project plans;project
	schedules;retrospective items;software development activities;sprint
	cycle management;sprint planning;sprint schedules;user story detail
	elicitation;user story management;user story verification;waterfall-based
	projects;Web sites;organisational aspects;project management;software
	maintenance;software management;software prototyping;}
}

@INPROCEEDINGS{4258851,
  author = {Mattu, B.S. and Shankar, R.},
  title = {Test Driven Design Methodology for Component-Based System},
  booktitle = {Systems Conference, 2007 1st Annual IEEE},
  year = {2007},
  pages = {1 -7},
  month = {april},
  __markedentry = {[kimi:2]},
  abstract = {For modern systems there is growing proof that serial/traditional
	approaches, such as the traditional waterfall model and model driven
	architecture, are ineffective and development lifecycles need to
	be iterative and incremental. In this presentation, we discuss the
	iterative and incremental approach for software design methodology
	called test driven design (TDD). The TDD development cycle starts
	with the requirement specification and therefore captures defects
	much earlier in the development cycle. TDD requires that no production
	code be written until first a unit test is written. We compare TDD
	with the traditional methods and describe in detail the TDD method.
	We cover continuous integration, acceptance testing, system wide
	testing for each iteration, test frameworks, cost of change, ROI,
	benefits and limitations of the new test driven design and provide
	evidence from industry that TDD leads to higher programmer productivity
	with higher code quality. The future work investigations will extend
	the reach and effectiveness of TDD by using latest technologies to
	generate tests from message sequence charts and generating code thru
	use of a model compiler leading to an advanced test driven design
	methodology. Further investigations will also look at the concurrency
	issues by use of LTSA (labelled transition analyzer) technology.},
  doi = {10.1109/SYSTEMS.2007.374646},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {component-based system;labelled transition analyzer;message sequence
	charts;model compiler;software design methodology;test driven design
	methodology;formal specification;program testing;software engineering;}
}

@INPROCEEDINGS{971995,
  author = {Kulakov, A. and Trajkovik, V. and Davcev, D.},
  title = {An agent based model as a marketing consultant of companies},
  booktitle = {Systems, Man, and Cybernetics, 2001 IEEE International Conference
	on},
  year = {2001},
  volume = {5},
  pages = {3113 -3117 vol.5},
  __markedentry = {[kimi:2]},
  abstract = {A key requirement for a dynamic organization is the need for precise
	and formal knowledge management of the available information. The
	main objective of our work is to provide an agent based model of
	an agile integrated business system, more specifically, of the marketing
	sector of the company, where the knowledge has to be acquired, shared
	both internally and externally, updated, processed, applied, used
	and reused in order to find correlations among knowledge from different
	company sectors. Agents are able to suggest certain operations to
	the users in response to the change in the data structures they are
	responsible for maintaining. They can adopt using prior knowledge
	about company objectives and available customer data. An important
	role of the agent is to learn and change its practice according to
	previous approved behavior. The use of fuzzy set theory, in order
	to maintain and analyze the knowledge kept in the company profiles,
	as well, as to calculate the reliability of the suggested actions,
	showed the first positive experimental results. We applied this model
	for the operation of the Center for Distance Learning, for analysis
	of the different marketing campaigns and as a consultant for future
	campaigns},
  doi = {10.1109/ICSMC.2001.971995},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  issn = {1062-922X},
  keywords = {Center for Distance Learning;agent based model;agile integrated business
	system;company marketing consultant;company objectives;company profiles;company
	sectors;customer data;data structures;dynamic organization;formal
	knowledge management;future campaigns;fuzzy set theory;knowledge
	acquisition;marketing campaigns;marketing sector;previous approved
	behavior;prior knowledge;consultancies;fuzzy set theory;knowledge
	acquisition;learning by example;marketing data processing;software
	agents;}
}

@INPROCEEDINGS{5996039,
  author = {Landaeta, R.E. and Viscardi, S. and Tolk, A.},
  title = {Strategic management of scrum projects: An organizational learning
	perspective},
  booktitle = {Technology Management Conference (ITMC), 2011 IEEE International},
  year = {2011},
  pages = {651 -656},
  month = {june},
  abstract = {This paper contributes a framework to facilitate the strategic management
	of scrum projects. Scrum is a relatively new project management framework
	that has been adopted by research and development organizations,
	especially in the software development industry. Despite the many
	benefits that scrum has brought to R amp;D organizations, there are
	still additional benefits that have not been realized through the
	implementation of scrum in these organizations. Specifically, this
	investigation proposes an organizational learning framework applied
	to the strategic management of scrum projects. The results of this
	investigation can be used by senior managers and scrum practitioners
	as a guide for the development of strategies that promote learning
	across scrum projects.},
  doi = {10.1109/ITMC.2011.5996039},
  keywords = {organizational learning framework;project management;research and
	development organizations;scrum projects;software development industry;strategic
	management;organisational aspects;project management;research and
	development management;software development management;strategic
	planning;}
}

@INPROCEEDINGS{4077640,
  author = {Barbin Laurindo, F.J. and de Oliveira Moraes, R.},
  title = {Managing Conflicts in IT Projects in Brazilian Companies},
  booktitle = {Technology Management for the Global Future, 2006. PICMET 2006},
  year = {2006},
  volume = {5},
  pages = {2322 -2329},
  month = {july},
  abstract = {IT projects have assumed an important role in nowadays turbulent competitive
	scenario. Meanwhile, project management has been another important
	issue for implementing strategies that enable companies to face the
	menacing competition. This paper intends to identify the main sources
	of conflicts in IT projects, as well as the most common practices
	to solve them. This study was performed considering the different
	stages of development life cycle. There are five macro-strategies
	used for solving these conflicts: withdrawal, smoothing, forcing,
	compromise and problem solving. The concept of waterfall model for
	software developing process was also used. Although this model presents
	several limitations, it was chosen for this study due to its large
	adoption in the Brazilian companies' context. This life cycle model
	presents the following phases: analysis, design, coding, testing,
	implementation and maintenance. The adopted methodological approach
	was a survey among IT professionals. The research was performed through
	self fulfilled questionnaires sent by e-mail or answered in an Internet
	Web site. The answers were evaluated in order to eliminate some problematic
	cases. The valid answers were analyzed through statistical tools},
  doi = {10.1109/PICMET.2006.296819},
  keywords = {Brazilian company;IT project management;conflict management;software
	developing process;software development life cycle model;DP industry;project
	management;software development management;}
}

@INPROCEEDINGS{4267484,
  author = {Sertic, H. and Marzic, K. and Kalafatic, Z.},
  title = {A Project Retrospectives Method in Telecom Software Development},
  booktitle = {Telecommunications, 2007. ConTel 2007. 9th International Conference
	on},
  year = {2007},
  pages = {109 -114},
  month = {june},
  abstract = {Development of the telecommunications software systems is a highly
	demanding task. Beside requirements for high reliability, availability
	and very complex features, customers today demand new releases to
	be delivered in a very short time frames. Usual development projects
	are faced with significant problems and obstacles that in most cases
	result with long development cycles, high cost and poor quality of
	implemented solutions. The transition from traditional software development
	towards agile projects with frequent releases is not trivial and
	demand significant changes in all aspects of project organization.
	This work analyzes major obstacles in telecommunication software
	development and proposes a method for the use of common project retrospectives
	to improve telecommunications software development. Proposed method
	is applied and evaluated on the actual project to demonstrate all
	benefits that project retrospectives can bring to the telecommunications
	software development.},
  doi = {10.1109/CONTEL.2007.381858},
  excluded = {Kimi, title},
  keywords = {project organization;project retrospectives method;telecom software
	development;telecommunications;software development management;telecommunication
	computing;}
}

@INPROCEEDINGS{5206364,
  author = {Smojver, K. and Belani, H. and Car, Z.},
  title = {Building a hybrid process model for a complex software system integration},
  booktitle = {Telecommunications, 2009. ConTEL 2009. 10th International Conference
	on},
  year = {2009},
  pages = {147 -153},
  month = {june},
  abstract = {In order to fulfill every project specific requirement in software
	development today, and produce a software product with desired functionality
	and satisfactory quality attributes, adequate development and management
	processes ought to be designed, implemented, adopted, operated and
	or improved. Mandatory requests on shorter time to market, staying
	within the budget limit and producing high quality software become
	even more stressful for project stakeholders when dealing with complex
	software systems, like the ones for enterprise resource planning
	or multidimensional drafting of complex models for technical and
	engineering products. Based on the real-life experience, that is
	thoroughly analyzed here, in integrating such two complex software
	systems, a hybrid process model for project management and software
	development in agile environment is proposed in this paper. The model
	attributes specially stressed out and analyzed are suitability for
	agile conditions and adaptive behavior. Conclusion gives usage perspective
	for such a hybrid model, with limitations discussed and future work
	proposed.},
  keywords = {agile environment;complex software system;enterprise resource planning;hybrid
	process model;project management;software development;CAD/CAM;agile
	manufacturing;enterprise resource planning;project management;software
	development management;software process improvement;software quality;}
}

@INPROCEEDINGS{6129307,
  author = {Chi-Hang Hsu and Sung-Huai Hsieh and Jun-Teng Hsu and Po-Hsun Cheng
	and Sao-Jie Chen and Fei-pei Lai},
  title = {Mobile nursing cart with software defined radio for healthcare enterprises},
  booktitle = {TENCON 2011 - 2011 IEEE Region 10 Conference},
  year = {2011},
  pages = {1221 -1224},
  month = {nov.},
  __markedentry = {[kimi:1]},
  abstract = {Ubiquitous tele-care (u-Telecare) is a migration from tele-health
	and mobile health (m-Health) for continuous care. The u-Telecare
	is quite adaptable in the user environment which owns specific attributes,
	such as telecommunication, highly mobility, and medical care. Based
	on the preliminary survey and evaluation, some innovative software
	applications can support mobile nursing carts (MNC) for nurses, handheld
	devices for physicians, hospice care for terminal cancer patients,
	and home care devices for chronic diabetic patients. The research
	findings discovered that software defined radio (SDR) is a feasible
	solution and can be implemented for handling the physical layer of
	the multi-wireless communication standards. In this paper, we propose
	an ubiquitous seamless MNC (u-SMNC), which provides agile and high
	quality software focusing on the design and application implementation
	in order to supply an experimental software platform that allows
	MNCs and physician's handheld devices.},
  doi = {10.1109/TENCON.2011.6129307},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {2159-3442},
  keywords = {SDR;handheld devices;healthcare enterprises;innovative software applications;mobile
	nursing cart;multi-wireless communication standards;software defined
	radio;terminal cancer patients;u-Telecare;ubiquitous seamless MNC;ubiquitous
	telecare;biomedical communication;health care;mobile handsets;patient
	care;software radio;}
}

@INPROCEEDINGS{1691675,
  author = {Miller, J. and Smith, M. and Daenick, S. and Chen, J. and Qiao, J.
	and Huang, F. and Kwan, A. and Roper, M.},
  title = {An XP Inspired Test-Oriented Life-Cycle Production Strategy for Building
	Embedded Biomedical Applications},
  booktitle = {Testing: Academic and Industrial Conference - Practice And Research
	Techniques, 2006. TAIC PART 2006. Proceedings},
  year = {2006},
  pages = {95 -106},
  month = {aug.},
  abstract = {The construction of embedded biomedical applications is an under explored
	topic. The status quo is for practitioners to utilize a production
	process which possesses no specific focus; meanwhile, the marketplace
	requires highly demanding characteristics from these products. The
	principal requirement is that most of these products need to be effectively
	defect free. This demands that the production process be directed
	towards this objective; and hence the focus of this paper is our
	initial attempts at designing and implementing such a process. Our
	new process is developed around transforming a subset of extreme
	programming from the world of desktop applications into a methodology
	for this new domain. The paper also discusses our experiences in
	developing test frameworks to support the domain and our objectives.
	Finally, the paper provides some pointers on our future plans for
	tackling the many unresolved issues that still exist in attempting
	to fully realize and support this new development process},
  doi = {10.1109/TAIC-PART.2006.2},
  keywords = {XP inspired test-oriented life-cycle production strategy;desktop application;embedded
	biomedical application;extreme programming;test framework development;biomedical
	equipment;embedded systems;medical computing;program testing;programming;software
	fault tolerance;software prototyping;}
}

@INPROCEEDINGS{4344113,
  author = {Simons, A.J.H. and Thomson, C.D.},
  title = {Lazy Systematic Unit Testing: JWalk versus JUnit},
  booktitle = {Testing: Academic and Industrial Conference Practice and Research
	Techniques - MUTATION, 2007. TAICPART-MUTATION 2007},
  year = {2007},
  pages = {138},
  month = {sept.},
  __markedentry = {[kimi:1]},
  abstract = {Lazy systematic unit testing with JWalk is compared against regression
	testing with JUnit, the leading agile testing tool. JWalk produced
	exhaustive test sets more quickly and recalculated full state and
	transition coverage, when testing modified or extended classes. For
	the same time and effort invested, JWalk tested up to two orders
	of magnitude more paths than manual tests created for JUnit by an
	expert tester.},
  doi = {10.1109/TAIC.PART.2007.14},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {JUnit agile testing tool;JWalk testing;lazy systematic unit testing;program
	testing;software tools;}
}

@INPROCEEDINGS{6269639,
  author = {Wanghu Chen and Jing Li},
  title = {Agile Services Oriented Virtualization of Web Services},
  booktitle = {Theoretical Aspects of Software Engineering (TASE), 2012 Sixth International
	Symposium on},
  year = {2012},
  pages = {153 -160},
  month = {july},
  __markedentry = {[kimi:2]},
  abstract = {Problem Solving Environments (PSEs) for Virtual Organizations (VOs)
	are usually constructed on distributed resources. Thus, Web services
	are widely adopted to deliver resources in PSEs. To enable users
	to handle services efficiently, a mechanism of service virtualization
	to provide a relatively stable service view for users is proposed
	based on Agile Services. The algorithm of matchmaking is discussed
	to make Agile Services executable by binding Web services with expected
	functions to them. The approach to service filtering is also introduced
	to make service matchmaking more efficient. Experiments and simulations
	indicate that the approach proposed in the paper can shield the diversities
	of Web services to users and be adaptive to the variability of requirements,
	and eventually improve the efficiency for users to handle Web services.},
  doi = {10.1109/TASE.2012.37},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {PSE;VO;Web services;agile services oriented virtualization;problem
	solving environments;service filtering;service matchmaking;service
	virtualization;virtual organizations;Web services;organisational
	aspects;service-oriented architecture;virtual enterprises;}
}

@INPROCEEDINGS{6344556,
  author = {Petrov, P. and Buy, U. and Nord, R.L.},
  title = {Enhancing the software architecture analysis and design process with
	inferred macro-architectural requirements},
  booktitle = {Twin Peaks of Requirements and Architecture (Twin Peaks), 2012 IEEE
	First International Workshop on the},
  year = {2012},
  pages = {20 -26},
  month = {sept.},
  __markedentry = {[kimi:2]},
  abstract = {Traditionally the flow of authoritative information and control in
	requirements and software engineering is from requirements to architecture,
	design, development, implementation and testing. Iterative, spiral
	and agile methods, among others, have introduced increments and iterations
	in eliciting and discovering requirements within the project life
	cycle. Yet the authoritative flow of information across organizational
	boundaries within the enterprise continues to be from requirements
	to architecture to design. We argue that two additional implicit
	sources of information should be included in the requirements engineering
	process, contextual environment concerns and architectural patterns
	and heuristics. To account for these two sources of implicit requirements
	information we introduce the concept of forward and backward inferred
	macro-architectural requirements. Forward inferred macro-architectural
	requirements are elicited from contextual environment concerns. Backward
	inferred macro-architectural requirements are extracted through a
	reverse requirements elicitation process from architectural heuristics
	and patterns. We have observed significant improvements in the efficiency
	of the development processes and the quality of the final software
	products as a result of making inferred macro-architectural requirements
	explicit.},
  doi = {10.1109/TwinPeaks.2012.6344556},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {agile methods;architectural heuristics;architectural patterns;authoritative
	information flow;backward inferred macro-architectural requirements;contextual
	environment concerns;forward inferred macroarchitectural requirements;iterative
	methods;organizational boundaries;project life cycle;requirement
	discovery;requirement elicitation;requirements control;requirements
	engineering process;software architecture analysis process;software
	architecture design process;software engineering;software product
	quality;spiral methods;formal specification;organisational aspects;software
	architecture;software quality;}
}

@INPROCEEDINGS{1509525,
  author = {Pautasso, C.},
  title = {JOpera: an agile environment for Web service composition with visual
	unit testing and refactoring},
  booktitle = {Visual Languages and Human-Centric Computing, 2005 IEEE Symposium
	on},
  year = {2005},
  pages = { 311 - 313},
  month = {sept.},
  __markedentry = {[kimi:2]},
  abstract = { Agile methodologies employ light-weight development practices emphasizing
	a test-driven approach to the development of software systems. Modern
	agile development environments support this approach by providing
	tools that automate most of the work required to effectively deal
	with change, including unit testing and different forms of refactoring.
	In this paper we discuss how to apply such techniques within the
	JOpera Visual Composition Language. More precisely, we show how we
	used the visual language to implement a regression testing framework
	for compositions written in the language itself and how we introduced
	support in the visual environment for refactorings such as renaming,
	synchronization of service interface changes, and extraction/inlining
	across different levels of nesting. This is done in the context of
	the Web service composition tools provided with the JOpera for Eclipse
	research platform.},
  doi = {10.1109/VLHCC.2005.48},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = { Eclipse research; JOpera Visual Composition Language; Web service
	composition; agile environment; extraction; inlining; refactoring;
	regression testing; service interface change; software system development;
	visual environment; visual unit testing; Internet; Web design; formal
	specification; regression analysis; visual languages; visual programming;}
}

@INPROCEEDINGS{5552782,
  author = {Châ andtel, P. and Malenfant, J. and Truck, I.},
  title = {QoS-based Late-Binding of Service Invocations in Adaptive Business
	Processes},
  booktitle = {Web Services (ICWS), 2010 IEEE International Conference on},
  year = {2010},
  pages = {227 -234},
  month = {july},
  __markedentry = {[kimi:1]},
  abstract = {Computing has reached the time of distributed applications everywhere.
	Service-oriented architectures are more and more used to organize
	such complex and highly dynamic applications into business processes
	calling services discovered in registries at load-time. In this context,
	Quality of Service (QoS) and agility in business processes become
	key issues. Instead of binding business processes to services at
	load-time, this paper proposes to monitor sets of candidate services
	for their current QoS and to choose among them at call-time. This
	new form of late-binding paves the way to more agile and robust applications
	called adaptive business processes. Besides the conceptual background
	and implementation of this late-binding in an industrial-strength
	web service platform, this paper presents the LCP-net formalism introduced
	to provide programmers with a mean to express qualitatively their
	preferences among the different QoS properties of services, hence
	tackling the multi-criteria decision making arising from the run-time
	choice among candidate services given several unrelated QoS properties.},
  doi = {10.1109/ICWS.2010.74},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {LCP-net formalism;QoS-based late-binding form;adaptive business process;candidate
	services;distributed computing;industrial-strength Web service platform;multicriteria
	decision making;quality of service;service invocations;service-oriented
	architectures;Web services;business process re-engineering;formal
	specification;formal verification;software architecture;}
}

@INPROCEEDINGS{5552730,
  author = {Halb, W. and Zeiner, H. and Jandl, B. and Lernbeiß and, H. and Derler,
	C.},
  title = {Agile Service Oriented Architecture with Adaptive Processes Using
	Semantically Annotated Workflow Templates},
  booktitle = {Web Services (ICWS), 2010 IEEE International Conference on},
  year = {2010},
  pages = {632 -633},
  month = {july},
  __markedentry = {[kimi:2]},
  abstract = {Although WS-BPEL is a widely used language for modeling executable
	business processes in service oriented architectures it is almost
	impossible to dynamically bind services at runtime taking complex
	constraints and optimisation goals into account. The approach presented
	in this paper uses semantically annotated workflow templates and
	extensions to introduce adaptability which enables agile service
	oriented architectures. The technological solution will be validated
	in a critical infrastructure environment where resilience and security
	play an important role.},
  doi = {10.1109/ICWS.2010.42},
  excluded = {Kimi, title},
  excludekimi = {abstract},
  keywords = {WS-BPEL;adaptive processes;agile service oriented architecture;business
	processes;semantically annotated workflow templates;software architecture;software
	prototyping;specification languages;workflow management software;}
}

@INPROCEEDINGS{5552752,
  author = {Sinha, A. and Paradkar, A.},
  title = {Use Cases to Process Specifications in Business Process Modeling
	Notation},
  booktitle = {Web Services (ICWS), 2010 IEEE International Conference on},
  year = {2010},
  pages = {473 -480},
  month = {july},
  abstract = {Use cases are a key technique to elicit software requirements from
	the point of view of the user of a system. Their prevalence is noticeable
	ever since the onset of agile programming techniques. Within SOA
	projects however, business process models are used for capability
	analysis and gap detection. Business process models present a global
	view of the system and hence are more suited for gap detection. Therefore,
	in practice both these forms of requirements continue to be useful
	and coexist. Often in big software projects and in distributed development
	environment such coexisting requirement specifications can grow out
	of synch. We present here a technique to semi-automatically transform
	use cases into business processes and to create mapping between them.
	By preserving the mapping between these forms one can enforce consistency
	between the two forms of requirements.},
  doi = {10.1109/ICWS.2010.105},
  excluded = {Kimi, title},
  keywords = {business process modeling notation;gap detection;process specifications;use
	cases;business process re-engineering;formal specification;software
	management;}
}

@INPROCEEDINGS{1530869,
  author = {Bansal, A. and Patel, K. and Gopal Gupta and Raghavachari, B. and
	Harris, E.D. and Staves, J.C.},
  title = {Towards intelligent services: a case study in chemical emergency
	response},
  booktitle = {Web Services, 2005. ICWS 2005. Proceedings. 2005 IEEE International
	Conference on},
  year = {2005},
  pages = { 2 vol. (xxxiii+856)},
  month = {july},
  abstract = { In a short period the Web has become an important part of our lives.
	However, the full potential of the Web is still not realized. Two
	recent developments - Web services and the semantic Web - are steps
	in the direction of utilizing the full potential of the Web. Web
	services allow applications to utilize the Web for automatically
	extracting (and updating) information while the semantic Web enterprise
	promises to provide the infrastructure that allows intelligent Web
	services to be rapidly created and deployed. However, with this comes
	the task of transforming the traditional Web-based systems to Web-services
	over the semantic Web. In this paper, we demonstrate how an existing
	successful Web-based system for providing help to first responders
	of chemically hazardous emergencies (called E-plan) can be converted
	into a Web-services based model using the semantic Web and intelligent
	reasoning technologies. Our efforts can be regarded as a case study
	in converting monolithic Web-based applications to a more agile,
	rapidly deployable intelligent Web-services model.},
  doi = {10.1109/ICWS.2005.122},
  excluded = {Kimi, title},
  keywords = { E-plan; Web-based system; chemical emergency response; chemically
	hazardous emergency; intelligent Web service; intelligent reasoning
	technology; monolithic Web-based application; semantic Web; chemical
	hazards; chemical industry; emergency services; inference mechanisms;
	semantic Web;}
}

@INPROCEEDINGS{4032052,
  author = {Blake, M.B.},
  title = {A Lightweight Software Design Process for Web Services Workflows},
  booktitle = {Web Services, 2006. ICWS '06. International Conference on},
  year = {2006},
  pages = {411 -418},
  month = {sept.},
  abstract = {Service-oriented computing (SOC) suggests that many open, network-accessible
	services will be available over the Internet for organizations to
	incorporate into their own processes. Developing new software systems
	by composing an organization's local services and externally-available
	Web services is conceptually different from system development supported
	by traditional software engineering lifecycles. Consumer organizations
	typically have no control over the quality and/or consistency of
	the external services that they incorporate, thus top-down software
	development lifecycles are impractical. Software architects and designers
	will require agile, lightweight processes to evaluate tradeoffs in
	system design based on the "estimated" responsiveness of external
	services coupled with known performance of local services. We introduce
	a model-driven software engineering approach for designing systems
	(i.e. workflows of Web services) under these circumstances and a
	corresponding simulation-based evaluation tool},
  doi = {10.1109/ICWS.2006.8},
  keywords = {Internet;Web services workflows;lightweight software design;model-driven
	software engineering;open network-accessible services;service-oriented
	computing;software engineering lifecycle;Web services;open systems;software
	engineering;}
}

@INPROCEEDINGS{4399752,
  author = {Millard, David E. and Davis, Hugh C. and Howard, Yvonne and Gilbert,
	Lester and Walters, Robert J. and Abbas, Noura and Wills, Gary B.},
  title = {The Service Responsibility and Interaction Design Method: Using an
	Agile Approach for Web Service Design},
  booktitle = {Web Services, 2007. ECOWS '07. Fifth European Conference on},
  year = {2007},
  pages = {235 -244},
  month = {nov.},
  abstract = {Service-Oriented Architectures (SOAs) are increasingly deployed to
	achieve distributed systems that are modular, flexible and extensible.
	Designing for a SOA can be difficult, however. There are issues involving
	the granularity of the cooperating services, and there are no currently
	accepted conventions for describing a service or its interactions
	at an abstract level. This paper presents the Service Responsibility
	and Interaction Design Method (SRI-DM), an agile approach for engineering
	a Web Service design, based on capturing a scenario as a use-case,
	factoring this into a set of Service Responsibility and Collaboration
	Cards, and constructing a Sequence diagram illustrating their interactions
	in fulfilling the scenario. The paper presents the notation for each
	step and describes with the aid of an example how this process is
	used to create a service design within the domain of e-assessment.},
  doi = {10.1109/ECOWS.2007.25}
}

@INPROCEEDINGS{4670150,
  author = {Min Luo},
  title = {Common Business Components and Services toward More Agile and Flexible
	Industry Solutions and Assets},
  booktitle = {Web Services, 2008. ICWS '08. IEEE International Conference on},
  year = {2008},
  pages = {9 -10},
  month = {sept.},
  __markedentry = {[kimi:2]},
  abstract = {In many decades, many organizations, especially large consulting companies,
	have been designing, implementing and managing business solutions
	for every industry around the globe. But due to numerous limitations
	in process, tooling and skills, most of those solutions were made
	very specific to individual industry and client needs at its early
	design stage. Therefore, reuse and more importantly, managing the
	ever changing business requirements, become almost impossible. Service-orientation
	and architecture, model-driven business development provides us a
	new and powerful approach to facilitate asset based industry solution
	design and development. To further accelerate this, this tutorial
	will discuss an innovative approach that take advantage of many proven
	best software engineering practices, from object/component based
	technology, meta-data driven architecture types (archetypes) that
	are used to model the common structural and in some cases non-structural
	business entities such as customer, product, payment, etc. In order
	to address the consequences introduced by abstracting those common
	elements out of the specific industry model and be able to enable
	easy and meta-data based transformation, we properly decompose business
	components/services into a multi-layered business architecture. Therefore,
	process/components/services can be decomposed accordingly to facilitate
	the decomposition and abstraction, while maintaining certain level
	of necessary traceability across various artifacts. In the realization
	phase, existing assets/operational systems will be mapped and transformed
	to the required business components and services to best leverage
	those existing valuable industry/client investments. To support such
	a SOA based, model and business driven development process, existing
	tooling, especially the necessary transformation and integration
	capability, needs to be significantly enhanced. This tutorial will
	also present some recommendation based on some recent design a- -
	nd implementation, and they could be used to guide future tooling
	alignment and integration effort across software modeling, implementation
	and solution products. In addition, we will present how to leverage
	existing internal or external assets or product offerings and the
	open industry reference models and standards (such as ACCORD, ebXML,
	ARTS/IxRetail). This work is based on authors' collective experience
	in leading the large end-to-end client engagements across many industries,
	while promoting various industry leading software engineering best
	practices.},
  doi = {10.1109/ICWS.2008.147},
  excludekimi = {abstract},
  keywords = {business components-services;business requirements;business solutions;meta-data
	driven architecture;model-driven business development;multilayered
	business architecture;object-component based technology;service-orientation
	and architecture;software engineering;business data processing;distributed
	object management;meta data;software architecture;}
}

@INPROCEEDINGS{4380249,
  author = {Garrido, A. and Rossi, G. and Distante, D.},
  title = {Model Refactoring in Web Applications},
  booktitle = {Web Site Evolution, 2007. WSE 2007. 9th IEEE International Workshop
	on},
  year = {2007},
  pages = {89 -96},
  month = {oct.},
  __markedentry = {[kimi:1]},
  abstract = {Refactoring has been growing in importance with recent software engineering
	approaches, particularly agile methodologies, which promote continuous
	improvement of an application's code and design. Web applications
	are especially suitable for refactoring because of their rapid development
	and continuous evolution. Refactoring is about applying transformations
	that preserve program behavior. Code refactorings apply transformations
	to the source code while model refactorings apply to design models,
	both with the purpose of increasing internal qualities like maintainability
	and extensibility. In this paper we propose Web model refactorings
	as transformations that apply to the design models of a Web application.
	Particularly, we define refactorings on the navigation and presentation
	models, and present examples. Since changing these models impacts
	on what the user perceives, the intent of Web model refactorings
	is to improve external qualities like usability. They may also help
	to introduce Web patterns in a Web application.},
  doi = {10.1109/WSE.2007.4380249},
  excluded = {Kimi, title},
  excludekimi = {title},
  keywords = {Web applications;Web model refactorings;Web patterns;code refactorings;program
	behavior presevation;rapid development;software engineering;Internet;software
	engineering;}
}

@INPROCEEDINGS{5779123,
  author = {Ansari, J. and Xi Zhang and Achtzehn, A. and Petrova, M. and Mahonen,
	P.},
  title = {A flexible MAC development framework for cognitive radio systems},
  booktitle = {Wireless Communications and Networking Conference (WCNC), 2011 IEEE},
  year = {2011},
  pages = {156 -161},
  month = {march},
  __markedentry = {[kimi:1]},
  abstract = {Cognitive radios are becoming the technological foundation for efficiently
	managing the scarcity of wireless spectrum, fulfilling various QoS
	demands and allowing different networks to coexist. Cognition and
	spectrum agility in MAC protocols require adaptability and close
	PHY-MAC interaction. Classically, MAC protocols have been implemented
	in hardware, which gives a limited possibility for reconfiguration
	and customization. Recently, software based MAC implementations have
	emerged although a close hardware-software co-design is typically
	required to keep the time critical operations in ASICs or FPGAs.
	We introduce a MAC development framework for enabling fast composition
	of MAC protocols, which are best fitted to the application requirements,
	communication capabilities of the radio, and current spectrum regulations
	and policies. We decompose MAC protocols into their basic functionalities
	which are perceived as building blocks and are partitioned across
	hardware/software. Our framework allows on-the-fly realization of
	the envisioned MAC protocol through wiring of these fundamental components.
	By exposing extended metadata and hardware functionalities for the
	MAC implementation through our granular components, together with
	the support for run-time re-configuration, spectrum agile and cognitive
	MAC solutions can be easily realized. In this paper, we describe
	the design rationale and implementation details of our framework
	on WARP boards. We show through experimental evaluation that the
	framework provides flexible means for prototyping different reconfigurable
	cognitive and spectrum agile MAC protocols.},
  doi = {10.1109/WCNC.2011.5779123},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1525-3511},
  keywords = {MAC protocol;QoS;WARP board;cognitive MAC solution;cognitive radio
	systems;flexible MAC development framework;run time reconfiguration;spectrum
	agile solution;access protocols;cognitive radio;}
}

@INPROCEEDINGS{4679227,
  author = {Jian-Liang Meng and Liang Yao},
  title = {The Status and Development Trend of the Development Model Based on
	XP Method},
  booktitle = {Wireless Communications, Networking and Mobile Computing, 2008. WiCOM
	'08. 4th International Conference on},
  year = {2008},
  pages = {1 -4},
  month = {oct.},
  __markedentry = {[kimi:1]},
  abstract = {In the process of software development, the most important phase is
	to select a software development model and a software process which
	are suit to the actual situation of an organization or a project,
	This paper introduces and summarizes the status and development trend
	of the development model based on XP method, and gives the characteristics
	and applicable occasions of the model.},
  doi = {10.1109/WiCom.2008.1319},
  excludekimi = {title},
  keywords = {XP method;extreme programming;software development;software process;programming;software
	engineering;}
}

@INPROCEEDINGS{4806926,
  author = {Minor, M. and Schmalen, D. and Weidlich, J. and Koldehoff, A.},
  title = {Introspection into an Agile Workflow Engine for Long-Term Processes},
  booktitle = {Workshop on Enabling Technologies: Infrastructure for Collaborative
	Enterprises, 2008. WETICE '08. IEEE 17th},
  year = {2008},
  pages = {241 -246},
  month = {june},
  __markedentry = {[kimi:1]},
  abstract = {This demo paper is on an introspection tool for an agile workflow
	engine that executes long-term workflows. Agile workflows are workflows
	whose control flow structure can be adapted at run-time. We will
	present the architecture of the overall agile workflow management
	system, briefly introduce the agile workflow modelling language,
	and describe the tool for the introspection into the representation
	and execution of the workflows.},
  doi = {10.1109/WETICE.2008.24},
  excluded = {Kimi, title},
  excludekimi = {title},
  issn = {1524-4547},
  keywords = {agile workflow engine;agile workflow management system;agile workflow
	modelling language;control flow structure;introspection tool;long-term
	processes;long-term workflows;software engineering;specification
	languages;workflow management software;}
}

