% This file was created with JabRef 2.9.
% Encoding: UTF8

@INPROCEEDINGS{6149533,
  author = {Aitken, A.M.},
  title = {Introduction to Agile Software Engineering Minitrack},
  booktitle = {System Science (HICSS), 2012 45th Hawaii International Conference
	on},
  year = {2012},
  pages = {5278-5278},
  abstract = {This minitrack seeks to explore the middle ground between traditional
	software engineering (TSE) and the new agile software development
	(ASD), or what we call agile software engineering (ASE). The minitrack
	includes six contemporary and high quality research papers.},
  db = {ieeexplore2},
  doi = {10.1109/HICSS.2012.340},
  issn = {1530-1605},
  keywords = {agile;software development;software engineering;traditional}
}

@INPROCEEDINGS{6480416,
  author = {Aitken, Ashley M.},
  title = {Introduction to Agile and Lean Software Engineering Minitrack},
  booktitle = {System Sciences (HICSS), 2013 46th Hawaii International Conference
	on},
  year = {2013},
  pages = {4750-4750},
  abstract = {N/A},
  db = {ieeexplore2},
  doi = {10.1109/HICSS.2013.290},
  issn = {1530-1605},
  keywords = {Australia;Educational institutions;Information systems;Programming
	profession;Software;Software engineering;N/A}
}

@INPROCEEDINGS{6405500,
  author = {Aktunc, O.},
  title = {Entropy Metrics for Agile Development Processes},
  booktitle = {Software Reliability Engineering Workshops (ISSREW), 2012 IEEE 23rd
	International Symposium on},
  year = {2012},
  pages = {7-8},
  abstract = {Agile development processes are preferred by most of the software
	industry over plan-driven processes in recent years. The transition
	from plan-driven to agile processes has surfaced a problem: How to
	adopt metrics that will provide information about the product, such
	as complexity, design, quality, and size. Many software metrics that
	are used with plan-driven processes conflict with the agile values
	and principles. This paper is proposing to use the entropy concept
	from communication theory to develop complexity metrics that will
	help project managers to have a better view of the product.},
  db = {ieeexplore2},
  doi = {10.1109/ISSREW.2012.36},
  keywords = {DP industry;entropy;software metrics;software prototyping;agile development
	processes;entropy metrics;plan-driven process;software industry;software
	metrics;Complexity theory;Conferences;Entropy;Software;Software metrics;Entropy;agile
	development;metrics;software measurement}
}

@INPROCEEDINGS{6337893,
  author = {Aleixo, F.A. and Freire, M. and Alencar, D. and Campos, E. and Kulesza,
	U.},
  title = {A Comparative Study of Compositional and Annotative Modelling Approaches
	for Software Process Lines},
  booktitle = {Software Engineering (SBES), 2012 26th Brazilian Symposium on},
  year = {2012},
  pages = {51-60},
  abstract = {This paper presents a comparative study of compositional and annotative
	modeling approaches for software process lines. In our comparative
	study, Open UP and Scrum based software process lines extracted from
	existing projects are modeled and implemented using an existing compositional
	approach -- EPF Composer, and an annotative approach -- GenArch-P,
	with the main aim to address a systematic variability management
	and automatic process derivation. In order to promote the analysis
	of the approaches were adapted some comparison criteria previously
	adopted in other studies. Our study results show that the annotative
	approach can bring many advantages to the modeling of software process
	lines considering our comparison criteria. On the other hand, our
	study also concludes that many existing compositional mechanisms
	should also be integrated with annotative approaches in order to
	improve the modularity of process elements associated to specific
	kinds of process variabilities.},
  db = {ieeexplore2},
  doi = {10.1109/SBES.2012.11},
  keywords = {software process improvement;EPF Composer;GenArch-P;OpenUP based software
	process lines;Scrum based software process lines;annotative modelling;automatic
	process derivation;compositional modelling;Adaptation models;Analytical
	models;Context;Measurement;Software;Systematics;Visualization;Software
	Process;Software Process Lines;Variability Management}
}

@INPROCEEDINGS{6511839,
  author = {Alves, L.M. and Machado, R.J. and Ribeiro, P.},
  title = {Experimental Software Engineering in Educational Context},
  booktitle = {Quality of Information and Communications Technology (QUATIC), 2012
	Eighth International Conference on the},
  year = {2012},
  pages = {336-341},
  abstract = {Empirical studies are important in software engineering to evaluate
	new tools, techniques, methods and technologies in a structured way
	before they are introduced in the industrial (real) software process.
	Within this PhD thesis we will develop a framework of a consistent
	process for involving students as subjects of empirical studies of
	software engineering. In concrete, our experiences with software
	development teams composed of students will analyze how RUP (Rational
	Unified Process) processes can be compliant with the CMMI (Capability
	Maturity Model Integration), namely in the context of MLs (maturity
	levels) 2 and 3. Additionally, we will also analyze the influence
	of project management tools to improve the process maturity of the
	teams. Our final goal of carrying out empirical studies with students
	is to understand its validity when compared with the corresponding
	studies in real industrial settings.},
  db = {ieeexplore2},
  doi = {10.1109/QUATIC.2012.29},
  keywords = {Capability Maturity Model;computer science education;project management;software
	development management;CMMI;ML;PhD thesis;RUP process;capability
	maturity model integration;educational context;experimental software
	engineering;maturity levels;project management tools;rational unified
	process;software development teams;team process maturity;software
	engineering management;software engineering process;software quality}
}

@INPROCEEDINGS{6511822,
  author = {Amaral, V. and Barroca, B. and Carreira, P.},
  title = {Towards a Robust Solution in Building Automation Systems: Supporting
	Rapid Prototyping and Analysis},
  booktitle = {Quality of Information and Communications Technology (QUATIC), 2012
	Eighth International Conference on the},
  year = {2012},
  pages = {261-264},
  abstract = {It is presently required agile and systematic solutions aiming at
	streamlining the development, maintenance and configuration of complex
	Building Automation Systems (BASs) in an energy aware manner. We
	aim at defining usable Domain Specific Languages (DSLs) using a Software
	Language Engineering (SLE), as systematic approach for language development,
	and develop the right tools for specifying the behavior of BASs components
	along with their energy-related requirements. The goal is to not
	only assist the systems engineers while rapid-prototyping/developing
	affordable, high-quality, energy-efficient(EE) BASs, but also to
	take advantage of high level abstractions, efficient special-purpose
	verification algorithms and analysis tools for early validation and
	verification, in order to promote Quality of the generated software
	products. We are watching to the rise of Model-Driven Development
	as the pragmatic approach to build them, since this approach is based
	on the notion of explicit abstractions/models. This is achieved thanks
	to model transformations that, besides automatically translating
	any specification of a given language into other execution specifications,
	also allow us to derive analysis specifications. The problem with
	the referred types of transformation purposes is that we cannot guarantee
	quality and coherence between the derived specifications into execution
	specifications and combine it with analysis specifications unless
	we can either make use of testing over the execution, with the problems
	already known, or have mechanisms to study the transformations. While
	this problem is motivated by the concrete need of developing BASs,
	we foresee that it can be of general application in SLE. In this
	position paper we will give a state of the art in Building Automation
	and we give an overview of a possible solution that uses MDD and
	model transformations, in the context of a BAS solution, in order
	to check their correctness in w.r.t. the formal semantics of the
	lan- uages used in the target platforms (i.e either execution or
	analysis).},
  db = {ieeexplore2},
  doi = {10.1109/QUATIC.2012.59},
  keywords = {building management systems;buildings (structures);civil engineering
	computing;energy conservation;formal specification;formal verification;rapid
	prototyping (industrial);software quality;BAS configuration;BAS development;BAS
	maintenance;DSL;SLE;analysis tool;building automation system;domain
	specific language;energy aware BAS;energy-related requirement;execution
	specification;explicit abstraction notion;formal semantics;language
	development;model transformation;model-driven development;rapid prototyping;software
	language engineering;software product quality;special-purpose verification
	algorithm;DSLTrans;Model Checking;Model Transformations;Model Transformations
	Analysis;Quality in MDD;Software Language Engineering}
}

@INPROCEEDINGS{6170013,
  author = {Asnawi, A.L. and Gravell, A.M. and Wills, G.B.},
  title = {Factor Analysis: Investigating Important Aspects for Agile Adoption
	in Malaysia},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {60-63},
  abstract = {This paper focuses on identifying the important aspects of Agile adoption
	from software practitioners in Malaysia. We analyse 27 Agile adoption
	variables from a survey of early Agile users in Malaysia. Factor
	analysis is conducted to identify the clusters of the variables (or
	items) and how they are inter-related to produce factors. Most of
	the respondents are from software organisations in Kuala Lumpur and
	Selangor, in which most of the companies are located in Malaysia.
	The clusters of variables resulting from this analysis can serve
	as a reference to the practitioners planning to adopt the methodology.
	The top factors identified from this study are shown in terms of
	(i) developer involvement and organisation-related aspects, (ii)
	cultural and people related aspects and (iii) customer collaboration
	and the need for professional skills when using Agile methods. In
	addition, factor analysis discovered that practitioners disagreed
	about the importance of the technical aspects of Agile. While we
	believe that these findings are particularly important from the Malaysian
	perspective, however, they also help add to the body of evidence
	in the field of software engineering and software process particularly
	in terms of Agile methods adoption. Moreover, the study also can
	help adopters from the nearby geographical regions to understand
	and see the suitability of Agile methods for their organisations.},
  db = {ieeexplore2},
  doi = {10.1109/AgileIndia.2012.13},
  keywords = {cultural aspects;organisational aspects;software prototyping;Kuala
	Lumpur;Malaysia;Selangor;agile adoption;agile users;cultural aspects;customer
	collaboration;factor analysis;geographical regions;organisation related
	aspects;people related aspects;professional skills;software engineering;software
	organisations;software practitioners;software process;Collaboration;Eigenvalues
	and eigenfunctions;Loading;Programming;Software;Software engineering;Training;Agile
	methods;factor analysis;factor extraction;factor rotation;loadings;software
	process}
}

@INPROCEEDINGS{6170017,
  author = {Asnawi, A.L. and Gravell, A.M. and Wills, G.B.},
  title = {Emergence of Agile Methods: Perceptions from Software Practitioners
	in Malaysia},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {30-39},
  abstract = {Agile methods are an established process for developing software nowadays.
	There is, however, less evidence on their usage among software practitioners
	in Malaysia. While the methods have become mainstream in other regions,
	that is not the case in this country. This paper empirically investigates
	the perceptions of Agile methods usage from seven organisations involving
	14 software practitioners in Malaysia. Our participants are using
	Scrum and have a maximum of five years experience. We categorised
	our findings in terms of awareness, introduction, and challenges
	they are facing, together with the suggested and practiced solution
	from them. Interestingly, a change in mind set when practicing Agile
	was identified to be helpful in reducing the challenges. Lastly we
	present the practices in Agile they perceived to deliver the most
	benefits. We found that the use of Agile is still emerging in the
	country, and awareness is still lacking especially within the government
	sector. Although several challenges have been encountered when introducing
	Agile in their organisations, the benefits of Agile are reported
	to be in Agile practices such as: the involvement from all parties
	from the beginning, daily stand-up meeting, iterative and incremental,
	applying burn down chart, sprint and continuous integration. We aim
	to provide awareness and knowledge about Agile methods to the practitioners
	in the country and the nearby region. This paper can serve as a reference
	to the early adopters who intend to use Agile methods in the future.},
  db = {ieeexplore2},
  doi = {10.1109/AgileIndia.2012.14},
  keywords = {software prototyping;Malaysia;agile methods;software development;software
	practitioners;Companies;Government;Industries;Interviews;Programming;Software;Training;Agile
	methods;awareness;benefits;challenges;introduction;perceptions;practices;software
	process}
}

@INPROCEEDINGS{6511783,
  author = {Ayed, H. and Vanderose, B. and Habra, N.},
  title = {A Metamodel-Based Approach for Customizing and Assessing Agile Methods},
  booktitle = {Quality of Information and Communications Technology (QUATIC), 2012
	Eighth International Conference on the},
  year = {2012},
  pages = {66-74},
  abstract = {In today's dynamic market environments, producing high quality software
	rapidly and efficiently is crucial. In order to allow fast and reliable
	development processes, several agile methodologies have been designed
	and are now quite popular. Although existing agile methodologies
	are abundant, companies are increasingly interested in the construction
	of their own customized methods to fit their specific environment.
	In this paper, we investigate how agile methods can be constructed
	in-house to address specific software process needs. First, we examine
	a case study focusing on the tailoring of two agile methodologies,
	XP and Scrum. Then, we focus on the high-level scope of any agile
	method customization and investigate an approach based on the Situational
	Method Engineering (SME) paradigm that includes measurement concepts
	for constructing context specific agile methodologies. We also examine
	several existing metamodels proposed for use in SME. Finally, we
	introduce an agile metamodel designed to support the construction
	of agile methods and relying on measurements to provide guidance
	to agile methodologists during the construction phase and throughout
	the development process itself.},
  db = {ieeexplore2},
  doi = {10.1109/QUATIC.2012.11},
  keywords = {software prototyping;software quality;SME paradigm;Scrum;XP;agile
	metamodel;agile method assessment;agile method customization;construction
	phase;context specific agile methodology;high quality software;measurement
	concepts;metamodel-based approach;situational method engineering
	paradigm;software process;Agile methods metamodeling;Measurement;Process
	tailoring;Quality Assessment Modeling;Situational Method Engineering
	(SME)}
}

@INPROCEEDINGS{6269412,
  author = {Tian Baojun},
  title = {Formal modelling and validation for software process based on CPN},
  booktitle = {Software Engineering and Service Science (ICSESS), 2012 IEEE 3rd
	International Conference on},
  year = {2012},
  pages = {89-92},
  abstract = {Currently, many modelling methods for software process are semiformal.
	It is difficult to analyze semantics and verify correctness for a
	key system. Coloured Petri Net (CPN) based on mathematics is an executable
	model, which has rigorous formal semantics and analysis methods.
	This paper presents a method of formal modelling and validation for
	software process that transforms UML model based on RUP to CPN and
	uses simulation to investigate the behaviour of modelled system.},
  db = {ieeexplore2},
  doi = {10.1109/ICSESS.2012.6269412},
  keywords = {Petri nets;Unified Modeling Language;formal verification;programming
	language semantics;CPN;RUP;UML model;coloured Petri net;formal modelling;formal
	semantics;formal validation;semantics analysis method;software process;Analytical
	models;Unified modeling language;CPN;RUP;formal;modelling;simulation}
}

@INPROCEEDINGS{6170020,
  author = {Bass, J.M.},
  title = {Influences on Agile Practice Tailoring in Enterprise Software Development},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {1-9},
  abstract = {Agile development projects have become a reality in large enterprises
	using offshore development models. A case study involving seven international
	companies with offices in Bangalore, India, and London, UK was conducted,
	including interviews with 19 practitioners. The contribution of this
	paper is to illustrate the reasons for tailoring Agile practices
	within the context of large enterprises. The findings show that scrum
	roles and practices did not conflict with enterprise policies or
	processes and were thought to improve product quality and productivity.
	However, agile practices from the XP tradition were not so widely
	adopted. Test driven development did not integrate well within enterprises
	where independent quality assurance teams were constituted as separate
	departments. Continuous integration was found to be challenging where
	enterprise software products required time consuming regression testing
	and elaborate code release processes. While adoption of coding standards
	and collective code ownership are necessary to facilitate interaction
	between disparate stakeholder groups.},
  db = {ieeexplore2},
  doi = {10.1109/AgileIndia.2012.15},
  keywords = {business data processing;regression analysis;software prototyping;Scrum;XP;agile
	development project;agile practice tailoring;code release process;coding
	standard;collective code ownership;enterprise software development;enterprise
	software product;international companies;offshore development model;regression
	testing;test driven development;distributed agile development;enterprise
	software;extreme programming (XP);scrum;tailoring}
}

@INPROCEEDINGS{6480426,
  author = {Benefield, Gabrielle and Greening, Dan},
  title = {Introduction to Agile/Lean Startup Organizations Minitrack},
  booktitle = {System Sciences (HICSS), 2013 46th Hawaii International Conference
	on},
  year = {2013},
  pages = {4834-4834},
  abstract = {Leading enterprise transformation experts offer diverse perspectives
	on how Agile methods and Lean Product Management practices can improve
	organizational systems and outcomes. Agile methods promote iterative
	product releases and pull risk-reduction earlier in product development.
	Lean product management methods test market hypotheses and rapidly
	adapt to discoveries. Applying agile and lean product principles
	to large organizations causes many new requirements, opportunities
	and discoveries to emerge.},
  db = {ieeexplore2},
  doi = {10.1109/HICSS.2013.333},
  issn = {1530-1605},
  keywords = {Contracts;Green products;Measurement;Organizations;Product development;Software;Testing;Agile
	Lean Startup}
}

@INPROCEEDINGS{6319252,
  author = {Bernhart, M. and Strobl, S. and Mauczka, A. and Grechenig, T.},
  title = {Applying Continuous Code Reviews in Airport Operations Software},
  booktitle = {Quality Software (QSIC), 2012 12th International Conference on},
  year = {2012},
  pages = {214-219},
  abstract = {Code reviews are an integral part of the development of a dependable
	system such as for airport operations. It is commonly accepted that
	code reviews are an effective quality assurance technique even if
	a rigorous application is also a high cost factor. For large software
	systems a formal method may be inapplicable throughout the whole
	code base. In this study an airport operational database (AODB) is
	developed with the application of a more lightweight approach to
	code reviews. A continuous, distributed and change-based process
	is applied by the development team and evaluated in comparison to
	team walkthroughs (IEEE-1028) as a baseline method. The application
	showed to be highly useful, equally effective as the baseline, but
	more efficient especially for the preparation, execution and rework
	effort. The results show that continuous code reviews also support
	the understanding of the code base and the concept of collective
	ownership. Such processes may not completely substitute a more formal
	and effortful technique. Especially for reviewing critical design
	aspects or complex items a traditional approach is still more appropriate.
	The main outcome is that such lightweight code reviews may be used
	together with more formal approaches to ensure a high coverage and
	that the degree of formalism should be adopted to the criticality
	of the item under review.},
  db = {ieeexplore2},
  doi = {10.1109/QSIC.2012.61},
  issn = {1550-6002},
  keywords = {airports;database management systems;formal specification;program
	diagnostics;quality assurance;software quality;AODB;IEEE-1028;airport
	operational database;airport operations software;change-based process;continuous
	code reviews;continuous process;dependable system;distributed process;formal
	method;large software systems;quality assurance technique;whole code
	base;Airports;Communities;Context;Databases;Quality assurance;Software;Standards;IEEE-1028;agile;aviation;code
	quality;code review;continuous;inspection}
}

@INPROCEEDINGS{6170012,
  author = {Bhasin, S.},
  title = {Quality Assurance in Agile: A Study towards Achieving Excellence},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {64-67},
  abstract = {Agile Methods are known to have built-in quality management system,
	however there are still challenges seen in the real life scenarios
	within the software organizations that are transitioning from traditional
	method to Agile development methods. Traditional Quality Assurance
	techniques are reporting based and rely on heavy weight inspection
	methods whereas Agile Quality Assurance techniques are built-in daily
	activities by teams. Research proposal here aims to study various
	challenges faced in terms of assuring quality in Agile, what are
	the key drivers or indicators of Quality in agile and proposing the
	framework to evaluate what aspects of Agile improve the quality of
	the product in terms of bug rates, development time and costs. Through
	this study we aim to provide some suggestions to help organizations
	overcome obstacles expected in adopting the agile method as software
	development tool and ensuring quality.},
  db = {ieeexplore2},
  doi = {10.1109/AgileIndia.2012.18},
  keywords = {inspection;organisational aspects;quality assurance;software prototyping;software
	quality;agile development methods;agile quality assurance techniques;bug
	rates;costs;development time;inspection methods;product quality;quality
	management system;software development tool;software organizations;Customer
	satisfaction;Organizations;Programming;Quality assurance;Software
	quality;agile software development;quality assurance (QA);scrum}
}

@INPROCEEDINGS{6479981,
  author = {Bordetsky, A. and Dolk, D.},
  title = {A Conceptual Model for Network Decision Support Systems},
  booktitle = {System Sciences (HICSS), 2013 46th Hawaii International Conference
	on},
  year = {2013},
  pages = {1212-1221},
  abstract = {We introduce the concept of a network DSS (NWDSS) consisting of fluid,
	heterogeneous nodes of human and machine agents, connected by wireless
	technology, which may enter and leave the network at unpredictable
	times, yet must also cooperate in decision-making activities. We
	describe distinguishing properties of the NWDSS and propose a 3-tier
	conceptual model comprised of digital infrastructure, transactive
	memory systems and emergent collaborative decision-making. We suggest
	a decision loop of Sense-Analyze-Adapt-Memory leveraging TMS as a
	starting point for addressing the agile collaborative requirements
	of emergent decision-making. Several examples of innovative NWDSS
	services are presented from Naval Postgraduate School field experiments.},
  db = {ieeexplore2},
  doi = {10.1109/HICSS.2013.32},
  issn = {1530-1605},
  keywords = {computer networks;decision support systems;formal specification;groupware;software
	prototyping;3-tier conceptual model;agile collaborative requirements;collaborative
	decision-making;decision-making activities;digital infrastructure;innovative
	NWDSS services;naval postgraduate school field experiments;network
	decision support systems;sense-analyze-adapt-memory leveraging;transactive
	memory systems;wireless technology;Collaboration;Computational modeling;Decision
	making;Decision support systems;Knowledge engineering;Mobile communication;Sensors}
}

@INPROCEEDINGS{6195174,
  author = {Bustard, D.},
  title = {Beyond Mainstream Adoption: From Agile Software Development to Agile
	Organizational Change},
  booktitle = {Engineering of Computer Based Systems (ECBS), 2012 IEEE 19th International
	Conference and Workshops on},
  year = {2012},
  pages = {90-97},
  abstract = {The agile paradigm is now a mainstream approach to software development,
	with Scrum emerging as the dominant methodology in the field. The
	rapid diffusion of the approach is an indicator of its current value
	to organizations but further gains seem possible. One major step
	would be the use of the agile approach in all organizational activity.
	This opportunity has always been part of the Scrum philosophy but
	few have attempted to put it into practice so far. The purpose of
	this paper is to consider what is involved, proposing a hierarchical
	Scrum model to make it suitable for such wider use. The proposal
	draws on established ideas from both Soft Systems Methodology (SSM)
	and Deming's Plan-Do-Study-Act (PDSA) cycle. The new model also has
	the potential to enhance the basic agile development process for
	software.},
  db = {ieeexplore2},
  doi = {10.1109/ECBS.2012.18},
  keywords = {Plan-Do-Study-Act cycle;Scrum;Soft Systems Methodology;organizational
	learning}
}

@INPROCEEDINGS{6189431,
  author = {Cagle, R.},
  title = {Enterprise Architecture facilitates adopting Agile development methodologies
	into a DoD acquisition},
  booktitle = {Systems Conference (SysCon), 2012 IEEE International},
  year = {2012},
  pages = {1-5},
  abstract = {The role of the Contract Data Requirements List [CDRL] in the DoD
	acquisition process is to provide the authoritative list of required
	artifacts for a given procurement. It forms an appendix to the acquisition
	contract, and includes delivery information and a schedule for each,
	typically mapped to milestone events such as the Preliminary Design
	Review [PDR] or the Critical Design Review [CDR] in the DoD Acquisition
	Waterfall Lifecycle. A number of CDRLs were proposed for the Joint
	Mission Planning Systems [JMPS] Framework, including a number of
	artifacts specific to the architecture and design of the application.
	Alignment with the DoD Acquisition Waterfall Lifecycle milestone
	events posed significant challenges to the program, given the contractor's
	proposed Agile development methodology. Many of these architectural
	and design documents carried a delivery-schedule expectation that
	placed them in conflict with the best practices and anticipated benefits
	of Agile, including the principle of “design only as much as is necessary
	to build features”. Using the Enterprise Architect tool, the contractor
	was able to produce a “living design” used daily by the development
	team, including architects, designers, developers, integrators, and
	testers. The tool provided capabilities that facilitated templates
	for various CDRLs, including the Systems Architecture Description
	[SAD], the Software Design Description [SDD], and the Interface Design
	Description [IDD], allowing on-demand generation of snapshots of
	the architecture and detailed design as it evolved, providing the
	appropriate level of documentation of the as-built system. The result
	better addressed the contractual intent of the CDRLs, to provide
	subsequent platform developers an accurate and up-to-date understanding
	of the architecture and design of the JMPS Framework, while better
	preserving the integrity of the development of the Enterprise Architecture
	within the selected Zachman Fram- work, and in the context of the
	contractor's Agile methodology.},
  db = {ieeexplore2},
  doi = {10.1109/SysCon.2012.6189431},
  keywords = {data acquisition;military computing;scheduling;software architecture;software
	prototyping;CDR;CDRL;DoD acquisition process;DoD acquisition waterfall
	lifecycle;IDD;JMPS;PDR;SAD;SDD;Zachman framework;acquisition contract;agile
	development methodologies;contract data requirements list;critical
	design review;delivery information;delivery-schedule expectation;enterprise
	architect tool;enterprise architecture;interface design description;joint
	mission planning systems;living design;preliminary design review;software
	design description;systems architecture description;Computer architecture;Contracts;Schedules;Testing;US
	Department of Defense}
}

@INPROCEEDINGS{6525528,
  author = {Carvalho, F. and Azevedo, L.G.},
  title = {Service Agile Development Using XP},
  booktitle = {Service Oriented System Engineering (SOSE), 2013 IEEE 7th International
	Symposium on},
  year = {2013},
  pages = {254-259},
  abstract = {System development using a Service-Oriented Architecture approach
	encompasses new roles and tasks as opposed to traditional development.
	It brings new challenges in different aspects, such as: reuse, flexibility,
	stakeholders' involvement, business understanding. Considering methods
	for system development, those aspects are handled by agile methods.
	However, there is no consensus on how to use agile methods in service-oriented
	system development. Agile methods can be used in different phases
	of a software development lifecycle, such as: project management,
	modeling, software construction, software testing. Extreme Programming
	(XP) is one of the methods more closely related to the construction
	phase. XP is widely adopted in the industry and offers practices
	that can be applied to several business contexts. The goal of this
	work is to propose guidelines and best practices towards service
	development, focused on the construction phase, in an SOA environment
	using XP. It goes towards the identification of the shared concerns
	and the gaps between SOA and XP practices and, additionally, presents
	open issues and main challenges to be considered when incrementally
	constructing service solutions with continuous feedback and flexibility
	to rapidly develop services that meet changing business requirements.},
  db = {ieeexplore2},
  doi = {10.1109/SOSE.2013.25},
  keywords = {program testing;service-oriented architecture;software prototyping;Extreme
	Programming;XP;project management;service agile development;service-oriented
	architecture;service-oriented system development;software construction;software
	development lifecycle;software testing;Extreme Programming;SOA;Service
	Development Methods}
}

@INPROCEEDINGS{6298110,
  author = {Casady, C.},
  title = {Applying Agile through Total Immersion -- Going All-In with Agile
	at PH Tech},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {179-184},
  abstract = {This paper describes a multi-year journey of a growing small business
	and the transition from the blissful ignorance of cowboy-coding through
	the misery and despair of a sinking, dysfunctional organization,
	and on to the satisfaction and exhilaration that comes with a high-functioning
	agile team. This writer wishes that you, dear reader, learns from
	the mistakes in sections II through IV, and starts their team at
	section V.},
  db = {ieeexplore2},
  doi = {10.1109/Agile.2012.26},
  keywords = {software prototyping;agile immersion;agile software development;cowboy
	coding;dysfunctional organization;extreme programming;high-functioning
	agile team;team development;agile;agile immersion;extreme programming;software
	development;team development}
}

@INPROCEEDINGS{6269639,
  author = {Wanghu Chen and Jing Li},
  title = {Agile Services Oriented Virtualization of Web Services},
  booktitle = {Theoretical Aspects of Software Engineering (TASE), 2012 Sixth International
	Symposium on},
  year = {2012},
  pages = {153-160},
  abstract = {Problem Solving Environments (PSEs) for Virtual Organizations (VOs)
	are usually constructed on distributed resources. Thus, Web services
	are widely adopted to deliver resources in PSEs. To enable users
	to handle services efficiently, a mechanism of service virtualization
	to provide a relatively stable service view for users is proposed
	based on Agile Services. The algorithm of matchmaking is discussed
	to make Agile Services executable by binding Web services with expected
	functions to them. The approach to service filtering is also introduced
	to make service matchmaking more efficient. Experiments and simulations
	indicate that the approach proposed in the paper can shield the diversities
	of Web services to users and be adaptive to the variability of requirements,
	and eventually improve the efficiency for users to handle Web services.},
  db = {ieeexplore2},
  doi = {10.1109/TASE.2012.37},
  keywords = {Web services;organisational aspects;service-oriented architecture;virtual
	enterprises;PSE;VO;Web services;agile services oriented virtualization;problem
	solving environments;service filtering;service matchmaking;service
	virtualization;virtual organizations;Connectors;Educational institutions;Ontologies;Organizations;Semantics;Vectors;Web
	services;Agile Service;Service Filtering;Service Matchmaking;Service
	Virtualization}
}

@INPROCEEDINGS{6341616,
  author = {Collins, E. and Dias-Neto, A. and de Lucena, V.F.},
  title = {Strategies for Agile Software Testing Automation: An Industrial Experience},
  booktitle = {Computer Software and Applications Conference Workshops (COMPSACW),
	2012 IEEE 36th Annual},
  year = {2012},
  pages = {440-445},
  abstract = {Testing Automation has been growing in software engineering. Many
	organizations are investing in automated testing in order to prevent
	defects and increase testing effectiveness during software development.
	In agile methodologies, this task is considered an important activity,
	considered the key of the agile testing. This paper presents three
	testing automation strategies applied to three different software
	projects adopting Scrum agile methodology. The results indicated
	positive agile practices to be considered when adopting testing automation
	strategy, such as: team collaboration, task distribution, testing
	tools, knowledge managements. The challenges, results, and lessons
	learned from this experience are also discussed.},
  db = {ieeexplore2},
  doi = {10.1109/COMPSACW.2012.84},
  keywords = {program testing;software prototyping;Scrum agile methodology;agile
	software testing automation;industrial experience;knowledge managements;software
	development;software engineering;software projects;task distribution;team
	collaboration;testing tools;Automation;Business;Collaboration;Graphical
	user interfaces;Manuals;Software;Testing;agile testing;open source
	testing tools;software testing;testing automation}
}

@INPROCEEDINGS{6314577,
  author = {Cooper, K.M.L. and Longstreet, C.S.},
  title = {Towards model-driven game engineering for serious educational games:
	Tailored use cases for game requirements},
  booktitle = {Computer Games (CGAMES), 2012 17th International Conference on},
  year = {2012},
  pages = {208-212},
  abstract = {Educational games are essential in the next generation of e-learning
	tools because games stress visual and experiential learning; they
	require active involvement by student players while providing almost
	instantaneous feedback. The long term goal of this research project
	is to define a model-driven game engineering approach, SimSYS, that
	supports the rapid development of serious educational games across
	diverse educational topics. Here, we present our approach for modeling
	serious educational games, using tailored UML use cases (visual UML
	diagram and detailed tabular specifications). The tailored approach
	integrates features of storyboarding techniques (well-established
	in the game community), with use case modeling (well-established
	in the software engineering community). The use case model can be
	transformed into a formal XML representation that can be loaded by
	the SimSYS Game Play Engine. Part of a game on agile software development
	process is used for illustration.},
  db = {ieeexplore2},
  doi = {10.1109/CGames.2012.6314577},
  keywords = {XML;computer aided instruction;computer games;software prototyping;SimSYS
	game play engine;agile software development process;e-learning tools;experiential
	learning;formal XML representation;game requirements;games stress
	visual;model-driven game engineering approach;serious educational
	games;storyboarding techniques;tabular specifications;tailored UML
	use cases;visual UML diagram;Computational modeling;Games;Software;Software
	engineering;Unified modeling language;Visualization;XML;model-driven
	game engineering;requirements engineering;serious educational games;storyboards;use
	cases}
}

@INPROCEEDINGS{6187435,
  author = {Cornford, S. and Shishko, R. and Wall, S. and Cole, B. and Jenkins,
	S. and Rouquette, N. and Dubos, G. and Ryan, T. and Zarifian, P.
	and Durham, B.},
  title = {Evaluating a Fractionated Spacecraft system: A business case tool
	for DARPA's F6 program},
  booktitle = {Aerospace Conference, 2012 IEEE},
  year = {2012},
  pages = {1-20},
  abstract = {The Defense Advanced Research Projects Agency (DARPA) has recently
	begun an effort to further refine its Fractionated Spacecraft vision.
	This vision (called the "F6" program) seeks to explore distributed
	spacecraft architectures capable of performing complex functions
	similar to current monolithic spacecrafts. However, the ability of
	fractionated systems to work separately would provide significant
	benefits not achievable by monolithic systems. The question of interest
	to this study was "Can these benefits be quantified and evaluated
	in a meaningful fashion in order to compare them to monolithic architectures?"
	Rather than narrowing the approach to one or two concepts, the strategy
	was to expand the decision space in order to generate and evaluate
	a variety of alternatives under different scenarios and design choices.
	The stimuli were specifically selected to capture many issues not
	included in such studies such as technology obsolescence, funding
	profile changes, equipment failure scenarios, and even changes to
	mission objectives during the mission. Each stimulus has a variety
	of decision options or responses which a manager can exercise including
	delay, cancellation, acceleration of a development, or even new developments.
	It is argued that the very nature of fractionation will result in
	systems far more agile to external (and internal) stimuli, but this
	has never been shown explicitly. This study explores the use of Real
	Options in conjunction with traditional Net Present Value techniques
	to quantify the desirability of alternative candidate designs in
	terms of their adaptability and survivability. Our approach to evaluating
	the business case for each use case was to explicitly model both
	the implementation and operation phases for the life cycle of a fractionated
	cluster. The models were integrated into Phoenix Integration's ModelCenter®
	framework and used to generate Implementation Value Metrics (IVMs)
	and Operational Value Metrics (OVMs) associated w- th the use cases
	under evaluation. A number of models were developed to support these
	evaluations using Excel, Matlab, and Arena® (a commercial discrete-event
	simulation software product). The Model-Based Systems Engineering
	(MBSE) approach used in this study yielded transformations between
	high-level frameworks (OWL and SysML) and the models used to generate
	the data we needed for the evaluation. This rule-based transformation
	process will be critical for exploring the large decision trade spaces
	in a reasonable amount of time. This paper presents the results of
	the business case analyses; the underlying OVM's and IVM's, the approaches
	used to model the problem, explore the tradespace, refine the exploration,
	and generate results. We also discuss possible directions for future
	work. Specifically, it should be noted that while the approach described
	herein is being developed for, and funded by, DARPA, it has general
	applicability to a much wider variety of applications.},
  db = {ieeexplore2},
  doi = {10.1109/AERO.2012.6187435},
  issn = {1095-323X},
  keywords = {aerospace instrumentation;mathematics computing;space vehicles;Arena;DARPA's
	F6 program;Defense Advanced Research Projects Agency;Excel;Matlab;Phoenix
	Integration's Model Center;business case tool;distributed spacecraft
	architectures;fractionated spacecraft system;implementation value
	metrics;model-based systems engineering;monolithic architectures;monolithic
	spacecrafts;net present value;operational value metrics;technology
	obsolescence;Business;Computer architecture;Fractionation;Mathematical
	model;Modeling;Space vehicles;Switches}
}

@INPROCEEDINGS{6479955,
  author = {Demirkan, Haluk and Goul, Michael},
  title = {Introduction to the Cloud Service Science and Systems Minitrack},
  booktitle = {System Sciences (HICSS), 2013 46th Hawaii International Conference
	on},
  year = {2013},
  pages = {1015-1015},
  abstract = {Agility and innovation are essential for survival in today's business
	world. Mergers and acquisitions, new regulations, rapidly changing
	technology, increasing competition and heightened customer expectations
	mean companies must become more responsive to changing demands, i.e.,
	become more agile. This move to agility through innovation has been
	referred to as the "innovation-services-based economy." If properly
	applied, 'service oriented' concepts and "service systems" can support
	the agility organizations are seeking.},
  db = {ieeexplore2},
  doi = {10.1109/HICSS.2013.336},
  issn = {1530-1605},
  keywords = {Cloud computing;Computational modeling;Organizations;Software as a
	service;Standards organizations;Technological innovation;Cloud Computing;Service
	Science;Service Systems}
}

@INPROCEEDINGS{6225500,
  author = {Di Nitto, E. and Meilander, D. and Gorlatch, S. and Metzger, A. and
	Psaier, H. and Dustdar, S. and Razavian, M. and Tamburri, D.A. and
	Lago, P.},
  title = {Research challenges on engineering service-oriented applications},
  booktitle = {Software Services and Systems Research - Results and Challenges (S-Cube),
	2012 Workshop on European},
  year = {2012},
  pages = {14-20},
  abstract = {This paper focuses on providing an overview of the research challenges
	that have been identified toward the end of the S-Cube network in
	the area of service engineering. These challenges concern the need
	for agility and dynamicity of the development process for service-based
	applications, the importance of focusing on proper approaches to
	support migration of legacy application into service-based applications
	and the role of humans and of teams of humans in service-based applications.},
  db = {ieeexplore2},
  doi = {10.1109/S-Cube.2012.6225500},
  keywords = {service-oriented architecture;software maintenance;software prototyping;S-Cube
	network;SOA;agile service network;agility;dynamicity;legacy application;service
	engineering;service-based application;service-oriented application;service-oriented
	architecture;software evolution;support migration;Business;Context;Humans;Monitoring;Real
	time systems;Service oriented architecture;Agile Service Networks;Engineering
	of service-based applications;agile approaches;evolution;human-provided
	services;real-time applications;self-adaptation}
}

@INPROCEEDINGS{6149063,
  author = {Dolk, D. and Anderson, T. and Busalacchi, F. and Tinsley, D.},
  title = {GINA: System Interoperability for Enabling Smart Mobile System Services
	in Network Decision Support Systems},
  booktitle = {System Science (HICSS), 2012 45th Hawaii International Conference
	on},
  year = {2012},
  pages = {1472-1481},
  abstract = {Smart mobile systems deployed in support of organizational decision-making
	objectives lead to a new, highly dynamic form of decision support
	systems (DSS) called network-DSS (NWDSS). We describe the salient
	properties of an NWDSS, emphasizing the central role of sensors and
	emergent knowledge processes (EKP) in such an environment. From a
	system design and development perspective, the defining property
	of sensor-driven EKP is that requirements cannot be identified in
	advance but rather emerge from the environment. This, in turn, demands
	an agile system development methodology which we argue must be built
	upon a flexible semantic system interoperability approach. We present
	the GINA (Global Information Network Architecture), a reflexive,
	executable, component-based, platform agnostic, model-driven architecture,
	which provides the necessary data, information and knowledge interoperability
	to enable services for smart mobile systems. We show how this approach
	works in a specific smart mobile system environment called Dragon
	Pulse.},
  db = {ieeexplore2},
  doi = {10.1109/HICSS.2012.293},
  issn = {1530-1605},
  keywords = {decision making;decision support systems;mobile computing;object-oriented
	programming;open systems;organisational aspects;software architecture;Dragon
	Pulse;GINA;NWDSS;agile system development methodology;component-based
	architecture;defining property;development perspective;emergent knowledge
	processes;executable architecture;flexible semantic system interoperability
	approach;global information network architecture;knowledge interoperability;model-driven
	architecture;network decision support systems;network-DSS;organizational
	decision-making objectives;platform agnostic architecture;reflexive
	architecture;salient property;sensor-driven EKP;smart mobile system
	environment;smart mobile system services;smart mobile systems;system
	design;Computer architecture;Data models;Decision making;Decision
	support systems;Force;Mobile communication;Mobile computing;Network
	DSS;generative network architecture;mobile services;model-based architecture;semantic
	interoperability}
}

@INPROCEEDINGS{6480431,
  author = {Downey, Scott and Sutherland, Jeff},
  title = {Scrum Metrics for Hyperproductive Teams: How They Fly like Fighter
	Aircraft},
  booktitle = {System Sciences (HICSS), 2013 46th Hawaii International Conference
	on},
  year = {2013},
  pages = {4870-4878},
  abstract = {Scrum Teams use lightweight tools like Story Points, the Burn down
	chart, and Team Velocity. While essential, these tools alone provide
	insufficient information to maintain a high energy state that yields
	Hyper productivity. More data is required, but data collection itself
	can slow Teams. This effect must be avoided when productivity is
	the primary marker of success. Here we describe nine metrics that
	can develop and sustain Hyper productive Teams -- Velocity, Work
	Capacity, Focus Factor, Percentage of Adopted Work, Percentage of
	Found Work, Accuracy of Estimation, Accuracy of Forecast, Targeted
	Value Increase, Success at Scale, and the Win/Loss Record of the
	Team. The unique contribution of this paper is to demonstrate how
	a light touch and lightweight strategy can be used to compare Teams
	with different Story Point reference scales.},
  db = {ieeexplore2},
  doi = {10.1109/HICSS.2013.471},
  issn = {1530-1605},
  keywords = {Accuracy;Estimation;Measurement;MySpace;Planning;Productivity;Software;Agile;Hyperproductive;Hyperproductivity;Metrics;Performance;Scrum;Story
	Points;Velocity}
}

@INPROCEEDINGS{6240734,
  author = {Duka, D.},
  title = {Agile experiences in software development},
  booktitle = {MIPRO, 2012 Proceedings of the 35th International Convention},
  year = {2012},
  pages = {692-697},
  abstract = {From the traditional waterfall model to streamlined ways of software
	development and to Agile, is a long journey for each organization.
	In that journey, transition into Agile way of working means a significant
	change. For any change to happen there is a significant involvement
	expected from the people, more so in case of Agile, as it involves
	individuals, interactions and collaborations over different processes.
	This paper deals with different Agile experiences. It proposes when
	to use Agile and what are the advantages of such approach. It also
	describes agility criteria helping to determine if the Agile is followed
	indeed. The special highlight is put on people and teams investigating
	their size and impact of geographical distribution on project success.
	Some reflections after using Agile in our own organization are also
	presented.},
  db = {ieeexplore2},
  keywords = {software prototyping;agile experiences;agility criteria;geographical
	distribution impact;organization;software development;waterfall model;Collaboration;Documentation;Inspection;Organizations;Programming;Software;Testing}
}

@INPROCEEDINGS{6223017,
  author = {Dullemond, K. and van Gameren, B. and Van Solingen, R.},
  title = {Supporting distributed software engineering in a fully distributed
	organization},
  booktitle = {Cooperative and Human Aspects of Software Engineering (CHASE), 2012
	5th International Workshop on},
  year = {2012},
  pages = {30-36},
  abstract = {Software engineering is increasingly carried out in distributed settings.
	Software engineers are becoming more nomadic in carrying out their
	work, working from the customer location, the headquarters of their
	own company, their home, or sometimes even from their holiday locations.
	Technological support is needed to overcome the negative impacts
	of distance that are introduced by this trend. The central theme
	in this paper for supporting dislocated software engineers lies in
	increasing their awareness level to a level similar to (or even exceeding)
	what they experience in a co-located setting. In this paper we present
	the context in which we are bootstrapping a custom fit environment
	to support a team of fully dislocated software engineers and the
	incremental process we use. By working in this fashion we are discovering
	the requirements to support fully distributed teams while at the
	same time providing our setting with working solutions to help them
	with their day to day challenges. Finally, this continuous practical
	use also provides us with empirical data to validate the increase
	in awareness levels of dislocated software engineers and helps us
	in pinpointing important open research challenges.},
  db = {ieeexplore2},
  doi = {10.1109/CHASE.2012.6223017},
  keywords = {distributed processing;groupware;software engineering;bootstrapping;custom
	fit environment;customer location;distributed software engineering;fully
	distributed organization;incremental process;negative impacts;technological
	support;Companies;Context;Planning;Programming;Software;Software
	engineering;Agile software development;Awareness;Computer-supported
	collaborative work;Distributed software development;Tools and environments}
}

@ARTICLE{6276296,
  author = {Ebert, Christof and Abrahamsson, Pekka and Oza, Nilay},
  title = {Lean Software Development},
  journal = {Software, IEEE},
  year = {2012},
  volume = {29},
  pages = {22-25},
  number = {5},
  abstract = {This special issue addresses lean software development. What principles
	deliver value, and how are they introduced to best manage change?},
  db = {ieeexplore2},
  doi = {10.1109/MS.2012.116},
  issn = {0740-7459},
  keywords = {Agile manufacturing;Product life cycle management;Software development;Software
	engineering;Special issues and sections;agile;lean software development;life
	cycle}
}

@INPROCEEDINGS{6228989,
  author = {Entin, V. and Winder, M. and Bo Zhang and Christmann, S.},
  title = {Introducing model-based testing in an industrial scrum project},
  booktitle = {Automation of Software Test (AST), 2012 7th International Workshop
	on},
  year = {2012},
  pages = {43-49},
  abstract = {Various approaches for the automated test case generation in the area
	of graphical user interface (GUI) testing have emerged in recent
	years. A notable trend is model-based testing (MBT). In this experience
	report we shed light on the challenges faced during the introduction
	and every day use of a concrete technique which leverages MBT in
	a Scrum project along with practical solutions found. Such topics
	as process of model definition and maintenance for the purposes of
	regression and risk-based testing of GUIs, suitable test case derivation
	algorithms, human factors as well as choice of appropriate architecture
	are discussed.},
  db = {ieeexplore2},
  doi = {10.1109/IWAST.2012.6228989},
  keywords = {graphical user interfaces;object-oriented programming;program testing;software
	prototyping;GUI testing;automated test case generation;graphical
	user interface;industrial Scrum project;model-based testing;Adaptation
	models;Concrete;Graphical user interfaces;Maintenance engineering;Software;Testing;Unified
	modeling language;SCRUM;maintainability;model-based testing;regression
	testing;risk-based testing}
}

@INPROCEEDINGS{6427226,
  author = {Escobar-Sarmiento, V. and Linares-Vasquez, M.},
  title = {A model for measuring agility in small and medium software development
	enterprises},
  booktitle = {Informatica (CLEI), 2012 XXXVIII Conferencia Latinoamericana En},
  year = {2012},
  pages = {1-10},
  abstract = {The worldwide acceptance of software as an important aspect in daily
	life, and the continued growth of the software development industry,
	have influenced the creation of new companies (small and medium size)
	during the last decade. The rapid pace with which the companies are
	founded makes them to experiment some drawbacks such as informality
	in the software development process, and technological deficiencies.
	Software development companies have found in agile methodologies
	a possible solution for improving their practices and processes.
	However, transition to agile methods is not a simple task, and the
	transition process should be assessed in order to know whether it
	is helping the company to become agile. Thus, in this paper we propose
	a model which could be used for measuring companies agility in four
	different levels: project, project management, workteam, and agile
	workspace coverage. Future work is related to using this model in
	small and medium development companies.},
  db = {ieeexplore2},
  doi = {10.1109/CLEI.2012.6427226},
  keywords = {project management;small-to-medium enterprises;software development
	management;software prototyping;agile methodologies;agile workspace
	coverage;agility measurement model;medium software development enterprises;project
	management;small software development enterprises;software development
	companies;software development industry;software development process;technological
	deficiencies;transition process;workteam;worldwide software acceptance;Companies;Documentation;Personnel;Planning;Software;Agility;Assessment;SMEs;Software
	development;methodologies}
}

@INPROCEEDINGS{6229785,
  author = {Filieri, A. and Ghezzi, C.},
  title = {Further steps towards efficient runtime verification: Handling probabilistic
	cost models},
  booktitle = {Software Engineering: Rigorous and Agile Approaches (FormSERA), 2012
	Formal Methods in},
  year = {2012},
  pages = {2-8},
  abstract = {We consider high-level models that specify system behaviors probabilistically
	and support the specification of cost attributes. Specifically, we
	focus on Discrete Time Markov Reward Models (D-MRMs), i.e. state
	machines where probabilities can be associated with transitions and
	rewards (costs) can be associated with states and transitions. Through
	probabilities we model assumptions on the behavior of environment
	in which an application is embedded. Rewards can instead model the
	cost assumptions involved in the system's operations. A system is
	designed to satisfy the requirements, under the given assumptions.
	Design-time assumptions, however, can turn out to be invalid at runtime,
	and therefore it is necessary to verify whether changes may lead
	to requirements violations. If they do, it is necessary to adapt
	the behavior in a self-healing manner to continue to satisfy the
	requirements. We have previously presented an approach to support
	efficient runtime probabilistic model checking of DTMCs for properties
	expressed in PCTL. In this paper we extend the approach to D-MRMs
	and reward properties. The benefits of the approach are justified
	both theoretically and empirically on significant test cases.},
  db = {ieeexplore2},
  doi = {10.1109/FormSERA.2012.6229785},
  keywords = {Markov processes;formal specification;formal verification;D-MRM;cost
	attributes;discrete time Markov reward models;probabilistic cost
	models;requirements violations;runtime verification;specification;Complexity
	theory;Computational modeling;Equations;Markov processes;Mathematical
	model;Probabilistic logic;Runtime}
}

@INPROCEEDINGS{6212076,
  author = {Chunming Gao and Hembroff, G.},
  title = {Implications of modified waterfall model to the roles and education
	of health IT professionals},
  booktitle = {Network Operations and Management Symposium (NOMS), 2012 IEEE},
  year = {2012},
  pages = {1368-1369},
  abstract = {Electronic Health Records (EHRs) are believed to have the potential
	to enhance efficiency and provide better health care. However, the
	benefits could be easily compromised if EHRs are not used appropriately.
	This paper applies a modified waterfall life cycle model to evaluate
	the roles of health IT professionals in the adoption and management
	of EHRs. We then present our development of a Masters' program in
	Medical Informatics for the education of health IT professionals.
	We conclude that health IT professionals serve key roles in addressing
	the problems and concerns and help fulfill envision of EHRs.},
  db = {ieeexplore2},
  doi = {10.1109/NOMS.2012.6212076},
  issn = {1542-1201},
  keywords = {health care;medical information systems;EHR adoption;EHR management;electronic
	health record;health IT professional;health care;information technology;medical
	informatics program;modified waterfall life cycle model;Education;Maintenance
	engineering;Medical services;Organizations;Privacy;Safety;Software}
}

@INPROCEEDINGS{6229788,
  author = {Gonzalez, C.A. and Buttner, F. and Clariso, R. and Cabot, J.},
  title = {EMFtoCSP: A tool for the lightweight verification of EMF models},
  booktitle = {Software Engineering: Rigorous and Agile Approaches (FormSERA), 2012
	Formal Methods in},
  year = {2012},
  pages = {44-50},
  abstract = {The increasing popularity of MDE results in the creation of larger
	models and model transformations, hence converting the specification
	of MDE artefacts in an error-prone task. Therefore, mechanisms to
	ensure quality and absence of errors in models are needed to assure
	the reliability of the MDE-based development process. Formal methods
	have proven their worth in the verification of software and hardware
	systems. However, the adoption of formal methods as a valid alternative
	to ensure model correctness is compromised for the inner complexity
	of the problem. To circumvent this complexity, it is common to impose
	limitations such as reducing the type of constructs that can appear
	in the model, or turning the verification process from automatic
	into user assisted. Since we consider these limitations to be counterproductive
	for the adoption of formal methods, in this paper we present EMFtoCSP,
	a new tool for the fully automatic, decidable and expressive verification
	of EMF models that uses constraint logic programming as the underlying
	formalism.},
  db = {ieeexplore2},
  doi = {10.1109/FormSERA.2012.6229788},
  keywords = {computational complexity;constraint handling;formal verification;software
	reliability;EMFtoCSP;MDE artefacts specification;MDE-based development
	process reliability;automatic verification process;constraint logic
	programming;error-prone task;formal methods;hardware verification;lightweight
	EMF models verification;model transformations;problem complexity;software
	verification;user assisted verification process;Analytical models;Context;Programming;Software;Software
	reliability;Unified modeling language}
}

@INPROCEEDINGS{6298109,
  author = {Green, P.},
  title = {Adobe Premiere Pro Scrum Adoption: How an Agile Approach Enabled
	Success in a Hyper-competitive Landscape},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {172-178},
  abstract = {Adobe Premiere Pro began an agile adoption in 2008, and has had gains
	in product quality, team work-life balance, and market fitness and
	responsiveness. This paper describes how an agile mindset has helped
	Premiere Pro make significant gains in market share and perception,
	improved quality, and created a sustainable pace of development for
	team members.},
  db = {ieeexplore2},
  doi = {10.1109/Agile.2012.28},
  keywords = {software development management;software prototyping;Adobe Premiere
	Pro scrum adoption;agile adoption;agile approach;hyper-competitive
	landscape;market fitness;market perception;market responsiveness;market
	share;product quality;team work-life balance;Buildings;Games;Media;Product
	design;Quality assessment;Team working;Testing;Adobe;Agile Adoption;Experience
	Report;Peter Green;Scrum}
}

@INPROCEEDINGS{6480427,
  author = {Greening, Daniel R.},
  title = {Release Duration and Enterprise Agility},
  booktitle = {System Sciences (HICSS), 2013 46th Hawaii International Conference
	on},
  year = {2013},
  pages = {4835-4841},
  abstract = {Short release duration -- the time from starting development until
	it delivers measurable value (i.e., paying customers adopt an upgrade)
	-- is an implied goal of agile methods. Release duration incorporates
	the expensive parts of the value chain: build, test, deploy and sell
	(but not exploratory design, for example). Release duration correlates
	with technical debt. Attempting to reduce release duration may help
	drive agile behavior through a company. Finance departments often
	collect release duration, helping a company assess its agility. Citrix
	Online illustrates how process methodology, development group size
	and release duration relate. Its adoption of Scrum and Enterprise
	Scrum drove release duration down from a peak of 41 months to less
	than 4, shorter than it had as a small startup. Its market share
	rose during the same period. Data from another company, Patient Keeper,
	also seems to indicate that short release durations correlate with
	more profitable outcomes.},
  db = {ieeexplore2},
  doi = {10.1109/HICSS.2013.463},
  issn = {1530-1605},
  keywords = {Companies;Computer bugs;Finance;Maintenance engineering;Manuals;Software;Testing;Agile
	Practices;Capitalization;Depreciation;Engineering Management;Enterprise
	Scrum;Release Duration;Scrum;Technical Debt}
}

@INPROCEEDINGS{6189437,
  author = {Gregorio, D.D.},
  title = {How the Business Analyst supports and encourages collaboration on
	agile projects},
  booktitle = {Systems Conference (SysCon), 2012 IEEE International},
  year = {2012},
  pages = {1-4},
  abstract = {Agile teams need the Business Analyst (BA) to clearly define and communicate
	the detailed user stories to ensure a successful product. MITRE's
	Corporate IT Systems Engineering department supports software development
	activities which recently adopted an agile methodology. Unlike the
	detailed requirements documentation of more traditional, waterfall-based
	projects, we have found the streamlined “user stories” inadequate
	for developers or testers. Our BA experiences with eliciting user
	story details and maintaining the backlog for sprint planning are
	a critical component to agile development. BA activities include
	grooming the backlog, documenting user stories with detailed contracts,
	and performing user story verification through testing. This paper
	will review the techniques we have used during agile projects to
	manage the sprint cycle, including templates for user story management.
	Capturing artifacts from other agile projects and documenting recommended
	agile process guidelines can help projects be successful through
	reuse and collaboration. Many agile projects generate artifacts that
	are lost or are created for the benefit of only their project and
	discarded when through. Agile encourages lean documentation in order
	to maximize agility. We established a repository using an internal
	website where we documented corporte IT processes and share agile
	templates and samples. This repository includes samples of sprint
	schedules, backlog lists, burn-down charts, retrospective items,
	and user stories. The corporate IT process recommends agile but also
	includes traditional waterfall guidance and correlates the two different
	approaches. All projects, whether they are agile or otherwise, need
	similar deliverables, including project schedules and project plans.
	In correlating agile considerations to a waterfall approach, we hope
	to ease the transition to agile. The process guidance and repository
	site promotes collaboration, reuse, and review among agile pro- ects
	within the organization.},
  db = {ieeexplore2},
  doi = {10.1109/SysCon.2012.6189437},
  keywords = {Web sites;organisational aspects;project management;software maintenance;software
	management;software prototyping;MITRE Corporate IT Systems Engineering
	department;agile development;agile methodology;agile projects;agile
	samples;agile templates;backlog lists;backlog maintenance;burn-down
	charts;business analyst;corporate IT processes;internal Web site;lean
	documentation;project plans;project schedules;retrospective items;software
	development activities;sprint cycle management;sprint planning;sprint
	schedules;user story detail elicitation;user story management;user
	story verification;waterfall-based projects;Business;Collaboration;Documentation;Schedules;Software;Testing;agile;business
	analyst;scrum;user stories}
}

@INPROCEEDINGS{6209176,
  author = {Hayata, T. and Jianchao Han and Beheshti, M.},
  title = {Facilitating Agile Software Development with Lean Architecture in
	the DCI Paradigm},
  booktitle = {Information Technology: New Generations (ITNG), 2012 Ninth International
	Conference on},
  year = {2012},
  pages = {343-348},
  abstract = {Both agile software development and lean architecture have been studied
	in the software engineering field. Combining these two approaches
	has also been investigated. However, the existing research and practices
	only present the principles but fail to develop a framework of the
	software development for practitioners to follow. In this paper,
	a framework about how naïve agile practices could be fulfilled by
	introducing "lean" practices under the DCI (Data-Context-Interaction)
	paradigm is proposed. Lean practice is an end-user-focused and value-centric
	system design. In the proposed framework, lean architecture is complementary
	to agile principles and disciplines and supports agile development.
	This paper is exploring the possibilities of how agile methods can
	restore its lost insights and possibly be reinforced by lean thinking.
	Meanwhile, it is also examined what lean can do "beyond" agile. A
	new lean approach to building domain architecture comes from Data-Context-Interaction
	(DCI) paradigm which facilitates to represent the domain architecture
	intuitively. DCI approach allows us to successfully decouple between
	domain and business-logic features and provides an approach for lean
	practitioners to design system architecture much closer to the real-world
	domain. It is claimed that the investment into lean and agile methodologies
	go hand in hand from organizational to technical aspects by tying
	up with lean concepts as the backbone for agile methods. How lean
	makes it right and how agile makes it fast with the DCI paradigm
	will be demonstrated with an example. The main contribution to the
	software development will be presented.},
  db = {ieeexplore2},
  doi = {10.1109/ITNG.2012.157},
  keywords = {software architecture;software prototyping;DCI paradigm;agile methodology;agile
	practice;agile principle;agile software development;business-logic
	feature;data-context-interaction paradigm;domain architecture;end-user-focused
	system design;lean architecture;lean methodology;lean practice;lean
	thinking;organizational aspect;software engineering field;system
	architecture;technical aspect;value-centric system design;Architecture;Business;Computer
	architecture;Context;Production;Programming;Software;Agile;Data-Context-Interaction
	(DCI);Lean;architectural design;domain architecture;software development}
}

@INPROCEEDINGS{6408631,
  author = {Hayhoe, G.F.},
  title = {ISO standards for software user documentation},
  booktitle = {Professional Communication Conference (IPCC), 2012 IEEE International},
  year = {2012},
  pages = {1-3},
  abstract = {During the past five years, a working group of the International Organization
	for Standardization (ISO) and the International Electrotechnical
	Commission (IEC) has produced the first-ever international standards
	for software user documentation. Four of these standards are directed
	at various audiences involved in producing user documentation (documentation
	designers and developers, managers, testers and reviewers, and acquirers
	and suppliers), while the fifth addresses the unique challenges of
	producing documentation in an agile software development environment.
	These standards have also been adopted by the IEEE Standards Association.
	This workshop will briefly describe the process used to develop the
	five standards and provide an overview of their content. Then it
	will examine in detail how managers can use these standards to ensure
	the quality of documentation their organizations produce and advance
	respect for documentation within the larger organization.},
  db = {ieeexplore2},
  doi = {10.1109/IPCC.2012.6408631},
  issn = {2158-091X},
  keywords = {IEC standards;ISO standards;document handling;software prototyping;IEC;IEEE
	standards association;ISO standards;agile software development environment;international
	electrotechnical commission;international organization for standardization;software
	user documentation;Documentation;IEC standards;ISO standards;Organizations;Software;Standards
	organizations;Software user documentation;standards;user assistance}
}

@INPROCEEDINGS{6225978,
  author = {Hebig, R. and Gabrysiak, G. and Giese, H.},
  title = {Towards patterns for MDE-related processes to detect and handle changeability
	risks},
  booktitle = {Software and System Process (ICSSP), 2012 International Conference
	on},
  year = {2012},
  pages = {38-47},
  abstract = {One of the multiple technical factors which affect changeability of
	software is model-driven engineering (MDE), where often several models
	and a multitude of manual as well as automated development activities
	have to be mastered to derive the final software product. The ability
	to change software with only reasonable costs, however, is of uppermost
	importance for the iterative and incremental development of software
	as well as agile development in general. Thus, the effective applicability
	of agile processes is influenced by the used MDE activities. However,
	there is currently no approach available to systematically detect
	and handle such risks to the changeability that result from the embedded
	MDE activities. In this paper we extend our beforehand-introduced
	process modeling approach by a notion of process pattern to capture
	typical situations that can be associated with risk or benefit with
	respect changeability. In addition, four candidates for the envisioned
	process patterns are presented in detail in the paper. Further, we
	developed strategies to handle changeability risks associated to
	these process patterns.},
  db = {ieeexplore2},
  doi = {10.1109/ICSSP.2012.6225978},
  keywords = {product development;risk management;software prototyping;software
	quality;MDE-related processes;agile development;beforehand-introduced
	process modeling approach;changeability risk detection;changeability
	risk handling;incremental software development;iterative software
	development;model-driven engineering;productivity improvement;quality
	improvement;software changeability;software product;Biological system
	modeling;Manuals;Pattern matching;Pins;Productivity;Software;Unified
	modeling language;Software development process;analysis;changeability;process
	pattern}
}

@INPROCEEDINGS{6229789,
  author = {Iliasov, A. and Romanovsky, A. and Laibinis, L. and Troubitsyna,
	E. and Latvala, T.},
  title = {Augmenting Event-B modelling with real-time verification},
  booktitle = {Software Engineering: Rigorous and Agile Approaches (FormSERA), 2012
	Formal Methods in},
  year = {2012},
  pages = {51-57},
  abstract = {A large number of dependable embedded systems have stringent real-time
	requirements imposed on them. Analysis of their real-time behaviour
	is usually conducted at the implementation level. However, it is
	desirable to obtain an evaluation of real-time properties early at
	the development cycle, i.e., at the modelling stage. In this paper
	we present an approach to augmenting Event-B modelling with verification
	of real-time properties in Uppaal. We show how to extract a process-based
	view from an Event-B model that together with introducing time constraints
	allows us to obtain a timed automata model - an input model of Uppaal.
	We illustrate the approach by development and verification of the
	data processing software of the BepiColombo Mission.},
  db = {ieeexplore2},
  doi = {10.1109/FormSERA.2012.6229789},
  keywords = {automata theory;embedded systems;program verification;BepiColombo
	mission;Event-B modelling;Uppaal;data processing software;dependable
	embedded systems;development cycle;real-time properties verification;real-time
	requirements;real-time verification;time constraints;timed automata
	model;Abstracts;Computational modeling;Concurrent computing;Production;Real
	time systems;Software;Synchronization}
}

@INPROCEEDINGS{6298086,
  author = {Isomursu, M. and Sirotkin, A. and Voltti, P. and Halonen, M.},
  title = {User Experience Design Goes Agile in Lean Transformation -- A Case
	Study},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {1-10},
  abstract = {This paper describes the results of a single-case case study, exploring
	the role of user experience (UX) work in agile software development.
	The case study company is a large multinational telecommunication
	company undergoing a lean transformation process. In this case, lean
	transformation includes the adoption of agile software development
	practices. Transformation to agile practices had taken place one
	year prior to the analysis. The analysis is based on documentation
	analysis and semi-structured interviews of seven software development
	professionals. The results show that there were difficulties integrating
	UX design and software engineering work in an agile and iterative
	manner. The transition process succeeded in shifting UX and related
	documentation to a central planning role. The roles of the UX designers
	in the teams were still under re-definition. There was also a clear
	need to establish new ways of collaboration between UX professionals
	and software designers.},
  db = {ieeexplore2},
  doi = {10.1109/Agile.2012.10},
  keywords = {software prototyping;user centred design;UX design;agile software
	development;central planning role;documentation analysis;iterative
	manner;large multinational telecommunication company;lean transformation
	process;semi-structured interviews;software engineering;user experience
	design;Companies;Documentation;Interviews;Planning;Usability;agile;lean
	transformation;user experience design}
}

@INPROCEEDINGS{6226998,
  author = {Janus, A. and Dumke, R. and Schmietendorf, A. and Jager, J.},
  title = {The 3C approach for Agile Quality Assurance},
  booktitle = {Emerging Trends in Software Metrics (WETSoM), 2012 3rd International
	Workshop on},
  year = {2012},
  pages = {9-13},
  abstract = {Continuous Integration is an Agile Practice for the continuous integration
	of new Source Code into the Code Base including the automated compile,
	build and running of tests. From traditional Quality Assurance we
	know Software Metrics as a very good approach to measure Software
	Quality. Combining both there is a promising approach to control
	and ensure the internal Software Quality. This paper introduces the
	3C Approach, which is an extension to the Agile Practice Continuous
	Integration: It adds Continuous Measurement and Continuous Improvement
	as subsequent Activities to CI and establishes Metric-based Quality-Gates
	for an Agile Quality Assurance. It was developed and proven in an
	Agile Maintenance and Evolution project for the Automotive Industry
	at T-Systems International - a large German ICT company. Within the
	project the approach was used for a (legacy) Java-based Web Application
	including the use of Open Source Tools from the Java Eco-System.
	But the approach is not limited to these technical boundaries as
	similar tools are available also for other technical platforms.},
  db = {ieeexplore2},
  doi = {10.1109/WETSoM.2012.6226998},
  keywords = {Internet;Java;automobile industry;continuous improvement;production
	engineering computing;public domain software;quality assurance;software
	maintenance;software metrics;software prototyping;software quality;software
	tools;3C approach;Agile Maintenance and Evolution project;Automotive
	Industry;German ICT company;Java ecosystem;Java-based Web application;T-Systems
	International;agile practice;agile quality assurance;code base;continuous
	improvement;continuous integration;continuous measurement;metric-based
	quality-gates;open source tools;software metrics;software quality
	measurement;source code;Context;Java;Programming;Quality assurance;Software
	measurement;Software quality;Agile;Continuous Integration;Empirical
	Case Study;Quality Assurance;Software Metrics}
}

@INPROCEEDINGS{6480018,
  author = {Jonker, D. and Langevin, S. and Bozowsky, N. and Wright, W.},
  title = {Aperture: An Open Web 2.0 Visualization Framework},
  booktitle = {System Sciences (HICSS), 2013 46th Hawaii International Conference
	on},
  year = {2013},
  pages = {1485-1494},
  abstract = {Aperture is an open, adaptable and extensible Web 2.0 visualization
	framework, designed to produce visualizations for analysts and decision
	makers in any common web browser. Aperture utilizes a novel layer
	based approach to visualization assembly, and a data mapping API
	that simplifies the process of adaptable transformation of data and
	analytic results into visual forms and properties. This common visual
	layer and data mapping API, combined with core elements such as contextually
	derivable color palettes, layout and symbol ontology services is
	designed to enable highly creative and expressive visual analytics,
	rapidly and with less effort. This paper introduces the Aperture
	framework, describing key features of the programming API and reference
	implementation, presents example use cases, and proposes an approach
	for measuring technical performance metrics for software development,
	and operational performance metrics for visualization support of
	analysis and decision making.},
  db = {ieeexplore2},
  doi = {10.1109/HICSS.2013.96},
  issn = {1530-1605},
  keywords = {Internet;application program interfaces;data analysis;data visualisation;decision
	making;online front-ends;ontologies (artificial intelligence);software
	metrics;software performance evaluation;Open Web 2.0 visualization
	framework;Web browser;adaptable data transformation;aperture framework;contextually
	derivable color palettes;creative visual analytics;data mapping API;decision
	making;expressive visual analytics;layer based approach;operational
	performance metrics;programming API;reference implementation;software
	development;symbol ontology services;technical performance metrics;visual
	layer;visualization assembly;Apertures;Assembly;Data visualization;Image
	color analysis;Visual analytics;agile;big data;framework;toolkit;visual
	analytics;visualization}
}

@INPROCEEDINGS{6405469,
  author = {Jonsson, H. and Larsson, S. and Punnekkat, S.},
  title = {Agile Practices in Regulated Railway Software Development},
  booktitle = {Software Reliability Engineering Workshops (ISSREW), 2012 IEEE 23rd
	International Symposium on},
  year = {2012},
  pages = {355-360},
  abstract = {Complex software is becoming an important component of modern safety-critical
	systems. To assure the correct function of such software, the development
	processes are heavily regulated by international standards, often
	making the process very rigid, unable to accommodate changes, causing
	late integration and increasing the cost of development. Agile methods
	have been introduced to address these issues in several software
	domains, but their use in safety-critical applications remains to
	be investigated. This paper provides an initial analysis of agile
	practices in the context of software development for the European
	railway sector, regulated by the EN 50128 standard. The study complements
	previous studies on the use of agile methods in other regulated domains.
	A systematic mapping between EN 50128 requirements and agile practices
	showed that all practices support some objectives of the standard.
	Important supporting features recognized were focus on simple design,
	test automation, coding standards, continuous integration and validation.
	However, several problematic areas were also identified, including
	vague requirement analysis and change management. Most agile practices
	must be adapted to suit regulated software development and this analysis
	outlines a subset of the required changes.},
  db = {ieeexplore2},
  doi = {10.1109/ISSREW.2012.80},
  keywords = {automatic test software;management of change;program verification;railway
	engineering;safety-critical software;software prototyping;software
	standards;EN 50128 international standard;European railway sector;agile
	practices;change management;coding standards;regulated railway software
	development;requirement analysis;safety-critical systems;software
	integration;software validation;systematic mapping;test automation;Documentation;Encoding;Programming;Rail
	transportation;Safety;Software;Standards;EN 50128;agile practices;railway;safety-critical
	systems;software development processes;software engineering}
}

@INPROCEEDINGS{6170015,
  author = {Kamat, V. and Sardessai, S.},
  title = {Agile Practices in Higher Education: A Case Study},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {48-55},
  abstract = {Indian higher education is looking forward to major reforms. In the
	past, much of the efforts to bring in reforms have proved to be counter
	productive. There is so much of wastage of talent and resources that
	one is compelled to think whether the agile practices that have met
	with so much of success in manufacturing and in software industry
	can be of any help in education sector as well. With this guided
	inquiry we carried out an experiment to practice few of these principles
	and the results are very encouraging. In this paper we discuss the
	motivation behind applying agile practices in higher education and
	the methodology adopted by us with the help of a case study.},
  db = {ieeexplore2},
  doi = {10.1109/AgileIndia.2012.10},
  keywords = {computer aided instruction;further education;Indian higher education;agile
	practice;education sector;resource wastage;software industry;talent
	wastage;Computers;Educational institutions;Industries;Portals;Software;Training;agile
	in education;blended learning;higher education}
}

@INPROCEEDINGS{6340199,
  author = {Eunha Kim and Seokmoon Ryoo},
  title = {Agile Adoption Story from NHN},
  booktitle = {Computer Software and Applications Conference (COMPSAC), 2012 IEEE
	36th Annual},
  year = {2012},
  pages = {476-481},
  abstract = {NHN has moved two hundred teams (including more than three thousand
	software developers, testers, designers, team leaders, project managers
	and project facilitators) from waterfall development to agile development
	for the last three years. We have focused on creating self-organizing
	teams, debt-free iterative development, transparency and automation.
	It took us about three years of incremental improvements to get to
	where we are now, and we are continuously trying to improve our organization.
	This paper will show you how to get started on your transition to
	agile development, with tips on how to move your team from waterfall
	to agile, insights into the benefits of agile as well as problems
	and issues you may experience. We will also cover agile project management,
	agile development tools, requirements in agile, and agile testing
	methods.},
  db = {ieeexplore2},
  doi = {10.1109/COMPSAC.2012.83},
  issn = {0730-3157},
  keywords = {program testing;project management;software development management;software
	prototyping;team working;NHN Corporation;agile development tools;agile
	project management;agile requirements;agile testing methods;automation;debt-free
	iterative development;self-organizing teams;transparency;waterfall
	development;Automation;Companies;NIST;Planning;Productivity;Software;Testing;Agile
	Practices;Automated Acceptance Testing;Continuous Integration;Scrum}
}

@INPROCEEDINGS{6229786,
  author = {Krka, I. and Medvidovic, N.},
  title = {Revisiting modal interface automata},
  booktitle = {Software Engineering: Rigorous and Agile Approaches (FormSERA), 2012
	Formal Methods in},
  year = {2012},
  pages = {30-36},
  abstract = {Modern software systems are typically built of components that communicate
	through their external interfaces. A component's behavior can be
	effectively described using finite state automata-based formalisms
	(e.g., statecharts [5]). The basic formalism, labelled transition
	systems, describes the behavior of a component in terms of states
	and labeled transitions. The more advanced formalisms, such as modal
	transition systems and interface automata, extend LTS to incorporate
	additional information related to interface operation controllability
	- distinguishing between input, output, and internal actions - and
	the possible partiality of a component's specification - distinguishing
	between required and unknown (maybe) behaviors. Capturing the controllability
	and partiality aspects of a component's specification facilitates
	(1) checking interface compatibility, (2) checking whether one component
	can safely replace another component, and (3) checking whether one
	specification is a proper refinement of another specification. In
	this paper, we study the existing definitions of these three types
	of checks, and then exemplify their limitations in the context of
	modal interface automata (MIA); MIA is a class of component behavior
	specifications that incorporates both controllability and partiality
	information. We outline a set of enhancements to MIA as possible
	solutions to the identified limitations.},
  db = {ieeexplore2},
  doi = {10.1109/FormSERA.2012.6229786},
  keywords = {finite automata;formal specification;component specification;finite
	state automata-based formalisms;interface compatibility;interface
	operation controllability;labelled transition systems;modal interface
	automata;modal transition systems;partiality information;software
	systems;Automata;Context;Controllability;Impedance matching;Safety;Software
	systems;Synchronization}
}

@INPROCEEDINGS{6337325,
  author = {Kroll, J. and Audy, J.L.N.},
  title = {Follow-the-Sun Strategy: A Process for Global Software Development},
  booktitle = {Global Software Engineering Workshops (ICGSEW), 2012 IEEE Seventh
	International Conference on},
  year = {2012},
  pages = {76-78},
  abstract = {Follow-the-Sun (FTS) is a strategy in Global Software Development
	(GSD) focusing on software development twenty-four hours, seven days
	per week with physically distributed teams. Many companies have tried
	to implement FTS strategy, but have abandoned it after some point
	because of the difficulty to put it into practice. Thus, this article
	aims to presents a research plan for developing a software process
	inspired in the practices from agile methodologies, to support the
	adoption of the FTS strategy in GSD environments.},
  db = {ieeexplore2},
  doi = {10.1109/ICGSEW.2012.15},
  keywords = {distributed processing;software prototyping;FTS strategy;GSD;agile
	methodologies;follow-the-sun strategy;global software development;physically
	distributed teams;software process;Companies;Context;Databases;Educational
	institutions;Software;Software engineering;Systematics;Follow-the-Sun;Global
	Software Development;Software Practices;Software Process}
}

@INPROCEEDINGS{6297144,
  author = {Kundi, M. and Ahmad, B. and Inaythulaha, M. and Nasir, J.A.},
  title = {Optimization of testing time in RUP: A group testing approach},
  booktitle = {Computer Information Science (ICCIS), 2012 International Conference
	on},
  year = {2012},
  volume = {2},
  pages = {848-851},
  abstract = {Testing is the most important effort consuming the step of software
	development life cycle. Mostly the testing begins in the last stages
	of development and schedule slippage is adjusted with little testing.
	In Rational Unified Process (RUP), testing is performed throughout
	during development process. Test is one of the discipline of Rational
	Unified Process (RUP) among its nine disciplines where testing is
	performed in all four phases of RUP. In Construction phase the component
	are tested separately and then move to Transition phase, where beta
	testing take place. Testing an individual object is a time consuming
	approach of Rational Unified Process. The concept of group testing
	is introduced as a sub-discipline of test discipline. In proposed
	approach a group of similar components are tested together in group
	form to minimize the testing time. All though testing is involved
	from very beginning in RUP in order to develop error free component.
	But still a mechanism to test individual component takes a lot of
	time. The proposed model saves testing time when accurate developed
	components are tested in group form.},
  db = {ieeexplore2},
  doi = {10.1109/ICCISci.2012.6297144},
  keywords = {program testing;software development management;RUP;beta testing;construction
	phase;group testing approach;rational unified process;schedule slippage;software
	development life cycle;testing time optimization;transition phase;Unified
	modeling language;RUP Discipline;Software Development;Test;Testing
	Time;Use Case Diagram}
}

@INPROCEEDINGS{6480418,
  author = {Laanti, Maarit},
  title = {Agile and Wellbeing -- Stress, Empowerment, and Performance in Scrum
	and Kanban Teams},
  booktitle = {System Sciences (HICSS), 2013 46th Hawaii International Conference
	on},
  year = {2013},
  pages = {4761-4770},
  abstract = {Little research data exist about agile teams and wellbeing. After
	changing our software engineering mode to agile, we wanted to find
	out if people experienced more or less stress than before. This study
	is based on a company-wide survey of 466 software engineering practitioners.
	We asked about their subjective feelings about stress, empowerment,
	and performance in their respective engineering teams after they
	had started to use agile methods. The results reveal that the feelings
	of higher performance improvement and sustainable pace are related,
	and that this difference is statistically significant. Respondents
	who feel that their team is empowered also feel less stress. However,
	no significant difference in feelings of stress and empowerment was
	found between respondents working in Kanban and Scrum mode after
	transition to agile. The group that was improving its performance
	because of agile was also reporting a better workload balance. The
	group that was experiencing worse performance because of agile methods
	was also more stressed. The differences may be explained by the management
	styles being practiced in the teams. The results are important as
	those verify in industrial setting what some agile books suggest:
	limiting workload and team empowerment has an impact on performance
	and stress. This contributes to our understanding how agile teams
	should be managed.},
  db = {ieeexplore2},
  doi = {10.1109/HICSS.2013.74},
  issn = {1530-1605},
  keywords = {Blogs;Organizations;Product development;Sociology;Software engineering;Statistics;Stress;agile;kanban;performance;scrum;stress;survey;wellbeing}
}

@INPROCEEDINGS{6223028,
  author = {Lee, M.J. and Ko, A.J.},
  title = {Representations of user feedback in an agile, collocated software
	team},
  booktitle = {Cooperative and Human Aspects of Software Engineering (CHASE), 2012
	5th International Workshop on},
  year = {2012},
  pages = {76-82},
  abstract = {Support requests are a major source of feedback in software development.
	However, like sentences whispered in a children's telephone game,
	as an issue moves through a software development process, it may
	undergo many changes, making it difficult to ensure that the problem
	reported was actually fixed. To better understand how software teams
	preserve the integrity of user-reported issues, we observed a software
	team over a 6-month period, analyzing the trajectory of user requests
	through their software development processes. Our observations revealed
	several representations of issues, highlighting several points where
	information about an issue was lost or transformed. Although this
	information loss appeared to be unavoidable as an issue went through
	the resolution process, we found it was offset by a web of transactive
	memory distributed throughout the support and product teams. This
	memory was reinforced by asynchronous chat about recent and commonly
	reported issues, and shared notions of what issues should be considered
	severe or urgent.},
  db = {ieeexplore2},
  doi = {10.1109/CHASE.2012.6223028},
  keywords = {DP management;software prototyping;storage management;user centred
	design;agile collocated software team;asynchronous chat;integrity
	preservation;software development process;transactive memory web;user
	feedback representations;user-centered design;user-reported issues;Educational
	institutions;Electronic mail;Programming;Quality assurance;Usability;User
	centered design;User-centered design;feedback;issue tracking}
}

@INPROCEEDINGS{6252212,
  author = {Zhuang Lei and Gao Zhen and Li Guoqiang and Huang Jie and Wang Min},
  title = {Research on Websphere sMash and CICS TS integrated development},
  booktitle = {Service Systems and Service Management (ICSSSM), 2012 9th International
	Conference on},
  year = {2012},
  pages = {158-161},
  abstract = {Websphere sMash supports the agile development of web-based dynamic
	application with the use of SOA, which mainly applies to the scenarios
	combined application. CICS as a business transaction server is widely
	used in the core banking applications which adopted the traditional
	development pattern in the past decades. This traditional pattern
	is too complicated and not proper for applications needed to be rapidly
	developed and deployed. Recently, a new technology of dynamic scripting
	was put forward by integrating sMash in CICS, which provides an agile
	web application development platform. Through the platform, scenarios
	combined applications can be quickly developed in CICS, so as to
	achieve the purpose of rapid and agile application development. The
	paper introduces the concept of WebSphere sMash and CICS dynamic
	scripting, and describes in details the design principles and scenarios
	of CICS dynamic scripting.},
  db = {ieeexplore2},
  doi = {10.1109/ICSSSM.2012.6252212},
  keywords = {Internet;banking;file servers;service-oriented architecture;software
	prototyping;transaction processing;CICS TS integrated development;CICS
	dynamic scripting;SOA;Web-based dynamic application;Websphere sMash;agile
	application development;business transaction server;core banking
	applications;dynamic scripting technology;Availability;Business;Catalogs;Computer
	architecture;Dynamic programming;Java;Servers;Agile Development;CICS
	Dynamic Scripting;CICS Transaction Server;Web 2.0;WebSphere sMash}
}

@INPROCEEDINGS{6221849,
  author = {Qian Li and Shijun Liu and Ying Pan},
  title = {A cooperative construction approach for SaaS applications},
  booktitle = {Computer Supported Cooperative Work in Design (CSCWD), 2012 IEEE
	16th International Conference on},
  year = {2012},
  pages = {398-403},
  abstract = {Recently, much of the attention of SaaS has focused on the new business
	model that on-demand software enables. This trend requires the agile
	construction of applications which the long development cycle such
	as waterfall software-development model could not satisfy. This paper
	proposes a cooperative construction approach based on multi-level
	abstraction for SaaS applications, in which the tenant instance of
	a SaaS application will be abstracted into different levels according
	to its customization requirements, and then be constructed from different
	components and through different constructing routes with the collaboration
	of different participants in a SaaS system. We discuss the multi-level
	components model, the roles and the cooperative work, the multi-level
	construction method in details. We also introduce a case study of
	a SaaS application for supply business in automobile industry with
	the discussion of agile construction approaches.},
  db = {ieeexplore2},
  doi = {10.1109/CSCWD.2012.6221849},
  keywords = {automobile industry;cloud computing;object-oriented programming;software
	prototyping;supply chain management;SaaS applications;agile construction;automobile
	industry;business model;cooperative construction approach;customization
	requirements;long development cycle;multi level construction method;multi-level
	abstraction;on-demand software;supply business;waterfall software-development
	model;Abstracts;SaaS;cooperative construction;service computing}
}

@INPROCEEDINGS{6245592,
  author = {Lice, E. and Biba, M.},
  title = {Customizing Rational Unified Process in a Systems Integration Scenario},
  booktitle = {Complex, Intelligent and Software Intensive Systems (CISIS), 2012
	Sixth International Conference on},
  year = {2012},
  pages = {76-83},
  abstract = {This paper presents a customization of the Rational Unified Process
	(RUP) in a systems integration scenario in a large telecommunication
	company. The purpose of congregating existing systems is to leverage
	greater benefits from the company'scomputer systems. RUP has been
	chosen as the software development process due to its strong focus
	on promoting the fulfillment of the needs of end-users, while all
	along increasing chances that the process be delivered within an
	estimated schedule and budget. However, despite the undisputed interest
	in RUP, there is a gap in the total amount of empirical studies on
	the adoption and introduction of RUP in the context of specific project
	types. Moreover, there is little research in investigating and adopting
	RUP in system integration scenarios. In this paper we investigate
	the right process-level of RUP to be applied to the systems integration
	project in a real world business scenario. In addition we evaluate
	the suitability of RUP for this project'scontext. Evaluation results
	present advantages and disadvantages of using RUP in projects of
	the type described here while areas of future work are identified
	and presented.},
  db = {ieeexplore2},
  doi = {10.1109/CISIS.2012.118},
  keywords = {business data processing;software engineering;telecommunication industry;RUP;computer
	systems;end-users;rational unified process;real world business scenario;software
	development process;specific project types;systems integration scenario;telecommunication
	company;Best practices;Companies;Customer relationship management;Monitoring;Programming;Software;rational
	unified process;software engineering;system integration}
}

@INPROCEEDINGS{6201545,
  author = {Linghui Liu and Yao Lu},
  title = {Application of agile method in the enterprise website backstage management
	system: Practices for extreme programming},
  booktitle = {Consumer Electronics, Communications and Networks (CECNet), 2012
	2nd International Conference on},
  year = {2012},
  pages = {2412-2415},
  abstract = {When the traditional method lacking in adapting requirement variety,
	some agile software development methods appears, which flexible development
	mechanism could control the risk that requirement variety brings.
	Taking Extreme Programming as an example, this paper introduces ideas,
	values and process practice rules of agile methods. Extreme Programming
	is a software development methodology that is agile and based on
	practice. This paper introduces the features of Extreme Programming
	and how to practice Extreme Programming in developing management
	information system, also discuss and study the advantages and disadvantages
	when applying Extreme Programming in small or middle sized projects
	with inconstant requirements.},
  db = {ieeexplore2},
  doi = {10.1109/CECNet.2012.6201545},
  keywords = {Web sites;formal verification;management information systems;software
	prototyping;agile software development method;enterprise Website
	backstage management system;extreme programming;flexible development
	mechanism;middle sized projects;process practice rule;requirement
	variety;risk control;small sized projects;Business;Documentation;Educational
	institutions;Programming;Software;Testing;Agile Software Development;Extreme
	Programming;Website backstage Management System}
}

@INPROCEEDINGS{6258629,
  author = {Qingling Lu and Wei Zhang and Mengliang Bai and Yuhui Xia},
  title = {Study on SoftMan mobile system},
  booktitle = {Electrical Electronics Engineering (EEESYM), 2012 IEEE Symposium
	on},
  year = {2012},
  pages = {220-223},
  abstract = {Traditional mobile system adopted centralized management manner and
	maintenance is complex. JXTA is a new technique coexisted with Client/Server
	computation mode. A kind of mobile SoftMan system based on JXTA is
	put forward in this paper. At first, it is compared with traditional
	mobile agent system, and then SoftMan mobile system architecture
	is analyzed and information transmission, reception and transaction
	are introduced in detail. At last, SoftMan implementation is expounded.
	Mobile SoftMan system based on JXTA is more agile and simpler than
	traditional mobile system.},
  db = {ieeexplore2},
  doi = {10.1109/EEESym.2012.6258629},
  keywords = {client-server systems;mobile agents;peer-to-peer computing;public
	domain software;JXTA;SoftMan mobile system;client-server computation
	mode;maintenance;mobile agent system;mobile system adopted centralized
	management;Manuals;Mobile communication;JXTA;Mobile System;Softman}
}

@ARTICLE{6226343,
  author = {Maglyas, A. and Nikula, U. and Smolander, K.},
  title = {Lean Solutions to Software Product Management Problems},
  journal = {Software, IEEE},
  year = {2012},
  volume = {29},
  pages = {40-46},
  number = {5},
  abstract = {Although the discipline of software product management plays an important
	role in the development of successful products, each company adopts
	its practices in its own way. Regardless of variations, companies
	face common problems. This article identifies five problems that
	lean principles to software product management can help organizations
	avoid or solve.},
  db = {ieeexplore2},
  doi = {10.1109/MS.2012.108},
  issn = {0740-7459},
  keywords = {software development management;software houses;lean solutions;software
	product development;software product management problems;Agile manufacturing;Marketing
	and sales;Product development;Product life cycle management;Software
	development;Software management;lean;management;software process
	improvement;software product management}
}

@INPROCEEDINGS{6526379,
  author = {Manjunath, K.N. and Jagadeesh, J. and Yogeesh, M.},
  title = {Achieving quality product in a long term software product development
	in healthcare application using Lean and Agile principles: Software
	engineering and software development},
  booktitle = {Automation, Computing, Communication, Control and Compressed Sensing
	(iMac4s), 2013 International Multi-Conference on},
  year = {2013},
  pages = {26-34},
  abstract = {The objective of any software development is to deploy quality product
	with zero defects by meeting the end user expectations. There are
	several Software Development Life Cycle methodologies being followed
	to achieve this and the selection of best methodology is circumstance
	dependent. With our experience using Lean and Agile principles since
	last 4 years, in this paper we would like to explain in detail with
	statistics that these principles and practices can be successfully
	implemented in a iterative model development SDLC to achieve the
	matured, quality software in a long term medical imaging product.
	We will prove that it has positive impact on the software quality
	by comparing the outcome after following Lean and Agile principles
	with the prior results where traditional waterfall method was followed.},
  db = {ieeexplore2},
  doi = {10.1109/iMac4s.2013.6526379},
  keywords = {health care;iterative methods;medical computing;software quality;statistical
	analysis;agile principle;health care application;iterative model
	development;lean principle;medical imaging product;software development
	life cycle methodology;software engineering;software product development;software
	quality;statistics;Agile;Iterative development;Lean;Software Development
	Life Cycle;V model;Waterfall model}
}

@INPROCEEDINGS{6298095,
  author = {Maranzato, R.P. and Neubert, M. and Herculano, P.},
  title = {Scaling Scrum Step by Step: The Mega Framework},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {79-85},
  abstract = {We report the experience of scaling Scrum from one single team to
	seven feature teams. Our case study is the leading online payment
	system in Brazil. We introduce the background of the experiment and
	describe how we were able to scale Scrum in a team that had been
	previously unsuccessful in implementing it. Then we present “The
	Mega Framework” - a consistent set of practices and meetings derived
	from our experience for coordinating the teams and the stakeholders.
	It improves communication, aligns expectations and ultimately enables
	scaling agile development. We also discuss the lessons we learned
	while creating this framework and how we continuously improve it.},
  db = {ieeexplore2},
  doi = {10.1109/Agile.2012.22},
  keywords = {Internet;financial data processing;software prototyping;Brazil;Scrum
	scaling;The Mega Framework;agile development;online payment system;Companies;Internet;Planning;Software;Synchronization;Team
	working;agile;experience;feature teams;mega framework;scaling Scrum}
}

@ARTICLE{6353952,
  author = {Massie, J. G. and Davis, W. J.},
  title = {IBM toolkit for radical simplification of business processes},
  journal = {IBM Journal of Research and Development},
  year = {2012},
  volume = {56},
  pages = {3:1-3:10},
  number = {6},
  abstract = {Complex global business environments are associated with increasingly
	interconnected economies, societies, and governments. Moreover, the
	proliferation of discrete markets, categories of product offerings,
	and individualized customer segments motivates business leaders to
	drastically simplify their organizations to become more agile in
	exploiting this complexity. Incremental changes are no longer sufficient
	to remain viable in volatile and uncertain environments. Internal
	business processes must undergo radical simplifications that reduce
	cycle time (a measure of responsiveness), cost per transaction (a
	measure of efficiency), and the number of hand-offs (a measure of
	how often work is transferred to another organization or business
	process). IBM defines radical simplification as realizing reductions
	in these measures of 50% or greater. To achieve these goals, IBM
	executives identified the need for a consistent, carefully matched
	set of best-practice methods, techniques, and leading-edge software
	tools, including scenario-based guidance to enable leaders to radically
	simplify their businesses. This paper describes the resulting IBM
	Toolkit for Radical Simplification and includes project case studies
	to demonstrate how the toolkit is being applied to simplify business
	processes for increased speed, agility, and value.},
  db = {ieeexplore2},
  doi = {10.1147/JRD.2012.2210337},
  issn = {0018-8646}
}

@INPROCEEDINGS{6298113,
  author = {Mazzanti, G.},
  title = {Agile in the Bathtub: Developing and Producing Bathtubs the Agile
	Way},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {197-203},
  abstract = {This is a report about the introduction of Agile/Lean methodologies
	at an Italian company producing luxury hydromassage bathtubs and
	showers. Initially focused on product development and portfolio management,
	the Agile/Lean transition has been extended to other departments
	of the company. This has been a significant experience in combining
	Agile and Lean in a non-software context.},
  db = {ieeexplore2},
  doi = {10.1109/Agile.2012.27},
  keywords = {agile manufacturing;lean production;product development;Italian company;agile/lean
	methodologies;bathtub development;bathtub production;luxury hydromassage
	bathtubs;portfolio management;product development;Companies;Context;Delay;Portfolios;Product
	development;Production;Software;Kanban;agile;coaching;lean;portfolio
	management;product development}
}

@ARTICLE{5741001,
  author = {Middleton, P. and Joyce, D.},
  title = {Lean Software Management: BBC Worldwide Case Study},
  journal = {Engineering Management, IEEE Transactions on},
  year = {2012},
  volume = {59},
  pages = {20-32},
  number = {1},
  abstract = {This case study examines how the lean ideas behind the Toyota production
	system can be applied to software project management. It is a detailed
	investigation of the performance of a nine-person software development
	team employed by BBC Worldwide based in London. The data collected
	in 2009 involved direct observations of the development team, the
	kanban boards, the daily stand-up meetings, semistructured interviews
	with a wide variety of staff, and statistical analysis. The evidence
	shows that over the 12-month period, lead time to deliver software
	improved by 37%, consistency of delivery rose by 47%, and defects
	reported by customers fell 24%. The significance of this work is
	showing that the use of lean methods including visual management,
	team-based problem solving, smaller batch sizes, and statistical
	process control can improve software development. It also summarizes
	key differences between agile and lean approaches to software development.
	The conclusion is that the performance of the software development
	team was improved by adopting a lean approach. The faster delivery
	with a focus on creating the highest value to the customer also reduced
	both technical and market risks. The drawbacks are that it may not
	fit well with existing corporate standards.},
  db = {ieeexplore2},
  doi = {10.1109/TEM.2010.2081675},
  issn = {0018-9391},
  keywords = {Capability Maturity Model;batch production systems;personnel;project
	management;software development management;software prototyping;statistical
	analysis;statistical process control;team working;time to market;BBC
	Worldwide Case Study;CMMI;agile software development;batch sizes;capability
	maturity model;daily stand-up meetings;kanban boards;lean software
	management;market risk reduction;nine-person software development
	team performance investigation;semistructured interviews;software
	project management;staff;statistical analysis;statistical process
	control;team-based problem solving;technical risk reduction;time
	to delivery;visual management;Organizations;Process control;Productivity;Programming;Software;Agile;capability
	maturity model integrated (CMMI);development;lead time;lean;process;software;statistical
	process control}
}

@INPROCEEDINGS{6209192,
  author = {Miller, J.R. and Haddad, H.M.},
  title = {Challenges Faced While Simultaneously Implementing CMMI and Scrum:
	A Case Study in the Tax Preparation Software Industry},
  booktitle = {Information Technology: New Generations (ITNG), 2012 Ninth International
	Conference on},
  year = {2012},
  pages = {314-318},
  abstract = {CMMI certification is a major accomplishment for a software organization,
	and is often required for an organization to stay competitive. This
	work is a case study of the challenges faced by a growing tax preparation
	software company during its attempt to achieve CMMI certification
	at maturity level two, while simultaneously implementing agile development
	practices in the form of Scrum. For legal reasons, the company's
	actual name (and those of its products) is withheld, the company
	is hereafter referred to by the hypothetical name of The Tax Company,
	Inc. The Tax Company, Inc. began its journey toward CMMI certification
	at maturity level two, and becoming an agile software company in
	late 2008, that journey continues today. A few key challenges are
	documented here so that other organizations can learn from our company's
	experiences. As of October 14, 2011, The Tax Company, Inc. passed
	its SCAMPI 'A' appraisal, and achieved CMMI certification at level
	two. While CMMI maturity level three may be considered, management
	has not indicated that this will be pursued in the near future.},
  db = {ieeexplore2},
  doi = {10.1109/ITNG.2012.53},
  keywords = {Capability Maturity Model;DP industry;organisational aspects;software
	prototyping;tax preparation;CMMI certification;SCAMPI A appraisal;Scrum;The
	Tax Company Inc;agile development practices;agile software company;software
	organization;tax preparation software industry;Certification;Companies;Industries;Personnel;Software;Agile
	Development;CMMI;Challenges;Scrum;Tax Software Industry}
}

@INPROCEEDINGS{6225964,
  author = {Monteiro, P. and Borges, P. and Machado, R.J. and Ribeiro, P.},
  title = {A reduced set of RUP roles to small software development teams},
  booktitle = {Software and System Process (ICSSP), 2012 International Conference
	on},
  year = {2012},
  pages = {190-199},
  abstract = {Software projects are always increasing their complexity. The complexity
	of projects arises due to the increased sophistication of software
	applications and of their implemented features. However, most of
	the projects are developed by small organizations. Since these companies
	have a reduced dimension, the number of individuals that constitute
	each software development teams will also be significantly reduced.
	This paper describes a Rational Unified Process (RUP) configuration
	composed by a reduced set of RUP roles. This configuration may easily
	be adopted by a small software development team during the project
	execution period. Additionally, we have characterized each role in
	this reduced model by identifying the corresponding activities in
	charge and by creating individual sheets detailing their responsibilities.
	An initial assessment of the effectiveness of this RUP configuration
	was performed using CMMI-DEV maturity level 2 (ML2) as a reference
	model.},
  db = {ieeexplore2},
  doi = {10.1109/ICSSP.2012.6225964},
  keywords = {organisational aspects;project management;small-to-medium enterprises;software
	management;CMMI-DEV maturity level 2;Capability Maturity Model;ML2;RUP
	roles;Rational Unified Process configuration;company reduced dimension;project
	execution period;reduced model;sheet creation;small organizations;small-software
	development teams;software applications;software project complexity;Complexity
	theory;Context;Databases;Organizations;Programming;Software;Training;RUP;RUP
	tailoring;SME;small teams}
}

@INPROCEEDINGS{6415762,
  author = {Morelli, A. and Kohler, R. and Stefanelli, C. and Suri, N. and Tortonesi,
	M.},
  title = {Supporting COTS applications in Tactical Edge Networks},
  booktitle = {MILITARY COMMUNICATIONS CONFERENCE, 2012 - MILCOM 2012},
  year = {2012},
  pages = {1-7},
  abstract = {Military applications are relying more and more on Commercial Off-The-Shelf
	(COTS) hardware and software to build their information infrastructure.
	However, many COTS applications have been designed for wired infrastructure
	networks, where bandwidth and latency are not a problem, and exhibit
	severe performance problems when deployed in Tactical Edge Networks.
	To address the issues that traditional transport protocols, such
	as TCP, exhibit in this environment, researchers proposed several
	transport protocol solutions specifically developed for Tactical
	Edge Networks. However, these solutions require modifications to
	the applications in order to be adopted. This paper presents the
	Agile Computing Middleware (ACM) NetProxy: a proxy-based approach
	to support the deployment of COTS applications on Tactical Edge Networks.
	NetProxy transparently intercepts the applications' TCP and UDP traffic
	and conveys it over Mockets-based connections, while also providing
	other useful features such as stream compression. We tested NetProxy
	in an emulated environment and the results demonstrate that, besides
	enabling the deployment of COTS applications, NetProxy is also capable
	of improving their performance.},
  db = {ieeexplore2},
  doi = {10.1109/MILCOM.2012.6415762},
  issn = {2155-7578},
  keywords = {middleware;military communication;military computing;transport protocols;ACM
	NetProxy;COTS applications;Mockets-based connections;TCP traffic;UDP
	traffic;agile computing middleware;commercial off-the-shelf hardware;commercial
	off-the-shelf software;military applications;tactical edge networks;transport
	protocols;Bandwidth;Message systems;Middleware;Protocols;Receivers;Reliability;Legacy
	Application Support;Network Proxies;SOA;Tactical Edge Networks}
}

@ARTICLE{6265073,
  author = {Morris, Chris and Segal, J.},
  title = {Lessons Learned from a Scientific Software Development Project},
  journal = {Software, IEEE},
  year = {2012},
  volume = {29},
  pages = {9-12},
  number = {4},
  abstract = {In the mid-90s, I was working for a company transitioning to agile
	software development. We hadn't considered that our biggest problem
	in this change was that developers would be talking directly to customers.
	After some small disasters, we realized that somehow we needed to
	transfer the expertise and experience of our business and marketing
	teams to developers. When I first read the current Insights article,
	I immediately recognized many patterns in the list of lessons learned
	and that what these authors have to say is much broader than &#x201C;scientific&#x201D;
	software&#x2014;it's about any kind of software, actually, any kind
	of development effort.},
  db = {ieeexplore2},
  doi = {10.1109/MS.2012.93},
  issn = {0740-7459},
  keywords = {lessons learned;requirements;scientific databases;software development}
}

@INPROCEEDINGS{6215591,
  author = {Murugaiyan, M.S. and Balaji, S.},
  title = {Succeeding with Agile software development},
  booktitle = {Advances in Engineering, Science and Management (ICAESM), 2012 International
	Conference on},
  year = {2012},
  pages = {162-165},
  abstract = {The focus of Agile software development has been on methods and practices.
	How to take the methods effectively in use has received less attention.
	Especially in large organization it is not trivial to take agile
	methods in use. Based on the experiences, a life cycle model that
	describes phases in a software process improvement project deploying
	an agile method to an individual project was developed. The model
	defines the phases and the key decision points in the improvement
	project. It also defines some alternative processes for projects
	in different situations. The main benefit of the model is that it
	gives the big picture of the agile method deployment project. The
	model helps to understand which steps are needed for initially deploying
	an agile method and continuously improving the process.},
  db = {ieeexplore2},
  keywords = {project management;software process improvement;software prototyping;agile
	method deployment project;agile software development;life cycle model;software
	process improvement project;Collaboration;Computers;Documentation;Organizations;Software;Visualization;Water
	heating}
}

@INPROCEEDINGS{6225959,
  author = {Nikitina, N. and Kajko-Mattsson, M. and Strale, M.},
  title = {From scrum to scrumban: A case study of a process transition},
  booktitle = {Software and System Process (ICSSP), 2012 International Conference
	on},
  year = {2012},
  pages = {140-149},
  abstract = {Transitioning from one development method to another has become a
	common routine for many companies. Despite this, very few reports
	describe how the process transition has been carried out, and provide
	suggestions for how to define a process transition model. This paper
	reports on a process transition from Scrum to Scrumban in one software
	development company. The paper gives an account on the process transition
	process, changes done to the development process undergoing the transition
	and the improvements achieved. It rounds up with lessons learned.},
  db = {ieeexplore2},
  doi = {10.1109/ICSSP.2012.6225959},
  keywords = {DP industry;software prototyping;Scrum;Scrumban;process transition
	model;software development company;Companies;Interviews;Programming;Software;Testing;Training;Kanban;Process
	improvement;method adoption;process introduction}
}

@INPROCEEDINGS{6337395,
  author = {Noordeloos, R. and Manteli, C. and van Vliet, H.},
  title = {From RUP to Scrum in Global Software Development: A Case Study},
  booktitle = {Global Software Engineering (ICGSE), 2012 IEEE Seventh International
	Conference on},
  year = {2012},
  pages = {31-40},
  abstract = {In this paper we present the results of a case study at two offshore
	projects that recently adopted the agile way of working. We analyze
	their multi-site governance activities adopted and adjusted based
	on the Scrum methodology. Furthermore, we identify those changes
	that the Scrum adoption brought, in comparison with the previous
	governance structure of the Rational Unified Process (RUP). We find
	that a transition from RUP to Scrum brings a positive effect in requirements
	engineering, communication, cost management and cross-functionality
	of the distributed teams. We also observe a negative change with
	regard to the development pace and delivery time. Overall, we add
	to the body of knowledge in the field of distributed agile, with
	an additional field study where we describe and compare the migration
	from RUP to Scrum, and the implications of this transition.},
  db = {ieeexplore2},
  doi = {10.1109/ICGSE.2012.11},
  keywords = {groupware;project management;software engineering;software management;Body
	of Knowledge;RUP;Rational Unified Process;Scrum methodology;cost
	management;cross-functionality;delivery time;development pace;distributed
	agile team communication;global software development;multisite governance
	activities;negative change;offshore projects;positive change;requirements
	engineering;Collaboration;Companies;Documentation;Interviews;Software;Scrum;agile
	methodology;global software development;governance}
}

@INPROCEEDINGS{6408529,
  author = {Nosseir, A. and Flood, D. and Harrison, R. and Ibrahim, O.},
  title = {Mobile Development Process Spiral},
  booktitle = {Computer Engineering Systems (ICCES), 2012 Seventh International
	Conference on},
  year = {2012},
  pages = {281-286},
  abstract = {Recent advances in mobile technology have led to ever-increasing demands
	for specialized software for these devices. Furthermore, the need
	for mobility has introduced unique constraints such as context, connectivity,
	size and data entry methods that impact on the apps' usability. These
	constraints can create usability errors that could increase risk
	levels especially in contexts like finance, health, or road navigation.
	The desire of Enterprises to embed their mobile apps' development
	into their business cycle increases the need to have a specialized
	software development process. Although many agile methods have been
	introduced over the last decade, none of methods has focused on reducing
	usability errors. This paper proposes a novel Mobile Development
	Process Spiral which is a Usability-Driven-Model. The process is
	designed to integrate usability into existing application development
	processes and recommends usability techniques for assessing mobile
	apps.},
  db = {ieeexplore2},
  doi = {10.1109/ICCES.2012.6408529},
  keywords = {mobile computing;software engineering;agile method;application development
	process;connectivity constraint;context constraint;data entry method;finance;health;mobile
	application development;mobile apps development;mobile development
	process;mobile technology;road navigation;size constraint;software
	development process;specialized software demand;spiral model;usability
	error reduction;usability technique;usability-driven-model;Context;Measurement;Mobile
	communication;Mobile handsets;Spirals;Usability;mobile software development;spiral
	model;usability;user center design}
}

@INPROCEEDINGS{6328180,
  author = {Olsson, H.H. and Alahyari, H. and Bosch, J.},
  title = {Climbing the Stairway to Heaven -- A Mulitiple-Case Study Exploring
	Barriers in the Transition from Agile Development towards Continuous
	Deployment of Software},
  booktitle = {Software Engineering and Advanced Applications (SEAA), 2012 38th
	EUROMICRO Conference on},
  year = {2012},
  pages = {392-399},
  abstract = {Agile software development is well-known for its focus on close customer
	collaboration and customer feedback. In emphasizing flexibility,
	efficiency and speed, agile practices have lead to a paradigm shift
	in how software is developed. However, while agile practices have
	succeeded in involving the customer in the development cycle, there
	is an urgent need to learn from customer usage of software also after
	delivering and deployment of the software product. The concept of
	continuous deployment, i.e. the ability to deliver software functionality
	frequently to customers and subsequently, the ability to continuously
	learn from real-time customer usage of software, has become attractive
	to companies realizing the potential in having even shorter feedback
	loops. However, the transition towards continuous deployment involves
	a number of barriers. This paper presents a multiple-case study in
	which we explore barriers associated with the transition towards
	continuous deployment. Based on interviews at four different software
	development companies we present key barriers in this transition
	as well as actions that need to be taken to address these.},
  db = {ieeexplore2},
  doi = {10.1109/SEAA.2012.54},
  keywords = {software prototyping;agile software development;customer collaboration;customer
	feedback;multiplecase study exploring barriers;software continuous
	deployment;software functionality;software product;stairway to heaven;Companies;Context;Hardware;Interviews;Software;agile
	software development;continuous deployment;continuous integration;customer
	collaboration}
}

@INPROCEEDINGS{6274067,
  author = {Jinsong Ouyang},
  title = {Webponder: An Innovative Cloud Service for Application Description
	and Provisioning},
  booktitle = {Services (SERVICES), 2012 IEEE Eighth World Congress on},
  year = {2012},
  pages = {313-316},
  abstract = {This paper describes Webponder, a technology that enables fast and
	agile creation of business applications without traditional programming.
	Specifically Webponder can be deployed as a cloud service that enables
	the following: Application Description, a process of defining a type
	of business application; Application Provisioning, a process of creating
	an instance of an application type and deploying it in the Cloud.
	Compared to traditional licensed software and software-as-a-service
	(SaaS) applications, Webponder is particularly suitable for building
	those community-based applications that are ad hoc and/or ever-evolving
	in nature, and often need fast development and agile update. Webponder
	provides a cost-effective alternative, in terms of cost and time-to-market,
	to the provisioning of these applications. In addition, Webponder
	is easy to be adopted and integrated with other enterprise applications
	or Cloud services as it is based upon open standards and provides
	a Web service interface.},
  db = {ieeexplore2},
  doi = {10.1109/SERVICES.2012.70},
  keywords = {Web services;business data processing;cloud computing;SaaS;Web service
	interface;Webponder;application description;application provisioning;business
	applications;innovative cloud service;software-as-a-service;Access
	control;Buildings;Business;Programming;Schedules;Web services;XML;BPEL;Cloud
	service;Web services;Webponder;application description;application
	provisioning}
}

@INPROCEEDINGS{6149555,
  author = {Overhage, S. and Schlauderer, S.},
  title = {Investigating the Long-Term Acceptance of Agile Methodologies: An
	Empirical Study of Developer Perceptions in Scrum Projects},
  booktitle = {System Science (HICSS), 2012 45th Hawaii International Conference
	on},
  year = {2012},
  pages = {5452-5461},
  abstract = {Agile development methodologies have gained great interest in research
	and practice. As their introduction considerably changes traditional
	working habits of developers, the long-term acceptance of agile methodologies
	becomes a critical success factor. Yet, current studies primarily
	examine the early adoption stage of agile methodologies. To investigate
	the long-term acceptance, we conducted a study at a leading insurance
	company that introduced Scrum in 2007. Using a qualitative research
	design and the Diffusion of Innovations Theory as a lens for analysis,
	we gained in-depth insights into factors influencing the acceptance
	of Scrum. Particularly, developers felt Scrum to be more compatible
	to their actual working practices. Moreover, they perceived the use
	of Scrum to deliver numerous relative advantages. However, we also
	identified possible barriers to acceptance since developers felt
	both the complexity of Scrum and the required discipline to be higher
	in comparison with traditional development methodologies.},
  db = {ieeexplore2},
  doi = {10.1109/HICSS.2012.387},
  issn = {1530-1605},
  keywords = {innovation management;insurance;software prototyping;Scrum project;agile
	development methodology;diffusion of innovation theory;insurance
	company;long term acceptance;qualitative research design;Collaboration;Complexity
	theory;Documentation;Information systems;Planning;Software;Technological
	innovation;Agile methodologies;Diffusion of Innovations Theory;Scrum;acceptance
	factors}
}

@INPROCEEDINGS{6475422,
  author = {Paasivaara, M. and Lassenius, C. and Heikkila, V.T.},
  title = {Inter-team coordination in large-scale globally distributed scrum:
	Do Scrum-of-Scrums really work?},
  booktitle = {Empirical Software Engineering and Measurement (ESEM), 2012 ACM-IEEE
	International Symposium on},
  year = {2012},
  pages = {235-238},
  abstract = {Scrum-of-Scrums meeting is mentioned in the literature as the mechanism
	for handling inter-team coordination in large-scale Scrum. However,
	how to implement it in projects with tens of teams is not explained.
	In this paper, we present a multiple case study on how Scrum-of-Scrum
	meetings were applied in two large-scale, globally distributed Scrum
	projects both employing at least twenty Scrum teams. We conducted
	58 semi-structured interviews of project personnel, including managers,
	architects, product owners, developers and testers. Our results show
	that Scrum-of-Scrum meetings involving representatives from all teams
	were severely challenged: the audience was too wide to keep everybody
	interested and the participants did not know what to report that
	might be valuable to other teams, often ending up not reporting anything.
	As a solution, one of the case projects introduced feature-specific
	Scrum-of-Scrums meetings for 3-5 teams working on the same feature,
	which turned out to work well. However, challenges with coordination
	at the project level remained. The other case organization tried
	a site-based SoS structure that still did not work well.},
  db = {ieeexplore2},
  doi = {10.1145/2372251.2372294},
  issn = {1938-6451},
  keywords = {software prototyping;Scrum-of-Scrums meeting;interteam coordination;large-scale
	globally distributed Scrum;site-based SoS structure;Companies;Encoding;Interviews;Software;Software
	engineering;Telecommunications;Agile Software Development;Distributed
	Scrum;Global Software Engineering;Inter-team Coordination}
}

@INPROCEEDINGS{6475392,
  author = {Passos, C. and Cruzes, D.S. and Dyba, T. and Mendonca, M.},
  title = {Challenges of applying ethnography to study software practices},
  booktitle = {Empirical Software Engineering and Measurement (ESEM), 2012 ACM-IEEE
	International Symposium on},
  year = {2012},
  pages = {9-18},
  abstract = {Ethnography is about the adoption of a cultural lens to observe and
	interpret events, actions, and behaviors, ensuring that they are
	placed in a relevant and meaningful context. Using this approach,
	it is possible to capture and analyze software development practices.
	Our aims are to illustrate the use of an ethnographic approach in
	a case study of agile software development adoption, to discuss the
	methodological challenges involved, and to provide support to others
	who conduct ethnographic studies of software practice. An ethnographic
	case study was conducted, employing participant observation, interviews,
	and document analysis. Difficulties and decisions were recorded and
	compared with those encountered in the literature. Finally, key challenges
	and guidelines to tackle them were discussed and documented. We identified
	five key challenges of applying ethnography to the study of software
	practices: (a) working in collaboration with and having something
	to offer to the participating company; (b) the insider/outsider dynamic
	of participant observation; (c) the balance between participant listening
	and participant observation; (d) the researcher's relationship with
	the participants; and (e) the rigor in qualitative work that involves
	the dilemma of the contextualization to be sufficiently broad and
	detailed. This study shows that ethnographic methods are indispensible
	when trying to understand software practice, and that the fundamental
	challenge for the researcher is to balance the role of participant
	observer with rigorous fieldwork.},
  db = {ieeexplore2},
  doi = {10.1145/2372251.2372255},
  issn = {1938-6451},
  keywords = {organisational aspects;software prototyping;agile software development
	adoption;collaborative work;cultural aspects;ethnographic approach;insider
	dynamic;outsider dynamic;participant company;participant listening
	technique;participant observation technique;qualitative work;researcher
	relationship;Collaboration;Communities;Companies;Context;Interviews;Software;Text
	analysis;Collaborative Ethnographic Research;Participant Observation;Qualitative
	Methods}
}

@INPROCEEDINGS{6337366,
  author = {Penttinen, M. and Mikkonen, T.},
  title = {Subcontracting for Scrum Teams: Experiences and Guidelines from a
	Large Development Organization},
  booktitle = {Global Software Engineering (ICGSE), 2012 IEEE Seventh International
	Conference on},
  year = {2012},
  pages = {195-199},
  abstract = {Agile methods and Scrum especially have drawn the attention of large
	software industry. Whilst originally accepted as a way of working
	for small companies and teams, more and more of the large organizations
	have adopted the Scrum method as their primary vehicle for delivering
	value to their customers. This transformation is not always without
	difficulties, however. One particular issue is that large organizations
	seldom develop software on their own but rather typically use massive
	amounts of subcontractors and their subcontractors to meet the sky-rocketing
	demand for new software. Only few experiences have been reported
	on how agile teams in a large organization succeed when they are
	networked with hundreds of different subcontractors distributed in
	global development space. This paper reports experiences based on
	5 years of practicing Scrum together with subcontractors. Results
	reveal that often the agile team's performance is significantly hurt
	by having non-agile subcontractors participating to the development
	and that frameworks used for defining contracting structures are
	far behind from today's needs, leading to many problems in practice.},
  db = {ieeexplore2},
  doi = {10.1109/ICGSE.2012.16},
  keywords = {DP industry;organisational aspects;project management;software prototyping;subcontracting;agile
	development;agile methods;large development organization;large software
	industry;project management;scrum method;scrum teams;sky-rocketing
	demand;subcontracting;Conferences;Software engineering;Scrum;agile
	development;subcontracting}
}

@INPROCEEDINGS{6344556,
  author = {Petrov, P. and Buy, U. and Nord, R.L.},
  title = {Enhancing the software architecture analysis and design process with
	inferred macro-architectural requirements},
  booktitle = {Twin Peaks of Requirements and Architecture (Twin Peaks), 2012 IEEE
	First International Workshop on the},
  year = {2012},
  pages = {20-26},
  abstract = {Traditionally the flow of authoritative information and control in
	requirements and software engineering is from requirements to architecture,
	design, development, implementation and testing. Iterative, spiral
	and agile methods, among others, have introduced increments and iterations
	in eliciting and discovering requirements within the project life
	cycle. Yet the authoritative flow of information across organizational
	boundaries within the enterprise continues to be from requirements
	to architecture to design. We argue that two additional implicit
	sources of information should be included in the requirements engineering
	process, contextual environment concerns and architectural patterns
	and heuristics. To account for these two sources of implicit requirements
	information we introduce the concept of forward and backward inferred
	macro-architectural requirements. Forward inferred macro-architectural
	requirements are elicited from contextual environment concerns. Backward
	inferred macro-architectural requirements are extracted through a
	reverse requirements elicitation process from architectural heuristics
	and patterns. We have observed significant improvements in the efficiency
	of the development processes and the quality of the final software
	products as a result of making inferred macro-architectural requirements
	explicit.},
  db = {ieeexplore2},
  doi = {10.1109/TwinPeaks.2012.6344556},
  keywords = {formal specification;organisational aspects;software architecture;software
	quality;agile methods;architectural heuristics;architectural patterns;authoritative
	information flow;backward inferred macro-architectural requirements;contextual
	environment concerns;forward inferred macroarchitectural requirements;iterative
	methods;organizational boundaries;project life cycle;requirement
	discovery;requirement elicitation;requirements control;requirements
	engineering process;software architecture analysis process;software
	architecture design process;software engineering;software product
	quality;spiral methods;Computer architecture;Context;Ecosystems;Organizations;Software;Software
	architecture;Enterprise architecture;analysis and design;architectural
	heuristics;architectural requirements;contextual concern;requirements
	engineering;software architecture}
}

@INPROCEEDINGS{6298112,
  author = {Prokhorenko, S.},
  title = {Skiing and Boxing: Coaching Product and Enterprise Teams},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {191-196},
  abstract = {Successful Agile transitions depend on a coaching approach just as
	much as the development of a good sports team. One is not going to
	assign the same exercise programs to a pro skier and a boxer; the
	same applies to different software development teams. In this study
	we summarize experiences from two Agile transformation projects,
	a travel website and investment bank risk management software. We
	discuss common points and distinctive features in requirements management,
	innovations, customer collaboration and team motivation.},
  db = {ieeexplore2},
  doi = {10.1109/Agile.2012.30},
  keywords = {Web sites;human resource management;innovation management;investment;risk
	management;software prototyping;team working;agile transformation;agile
	transitions;coaching product;customer collaboration;enterprise teams;innovations;investment
	bank risk management software;requirements management;team motivation;travel
	Website;Companies;Investments;Manuals;Software;Testing;Time to market;Agile
	Transformation;coaching;distributed scrum}
}

@INPROCEEDINGS{6285001,
  author = {Qahtani, A.M. and Wills, G.B. and Gravell, A.M.},
  title = {Toward a framework for the development and specialisation of product
	software across organisational boundaries},
  booktitle = {Information Society (i-Society), 2012 International Conference on},
  year = {2012},
  pages = {391-395},
  abstract = {Organisational and cultural boundaries are two of the main important
	aspects of the software development process for distributed customers.
	Many organisations use traditional approaches, such as the Waterfall
	model, to develop software products for different customers. Agile
	software development has departed from traditional approaches, such
	as the Waterfall model. Much research has been conducted on adopting
	agile software development for either distributed or collocated projects.
	However, little research has discussed organisational boundaries
	between developers who use an agile software development approach
	and their customers. The purpose of this paper is to introduce agile
	software development to those organisations that develop software
	products for different distributed customers and also to study the
	potential impact of introducing Agile development across those organisational
	boundaries. We proposed a framework for developing software across
	organisational boundaries. This would ultimately address and accommodate
	key factors in software development across organisational boundaries
	using an agile development approach. This research will help the
	development society and serve as a guide for project managers, developers,
	stakeholders, and users to understand agile software development
	and the impact of adopting an Agile approach across organisational
	and cultural boundaries in their projects.},
  db = {ieeexplore2},
  keywords = {cultural aspects;organisational aspects;software prototyping;agile
	software development;cultural boundaries;developers;distributed customers;organisational
	boundaries;product software development;product software specialisation;project
	managers;stakeholders;waterfall model;Collaboration;Cultural differences;Documentation;Educational
	institutions;Global communication;Planning;Software;Society;agile
	software development;cultural boundaries;framework;organisational}
}

@INPROCEEDINGS{6342012,
  author = {Chen Qing and Yong Zhong},
  title = {A Problem-Frame-Based Approach for Component-Oriented Development},
  booktitle = {Engineering and Technology (S-CET), 2012 Spring Congress on},
  year = {2012},
  pages = {1-4},
  abstract = {The rapid development of internet has brought a series of challenges
	for traditional software theories, models, approaches and technologies.
	An agile software engineering method is thought to be imminent. Components
	designed for reuse is expected as a way to resolve these problems.
	Some methods provide a top-down vision to direct the component-oriented
	development process. But the gap between initial software design
	and final implementation prevents it from playing a fundamental role
	in the process. On the other hand, a bottom-up approach which are
	widely used such as J2EE/EJB, COM/COM++, CORBA/CCM are also proved
	have some shortcomings. In this paper, Problem-Frame-Based Approach
	(PFBA), which provides a way of relating software requirements and
	development, is adopt to solve these problems. PFBA is a new way
	of looking at how to develop software, helps the developer to focus
	on the problem itself, and uses Qi4j toolkit to support a component-oriented
	development process.},
  db = {ieeexplore2},
  doi = {10.1109/SCET.2012.6342012},
  keywords = {Internet;object-oriented programming;software prototyping;software
	reusability;CCM;COM++;CORBA;EJB;Internet;J2EE;PFBA;Qi4j toolkit;agile
	software engineering method;bottom-up approach;component-oriented
	development process;problem-frame-based approach;software design;software
	development;software requirements;Abstracts;Algorithm design and
	analysis;Context;Heating;Programming;Software;Software engineering}
}

@INPROCEEDINGS{6404424,
  author = {Ramos-Pollan, R. and Gonzalez, F.A. and Caicedo, J.C. and Cruz-Roa,
	A. and Camargo, J.E. and Vanegas, J.A. and Perez, S.A. and Bermeo,
	J.D. and Otalora, J.S. and Rozo, P.K. and Arevalo, J.E.},
  title = {BIGS: A framework for large-scale image processing and analysis over
	distributed and heterogeneous computing resources},
  booktitle = {E-Science (e-Science), 2012 IEEE 8th International Conference on},
  year = {2012},
  pages = {1-8},
  abstract = {This paper presents BIGS the Big Image Data Analysis Toolkit, a software
	framework for large scale image processing and analysis over heterogeneous
	computing resources, such as those available in clouds, grids, computer
	clusters or throughout scattered computer resources (desktops, labs)
	in an opportunistic manner. Through BIGS, eScience for image processing
	and analysis is conceived to exploit coarse grained parallelism based
	on data partitioning and parameter sweeps, avoiding the need of inter-process
	communication and, therefore, enabling loosely coupled computing
	nodes (BIGS workers). It adopts an uncommitted resource allocation
	model where (1) experimenters define their image processing pipelines
	in a simple configuration file, (2) a schedule of jobs is generated
	and (3) workers, as they become available, take over pending jobs
	as long as their dependency on other jobs is fulfilled. BIGS workers
	act autonomously, querying the job schedule to determine which one
	to take over. This removes the need for a central scheduling node,
	requiring only access by all workers to a shared information source.
	Furthermore, BIGS workers are encapsulated within different technologies
	to enable their agile deployment over the available computing resources.
	Currently they can be launched through the Amazon EC2 service over
	their cloud resources, through Java Web Start from any desktop computer
	and through regular scripting or SSH commands. This suits well different
	kinds of research environments, both when accessing dedicated computing
	clusters or clouds with committed computing capacity or when using
	opportunistic computing resources whose access is seldom or cannot
	be provisioned in advance. We also adopt a NoSQL storage model to
	ensure the scalability of the shared information sources required
	by all workers, including within BIGS support for HBase and Amazon's
	DynamoDB service. Overall, BIGS now enables researchers to run large
	scale image processing pipelines in an easy, af- ordable and unplanned
	manner with the capability to take over computing resources as they
	become available at run time. This is shown in this paper by using
	BIGS in different experimental setups in the Amazon cloud and in
	an opportunistic manner, demonstrating its configurability, adaptability
	and scalability capabilities.},
  db = {ieeexplore2},
  doi = {10.1109/eScience.2012.6404424},
  keywords = {cloud computing;data analysis;image processing;parallel processing;pipeline
	processing;query processing;Amazon DynamoDB service;Amazon EC2 service;Amazon
	cloud;BIGS;HBase service;Java Web Start;NoSQL storage model;SSH command
	scripting;agile deployment;big image data analysis toolkit;cloud
	resources;coarse grained parallelism;computing clusters;data partitioning;desktop
	computer;distributed computing resources;eScience;encapsulation;heterogeneous
	computing resources;job schedule generation;job schedule querying;large-scale
	image analysis;large-scale image processing pipelines;loosely coupled
	computing nodes;parameter sweeps;shared information source scalability;software
	framework;uncommitted resource allocation model;Biomedical imaging;Computers;Databases;Feature
	extraction;Pipelines;Schedules;Image analysis;high performance computing;pattern
	recognition}
}

@INPROCEEDINGS{6225513,
  author = {Razavian, M. and Tamburri, D.A. and Qing Gu and Lago, P.},
  title = {Modeling to support communication and engineering of service-oriented
	software},
  booktitle = {Software Services and Systems Research - Results and Challenges (S-Cube),
	2012 Workshop on European},
  year = {2012},
  pages = {8-9},
  abstract = {Our research focus is on social and sustainable Service-Oriented software
	engineering. From a social point of view, understanding social structures
	in Service-Oriented software engineering can lead to better software
	(as phrased in Conway's law). From a sustainable point of view, notational,
	methodological and techological support for Service-Oriented software
	engineering should aim at retaining past investments (in e.g. legacies),
	simplifying development processes and addressing global problems
	like the increasing need for remote collaboration, and the increasing
	scarcity of energy resources hence demanding for energy efficient
	solutions.},
  db = {ieeexplore2},
  doi = {10.1109/S-Cube.2012.6225513},
  keywords = {service-oriented architecture;Conways law;energy resources;methodological
	support;notational support;remote collaboration;service-oriented
	software engineering;social structures;techological support;Business;Collaboration;Green
	products;Industries;Service oriented architecture;Agile Service Networks;SOA
	Migration;Service-Oriented Software Engineering;View-Based Approach}
}

@INPROCEEDINGS{6149538,
  author = {Read, A. and Briggs, R.O.},
  title = {The Many Lives of an Agile Story: Design Processes, Design Products,
	and Understandings in a Large-Scale Agile Development Project},
  booktitle = {System Science (HICSS), 2012 45th Hawaii International Conference
	on},
  year = {2012},
  pages = {5319-5328},
  abstract = {In Agile Software Development (ASD), stakeholders use stories to stimulate
	conversations that create and convey understanding of software requirements.
	Some authors have argued that ASD methods have limited applicability
	to large-scale projects because agile stories are not sufficient
	to capture the complexities of up-front design. This paper reports
	a 2.5-year field study of how an ASD team for a complex software
	system adapted the user story concept and the Scrum approach. The
	team sought to create a convention for representing agile stories
	which could capture the complexities of the system requirements without
	burdening the team with unneeded documentation. They developed eight
	different ways to represent a story. The core representation of the
	approach was called a HyperEpic, a structured collection of closely-related
	HyperStories. HyperEpics required 90-99% fewer words than conventional
	specifications. Because of their dense form, Hyper-epics were not
	useful for other phases in the design/build processes. The team evolved
	a design/build work practice that proceeded in stages. In each stage,
	stories underwent a one or more transformations. Each transformation
	represented stories differently to create varied kinds of understandings
	among different stakeholder sets. The team was able to gain the benefits
	of ASD - faster development cycles, less documentation, rapid adaptation
	to insights and conditions.},
  db = {ieeexplore2},
  doi = {10.1109/HICSS.2012.684},
  issn = {1530-1605},
  keywords = {computational complexity;formal specification;formal verification;software
	architecture;software prototyping;ASD method;ASD team;HyperEpics;Scrum
	approach;agile software development;closely-related HyperStories;complex
	software system;design process;design product;design-build process;design-build
	work practice;development cycle;large scale agile development project;rapid
	adaptation;software requirement;system requirement complexity;unneeded
	documentation;upfront design complexity;user story concept;Collaboration;Complexity
	theory;Documentation;Formal specifications;Prototypes;Software;Variable
	speed drives}
}

@ARTICLE{6418138,
  author = {Rodriguez, G. and Soria, A. and Campo, M.},
  title = {Supporting Virtual Meetings in Distributed Scrum Teams},
  journal = {Latin America Transactions, IEEE (Revista IEEE America Latina)},
  year = {2012},
  volume = {10},
  pages = {2316-2323},
  number = {6},
  abstract = {Scrum has gained surprising momentum as an agile project management
	approach. It provides effective social integration by building up
	social team capital, and it provides much needed control and coordination
	mechanisms. Especially, daily Scrum meetings ensure an open channel
	for communication. However, this channel has been threatened by distributed
	software development which has highly been adopted in software industries.
	To support virtual meetings regardless physical locations of team
	members, we developed a 3D tool based on Scrum life cycle. The tool
	provides a virtual world consisted in technology to hold meetings
	in a Scrum context. We used a questionnaire to evaluate the usability
	and effectiveness of the tool with undergraduate students.},
  db = {ieeexplore2},
  doi = {10.1109/TLA.2012.6418138},
  issn = {1548-0992},
  keywords = {DP industry;computer aided instruction;distributed processing;groupware;project
	management;social aspects of automation;software management;software
	prototyping;teleconferencing;3D tool;Scrum life cycle;Scrum meetings;agile
	project management;control mechanisms;coordination mechanisms;distributed
	Scrum teams;distributed software development;social integration;social
	team capital;software industries;virtual meetings;Capability maturity
	model;Performance analysis;Silicon compounds;Software development;Visualization;Agile
	Project Management;Scrum;Virtual Meetings}
}

@INPROCEEDINGS{6475408,
  author = {Rodriguez, P. and Markkula, J. and Oivo, M. and Turula, K.},
  title = {Survey on agile and lean usage in finnish software industry},
  booktitle = {Empirical Software Engineering and Measurement (ESEM), 2012 ACM-IEEE
	International Symposium on},
  year = {2012},
  pages = {139-148},
  abstract = {Earlier empirical studies have demonstrated the interest that agile
	methods have generated in the software industry. Currently, lean
	approaches are increasingly adopted for complementing agile methods
	in software processes. With the goal of providing up-to-day results
	that can be used by organizations implementing or planning to implement
	agile and/or lean methods, we have conducted a study on the current
	stage of agile and lean adoption and usage in the software industry.
	For this purpose, we conducted an extensive survey among Finnish
	software practitioners in 2011, using the membership registry of
	The Finnish Information Processing Association (FIPA)as a sampling
	frame. 408 responses were collected from 200 software intensive organizations
	in the study. The survey included questions for identifying the rate
	of agile and lean usage in software organizations as well as the
	implementation of specific methods and practices, goals in adopting
	agile and lean, reasons for not applying these methods and effects
	of the agile and lean usage. The results of the survey reveal that
	a majority of respondents' organizational units are using agile and/or
	lean methods (58%). Furthermore, lean appears as a new player, being
	used by 24% of respondents, mainly in combination with agile (21%).
	The reasons and benefits for using agile and lean methods appeared
	to correspond in most parts to the findings of the earlier research.
	Generally, the experiences of using agile and lean methods seem to
	be rather positive, although challenges, such as obtaining management
	support and limitations for scaling agile in distributed settings,
	were also identified.},
  db = {ieeexplore2},
  doi = {10.1145/2372251.2372275},
  issn = {1938-6451},
  keywords = {lean production;software houses;software process improvement;software
	prototyping;FIPA;Finnish software industry;Finnish software practitioners;The
	Finnish Information Processing Association;agile methods;agile usage;lean
	approaches;lean usage;sampling frame;software intensive organizations;software
	organizations;software process;Companies;Industries;Programming;Software;Standards
	organizations;Variable speed drives;Agile;lean;survey}
}

@ARTICLE{6226342,
  author = {Rudorfer, A. and Stenzel, T. and Herold, G.},
  title = {A Business Case for Feature-Oriented Requirements Engineering},
  journal = {Software, IEEE},
  year = {2012},
  volume = {29},
  pages = {54-59},
  number = {5},
  abstract = {Owing to strong market growth for medical devices deployed in critical-care
	facilities, development organizations in medical engineering must
	continually look for opportunities to drive engineering efficiency
	and cost effectiveness. Furthermore, cycle time must decrease, the
	alignment of clinical workflow is breaking down departmental barriers,
	and an increased amount of product functionality is being realized
	in software. To help meet such challenges, adequate requirements
	engineering is necessary. Toward that end, Syngo (a business unit
	of the Imaging and Therapy division of Siemens) introduced Feature-Oriented
	Requirements Engineering (FORE) and developed a business case for
	using it in the context of a lean engineering program. FORE integrates
	with other engineering disciplines such as project management, software
	architecture, and test management. There was an error in the biographical
	information for Tobias Stenzel. Stenzel's biography should have indicated
	that he has an MS in industrial engineering and management from the
	University of Technology Karlsruhe, Germany.},
  db = {ieeexplore2},
  doi = {10.1109/MS.2012.106},
  issn = {0740-7459},
  keywords = {formal specification;medical computing;software architecture;FORE;Germany;Syngo;University
	of Technology Karlsruhe;biographical information;business unit;clinical
	workflow alignment;critical-care facilities;development organization;feature-oriented
	requirements engineering;imaging division;industrial engineering
	and management;lean engineering program;medical devices;medical engineering;product
	functionality;project management;software architecture;test management;therapy
	division;Agile manufacturing;Business;Medical diagnostic imaging;Medical
	treatment;Product life cycle management;Software development;Software
	engineering;Software management;business benefits;business case;lean
	software development;requirements engineering;software development;software
	platform development}
}

@ARTICLE{6216346,
  author = {Sagesser, K. and Joseph, B. and Grau, R.},
  title = {Introducing an Iterative Life-Cycle Model at Credit Suisse IT Switzerland},
  journal = {Software, IEEE},
  year = {2013},
  volume = {30},
  pages = {68-73},
  number = {2},
  abstract = {Credit Suisse IT Switzerland decided to introduce an iterative life-cycle
	model (ILCM) based on the Rational Unified Process (RUP), a de facto
	industry standard, in addition to the well-established waterfall
	life-cycle model (WLCM). Such a large-scale change management initiative
	involves risks, challenges, and an organizational mindset shift.
	The Credit Suisse project carefully considered issues such as the
	gap between RUP and CMMI, process vocabulary, best practices, development
	and maintenance effort, training, and company culture as a precursor
	to the change. The activities to deploy the model throughout the
	organization were coordinated in collaboration with actual practitioners
	toward creating awareness, managing knowledge, and managing resistance
	factors to effect the required mindset change.},
  db = {ieeexplore2},
  doi = {10.1109/MS.2012.74},
  issn = {0740-7459},
  keywords = {information technology;software engineering;ILCM;RUP;WLCM;credit suisse
	IT Switzerland;credit suisse project;de facto industry standard;iterative
	life cycle model;rational unified process;waterfall life-cycle model;Banking;Collaboration;Iterative
	methods;Process management;Product life cycle management;Software
	development;Standards organizations;Training;RUP;Rational Unified
	Process;iterative software development;software development life
	cycle;software development process management}
}

@INPROCEEDINGS{6298103,
  author = {Samios, H.-P.},
  title = {Overcoming Traditional Project Release Reporting with an Agile Approach
	Focused on Change},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {131-135},
  abstract = {If you are an Executive in a large organization Scrum / agile helps
	address a number of issues that you face in releasing products -
	improving quality, predictability, engagement of your people, and
	productivity. You've got help in the form of an Agile Coach and you
	understand that change is required to get these benefits, not only
	for the Scrum teams directly affected but also in the way you think
	about and approach development projects. The transition is making
	progress, and you are seeing improvements at all levels but you cannot
	help feeling that you've lost an understanding of the key decisions
	that the organization needs to make. You still have to run the business,
	to make commitments, and to release products. In the past you had
	information from the product teams that allowed you to understand
	where the issues were. That information seems to have disappeared.
	When you ask for it, you are given a “release burn-up chart” and
	are told that “Scrum means we respond to change” and “we don't do
	big upfront planning any more.” How can you get what you need and
	still be “Scrum”, still be “agile”?},
  db = {ieeexplore2},
  doi = {10.1109/Agile.2012.31},
  keywords = {business data processing;organisational aspects;productivity;project
	management;software quality;Scrum teams;agile coach;executive management;organization
	needs;product release;product teams;productivity improvement;quality
	improvement;release burn-up chart;Investments;Organizations;Planning;Resource
	management;Software;Standards organizations;Scrum;adoption;agile;culture;executive
	management}
}

@INPROCEEDINGS{6472579,
  author = {Santillo, L.},
  title = {Easy Function Points -- 'Smart' Approximation Technique for the IFPUG
	and COSMIC Methods},
  booktitle = {Software Measurement and the 2012 Seventh International Conference
	on Software Process and Product Measurement (IWSM-MENSURA), 2012
	Joint Conference of the 22nd International Workshop on},
  year = {2012},
  pages = {137-142},
  abstract = {Functional Size Measurement (FSM) is a relevant approach for software
	management and estimation since decades. Despite the efforts to refine
	the measurement definitions and practices FSM methods, real-world
	practitioners' needs led to a variety of proposals for approximation
	techniques aimed to provide (Function Point) figures in early phases
	of software projects and lifecycles, based on 'fuzzy' requirements
	(e.g. 'Size Classes', Estimated and Indicative, Quick & Early, Light
	and Early & Quick, Fast or Simple Function Points). This paper summarizes
	most common approximate sizing approaches, it provides an up-to-date
	comparison of their generic features, confidence levels and applicability,
	it shows how most approaches are basically variations or instances
	of a generic unique scheme (that can be derived from so-called Smart
	Function Points); it introduces the latest evolution of such approximation
	techniques -- for both IFPUG and COSMIC methods -- named 'EASY (Early
	& Speedy) Function Points'.},
  db = {ieeexplore2},
  doi = {10.1109/IWSM-MENSURA.2012.29},
  keywords = {approximation theory;project management;software engineering;software
	management;COSMIC method;Common Software Measurement International
	Consortium;EASY function points;IFPUG method;International Function
	Points User Group;approximate sizing approach;early and speedy function
	points;fuzzy requirements;generic unique scheme;smart approximation
	techniques;smart function points;software estimation;software lifecycle;software
	management;software projects;Accuracy;Approximation methods;Complexity
	theory;Size measurement;Software;Software measurement;Uncertainty;COSMIC;Early
	&amp; Quick;Easy Function Points;IFPUG;Simple;approximation;fuzzy
	requirements}
}

@INPROCEEDINGS{6480429,
  author = {Santos, Viviane and Goldman, Alfredo and Roriz Filho, Heitor},
  title = {The Influence of Practices Adopted by Agile Coaching and Training
	to Foster Interaction and Knowledge Sharing in Organizational Practices},
  booktitle = {System Sciences (HICSS), 2013 46th Hawaii International Conference
	on},
  year = {2013},
  pages = {4852-4861},
  abstract = {Corporate environments have acknowledged the role of agile coaches
	in agile methods implementation. An agile coach focuses on developing
	the potential of people and its application to obtain valuable results
	faster. This paper analyzes the influence of the practices adopted
	by an agile consultant for enhancing overall interactions and knowledge
	sharing, such as Open Space and Lightning Talks sessions. We analyze
	the influence of these practices in organizational practices, as
	a way to foster organizational learning. We found significant associations
	between practices and purposes, and also crossed the level of adoption
	and barriers for adoption of the practices by company experience
	on agile methods. Results show that the participants recognize the
	positive impacts of the practices, but they are not sufficient to
	change the organizational practices. Few participants continue to
	adopt them in their organizations. Most of them report obstacles
	regarding organizational conditions, such as culture and top management/leadership
	support.},
  db = {ieeexplore2},
  doi = {10.1109/HICSS.2013.528},
  issn = {1530-1605},
  keywords = {Companies;Indexes;Lightning;Software;Training;Variable speed drives;Agile
	coaching and training;inter-team knowledge sharing;interaction;organizational
	conditions;practices}
}

@INPROCEEDINGS{6478238,
  author = {Sathawornwichit, C. and Hosono, S.},
  title = {Consistency Reflection for Automatic Update of Testing Environment},
  booktitle = {Services Computing Conference (APSCC), 2012 IEEE Asia-Pacific},
  year = {2012},
  pages = {335-340},
  abstract = {In this paper, we present an approach for maintaining consistency
	among design models, system under test, and test components. Our
	approach provides an automatic updating technique to deal with changes
	that happen frequently in agile software development. Consistency
	reflection by automatic updating allows us to cut off manual tasks
	required in maintaining automated tests and speed up testing process
	which is a bottleneck in service development lifecycle. We introduce
	the use of metadata, the data structure that describes structural
	behavior of the system, in our automatic updating technique. Metadata
	is used as a common medium for communicating changes to keep consistency
	among design, system under test, and test components. We present
	an example of testing process to show how we apply this approach
	in practice.},
  db = {ieeexplore2},
  doi = {10.1109/APSCC.2012.49},
  keywords = {data structures;meta data;program testing;software maintenance;software
	prototyping;agile software development;automatic updating technique;consistency
	reflection;data structure;design model consistency maintenance;metadata;service
	development lifecycle;system structural behavior description;system
	under test;test components;testing process;Automation;Boolean functions;Data
	structures;Software;Software testing;Unified modeling language;agile
	software development;automated software testing;automatic update;behavior-driven
	development;consistency reflection;design models;metadata}
}

@INPROCEEDINGS{6472572,
  author = {Sedehi, H. and Martano, G.},
  title = {Metrics to Evaluate amp;amp; Monitor Agile Based Software Development
	Projects - A Fuzzy Logic Approach},
  booktitle = {Software Measurement and the 2012 Seventh International Conference
	on Software Process and Product Measurement (IWSM-MENSURA), 2012
	Joint Conference of the 22nd International Workshop on},
  year = {2012},
  pages = {99-105},
  abstract = {When the initial requirements of a software project are not so consolidated
	and there is a gap from what the user is able to express and what
	actually is needed, it seems obvious that the traditional way of
	"waterfall" developing approach is not so much recommended. The Agile
	approach (based on iterative-incremental model) mitigates the possible
	risks by classical way of software development cycle proposing instead
	of "doing once for all", "a piece by piece" model, developing the
	software through a sort of "try & verify" incremental approach. In
	today complex context, where continues changing needs and hence instable
	requirements are present, adopting agile project organization approach
	is getting more and more frequent offering positive feedback results.
	What is going to be discussed in this paper can be seen through two
	parts. At first, there will be a short description of GQM & PSM methodologies,
	focused on selecting a number of "sensible" metrics in Agile based
	software development context, while the second part will be concentrated
	on the fuzzy set theory, fuzzy logic (with the associated rule based
	reasoning model) and their implementation on the selected metrics
	in order to evaluate & monitor a general agile based software development
	project.},
  db = {ieeexplore2},
  doi = {10.1109/IWSM-MENSURA.2012.22},
  keywords = {fuzzy logic;fuzzy set theory;iterative methods;software metrics;software
	prototyping;GQM;PSM methodologies;agile based software development
	projects;agile project organization approach;associated rule based
	reasoning model;fuzzy logic approach;fuzzy set theory;initial requirements;iterative-incremental
	model;sensible metrics;software development cycle;Context;Fuzzy sets;Measurement;Monitoring;Pragmatics;Process
	control;Software;Agile;Fuzzy;GQM;Metrics;PSM;SDLC}
}

@INPROCEEDINGS{6415702,
  author = {Serban, C. and Chadha, R. and Chiang, C.J. and Ge, F. and Gottlieb,
	Y. and Sapello, A. and Sinkar, K. and Moeltner, K.},
  title = {A GNU-based packet radio for network management field testing},
  booktitle = {MILITARY COMMUNICATIONS CONFERENCE, 2012 - MILCOM 2012},
  year = {2012},
  pages = {1-6},
  abstract = {Software Defined Radios advanced in the recent years to become the
	platform of choice for new military and emergency response applications,
	enabling such functionality as single hardware-multiple waveforms,
	agile spectrum reuse, and cross layer reconfiguration and optimization.
	Yet, the choice of platforms available for experimenting new adaptation
	strategies and re-configuration capabilities is severely limited
	due to proprietary and canned implementations and architectures.
	GNU Radio represents an open source radio platform operating on a
	general purpose processor (GPP,) capable of offering an unprecedented
	level of re-configurability using common and accessible programming
	languages and paradigms. As such, it represents an attractive and
	cost effective platform for experimenting with reconfigurable radio
	technologies. Yet, GNU Radio had been used so far mainly for experimenting
	with physical layer algorithms, making it less suitable for data
	packet radio and networking applications. This paper describes our
	effort to augment the GNU radio to transform it into a practical
	platform for communication in tactical ad-hoc networks, while maintaining
	its dynamic re-configurability capabilities. The results of this
	effort enabled us to create a deployable network capable of supporting
	the development and testing of TITAN NM, an integrated network management
	system with autonomous re-configuration capabilities, and its successful
	evaluation in C4ISR OTM 2012.},
  db = {ieeexplore2},
  doi = {10.1109/MILCOM.2012.6415702},
  issn = {2155-7578},
  keywords = {ad hoc networks;military communication;optimisation;software radio;telecommunication
	network management;C4ISR OTM 2012;GNU-based packet radio;TITAN NM;accessible
	programming languages;agile spectrum reuse;autonomous re-configuration
	capability;common programming languages;cross layer reconfiguration;data
	packet radio;emergency response applications;general purpose processor;integrated
	network management system;military applications;network management
	field testing;open source radio platform;optimization;physical layer
	algorithms;reconfigurable radio technology;single hardware-multiple
	waveforms;software defined radios;tactical ad-hoc networks;Decision
	support systems;C4ISR;GNU Radio;Network Management;Software Defined
	Radios;USRP;military environment}
}

@INPROCEEDINGS{6225488,
  author = {Mengjiao Shen and Wenrong Yang and Guoping Rong and Dong Shao},
  title = {Applying agile methods to embedded software development: A systematic
	review},
  booktitle = {Software Engineering for Embedded Systems (SEES), 2012 2nd International
	Workshop on},
  year = {2012},
  pages = {30-36},
  abstract = {Since the 21st century, embedded software products have been pervasive
	in the world we live in, however, this emerging industry is facing
	many challenges due to its own unique characteristics which distinguish
	it from non-embedded software development. The other hand, agile
	software development methods are adopted by organizations worldwide
	at an increasing speed. It seems meaningful to explore to apply agile
	methods to embedded software development and in this paper a systematic
	review was conducted to supply an initial guide to the researchers
	and industrial readership.},
  db = {ieeexplore2},
  doi = {10.1109/SEES.2012.6225488},
  keywords = {embedded systems;software prototyping;ubiquitous computing;agile methods;agile
	software development;embedded software development;embedded software
	products;systematic review;Embedded software;Hardware;Industries;Mobile
	communication;Programming;Systematics;agile method;agile practice;embedded
	software development}
}

@INPROCEEDINGS{6227110,
  author = {Sillitti, A. and Succi, G. and Vlasenko, J.},
  title = {Understanding the impact of Pair Programming on developers attention:
	A case study on a large industrial experimentation},
  booktitle = {Software Engineering (ICSE), 2012 34th International Conference on},
  year = {2012},
  pages = {1094-1101},
  abstract = {Pair Programming is one of the most studied and debated development
	techniques. However, at present, we do not have a clear, objective,
	and quantitative understanding of the claimed benefits of such development
	approach. All the available studies focus on the analysis of the
	effects of Pair Programming (e.g., code quality, development speed,
	etc.) with different findings and limited replicability of the experiments.
	This paper adopts a different approach that could be replicated in
	an easier way: it investigates how Pair Programming affects the way
	developers write code and interact with their development machine.
	In particular, the paper focuses on the effects that Pair Programming
	has on developers' attention and productivity. The study was performed
	on a professional development team observed for ten months and it
	finds out that Pair Programming helps developers to eliminate distracting
	activities and to focus on productive activities.},
  db = {ieeexplore2},
  doi = {10.1109/ICSE.2012.6227110},
  issn = {0270-5257},
  keywords = {software prototyping;agile software development;case study;debated
	development techniques;developers attention;development machine;large
	industrial experimentation;pair programming;quantitative understanding;Browsers;PROM;Productivity;Programming
	profession;Switches;Visualization;Software development process;pair
	programming;productivity}
}

@INPROCEEDINGS{6337315,
  author = {da Silva Estacio, B.J.},
  title = {Development of a Set of Best Practices for Distributed Pair Programming},
  booktitle = {Global Software Engineering Workshops (ICGSEW), 2012 IEEE Seventh
	International Conference on},
  year = {2012},
  pages = {33-34},
  abstract = {This paper presents a research idea related to the use of Pair Programming
	in the context of Distributed Software Development. Organizations
	have been distributing their software development activities around
	the world for over a decade now which requires distributed teams
	to work together to achieve the project goal. Agile methods have
	been recently adopted by software engineers aiming to provide faster
	and more valuable results to the customer by fostering face-to-face
	communication, rapid response to changes, among others. Despite sounding
	contradicting, it has been claimed that distributed software development
	have been adopting agile methods as a strategy to make distributed
	teams more productive. Pair programming is one of the agile practices
	used in such context. It has been argued that pair programming in
	distributed software development contributes to increase the product
	quality and the productivity. For this reason, the goal of this idea
	proposal is to understand the advantages and challenges of Distributed
	Pair Programming, and to develop a set of best practices to facilitate
	its adoption.},
  db = {ieeexplore2},
  doi = {10.1109/ICGSEW.2012.8},
  keywords = {productivity;programming;software development management;software
	prototyping;team working;agile method;distributed pair programming;distributed
	software development;distributed team;face-to-face communication;product
	quality;productivity;software development activity;Best practices;Context;Industries;Programming
	profession;Software;Systematics;Distributed Software Development;Extreme
	Programming;Pair Programming}
}

@INPROCEEDINGS{6360084,
  author = {Smialek, M. and Nowakowski, W. and Jarzebowski, N. and Ambroziewicz,
	A.},
  title = {From use cases and their relationships to code},
  booktitle = {Model-Driven Requirements Engineering Workshop (MoDRE), 2012 IEEE},
  year = {2012},
  pages = {9-18},
  abstract = {Use cases are used in many methodologies to drive the software engineering
	process. Though, their transition to code was usually a mostly manual
	process. In the context of MDD, use cases gain attention as first-class
	artifacts with representation notations allowing for automatic transformations
	to analysis and design models. The paper concentrates on an important
	problem of constructing transformations that cater for use case relationships.
	It presents a notation that unifies the ambiguous “include” and “extend”,
	and allows for representing them within textual use case scenarios.
	This notation, equipped with runtime semantics, is used to construct
	a direct transformation into working code. The code is placed within
	method bodies of the Controller/Presenter and View layers within
	the MVC/MVP framework. Based on this transformation, an agile use-case-driven
	development process is possible.},
  db = {ieeexplore2},
  doi = {10.1109/MoDRE.2012.6360084},
  keywords = {program compilers;software engineering;MDD;MVC framework;MVP framework;agile
	use case driven development process;automatic transformations;code
	relationships;representation notations;software engineering process;Abstracts;Concrete;Runtime;Semantics;Software;Syntactics;Unified
	modeling language}
}

@INPROCEEDINGS{6298094,
  author = {Sochova, Z. and Kunce, E.},
  title = {A Story about a Dinosaur Called Mainframe and a Small Fly Agile},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {74-78},
  abstract = {Once, long time ago, there was a very old dinosaur living on the planet
	Earth. Big yet invisible to most, living in the dark places full
	of cold, dust and cables; surrounded by several groups of faithful
	- very specialized software teams, the only ones who truly understood
	him. But the life on the planet Earth had never been steady and recently
	spinning faster and faster around, so it happen that even this group
	had to be changed and follow the fast changing business environment
	outside, unless they all die. And here our story begins. The story
	is based on our experiences from multiple companies and projects
	operating on high-performing applications environment - mainframes.
	The companies are mainly from banking services, insurance systems
	and other very specific software industry areas where mainframes
	are still very popular.},
  db = {ieeexplore2},
  doi = {10.1109/Agile.2012.11},
  keywords = {software prototyping;banking services;business environment;dinosaur;insurance
	systems;mainframe;old dinosaur;planet earth;small fly agile;software
	industry;software teams;Companies;Educational institutions;Industries;Reliability;Software;Testing;Agile;Scrum;adoption;culture;development;enterprise;high-performing
	applications;mainframe;testing}
}

@INPROCEEDINGS{6170016,
  author = {Sonia, S. and Singhal, A.},
  title = {Integration Analysis of Security Activities from the Perspective
	of Agility},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {40-47},
  abstract = {To combat the increasing trends of security breaches reported nowadays,
	there is a need to deploy strict security activities with various
	development methodologies. In the present work we are focusing on
	an extremely popular agile development Methodology. These methodologies
	are informal and lightweight in nature having short timescales. But
	integration of security activities with agile activities always falls
	short of expectations, as security practices are not able to adapt
	such characteristics possessed by agile software easily. Therefore
	a proper integration methodology is required to achieve this aim.
	Here we propose a novel approach which provides quantitative measure
	of agility for security activities in terms of real agility degree
	(RAD). It determines the degree of compatibility of a security activity
	with agile process. We have also presented a comparative analysis
	of security activities with each other in context of RAD and risk
	removal efficiency factor (RREF). RREF is an assessment of how much
	effective a security activity is for removing the risk. This comparison
	will assist a developer during software development in deciding which
	security activity is beneficial than the other for integration.},
  db = {ieeexplore2},
  doi = {10.1109/AgileIndia.2012.9},
  keywords = {security of data;software prototyping;agile software;integration analysis;real
	agility degree;risk removal efficiency factor;security activities;security
	breaches;Analytical models;Documentation;Education;Planning;Programming;Security;Testing;Agile
	Processes;Agility Degree;Security Activities}
}

@INPROCEEDINGS{6298091,
  author = {Soundararajan, S. and Arthur, J.D. and Balci, O.},
  title = {A Methodology for Assessing Agile Software Development Methods},
  booktitle = {Agile Conference (AGILE), 2012},
  year = {2012},
  pages = {51-54},
  abstract = {Agile methods provide an organization or a team with the flexibility
	to adopt a selected subset of principles and practices based on their
	culture, their values, and the types of systems that they develop.
	More specifically, every organization or team implements a customized
	agile method, tailored to better accommodate its needs. However,
	the extent to which a customized method supports the organizational
	objectives, i.e. the `goodness' of that method, is questionable.
	Existing agile assessment approaches focus on comparative analyses,
	or are limited in scope and application. In this research, we propose
	a structured, systematic, and comprehensive approach to assessing
	the `goodness' of agile methods. We examine an agile method based
	on (1) its adequacy, (2) the capability of the organization to support
	the adopted principles and practices specified by the method, and
	(3) the method's effectiveness. We propose the Objectives, Principles
	and Practices (OPP) Framework to guide our assessment. The Framework
	identifies (1) objectives of the agile philosophy, (2) principles
	that support the objectives, (3) practices that are reflective of
	the principles, (4) linkages among the objectives, principles and
	practices, and (5) indicators for assessing the extent to which an
	organization supports the implementation and the effectiveness of
	that practice. In this paper, we discuss our solution approach, preliminary
	results, and future work.},
  db = {ieeexplore2},
  doi = {10.1109/Agile.2012.24},
  keywords = {software prototyping;OPP framework;agile assessment approach;agile
	philosophy;agile software development method;customized agile method;objectives-principles-practices;organizational
	objective;team;Collaboration;Couplings;Object recognition;Organizations;Programming;Software;Technological
	innovation;Adequacy;Agile Assessment;Capability;Effectiveness;Indicators;Linkages
	among Objectives;Principles;and Practices}
}

@INPROCEEDINGS{6149553,
  author = {Sutherland, J.},
  title = {Introduction to Agile Software Development: Lean, Distributed, and
	Scalable Minitrack},
  booktitle = {System Science (HICSS), 2012 45th Hawaii International Conference
	on},
  year = {2012},
  pages = {5441-5441},
  db = {ieeexplore2},
  doi = {10.1109/HICSS.2012.677},
  issn = {1530-1605}
}

@INPROCEEDINGS{6405267,
  author = {Suvorov, R. and Nagappan, M. and Hassan, A.E. and Ying Zou and Adams,
	B.},
  title = {An empirical study of build system migrations in practice: Case studies
	on KDE and the Linux kernel},
  booktitle = {Software Maintenance (ICSM), 2012 28th IEEE International Conference
	on},
  year = {2012},
  pages = {160-169},
  abstract = {As the build system, i.e. the infrastructure that constructs executable
	deliverables out of source code and other resources, tries to catch
	up with the ever-evolving source code base, its size and already
	significant complexity keep on growing. Recently, this has forced
	some major software projects to migrate their build systems towards
	more powerful build system technologies. Since at all times software
	developers, testers and QA personnel rely on a functional build system
	to do their job, a build system migration is a risky and possibly
	costly undertaking, yet no methodology, nor best practices have been
	devised for it. In order to understand the build system migration
	process, we empirically studied two failed and two successful attempts
	of build system migration in two major open source projects, i.e.
	Linux and KDE, by mining source code repositories and tens of thousands
	of developer mailing list messages. The major contributions of this
	paper are: (a) isolating the phases of a common methodology for build
	system migrations, which is similar to the spiral model for source
	code development (multiple iterations of a waterfall process); (b)
	identifying four of the major challenges associated with this methodology:
	requirements gathering, communication issues, performance vs. complexity
	of build system code, and effective evaluation of build system prototypes;
	(c) detailed analysis of the first challenge, i.e., requirements
	gathering for the new build system, which revealed that the failed
	migrations did not gather requirements rigorously. Based on our findings,
	practitioners will be able to make more informed decisions about
	migrating their build system, potentially saving them time and money.},
  db = {ieeexplore2},
  doi = {10.1109/ICSM.2012.6405267},
  issn = {1063-6773},
  keywords = {public domain software;software engineering;KDE;Linux kernel;build
	system code complexity;build system code performance;build system
	migration;build system technology;communication issues;effective
	evaluation;list message;open source project;requirements gathering;source
	code base;source code development;source code repository mining;spiral
	model;Complexity theory;Kernel;Linux;Maintenance engineering;Prototypes;Spirals;build
	systems;maintenance;restructuring}
}

@INPROCEEDINGS{6525520,
  author = {Yang Syu and Yong-Yi Fanjiang},
  title = {A Survey to Service Composition Methods Using Aspects Classification},
  booktitle = {Service Oriented System Engineering (SOSE), 2013 IEEE 7th International
	Symposium on},
  year = {2013},
  pages = {170-181},
  abstract = {As a promising, few-risk, low-cost, and agile way to rapidly produce
	and construct executable intended software, in recent years automatic
	service composition related techniques and methods have been a prevailing
	and deeply-studied research field, receiving a lot of attentions.
	For this research field, upon our long-term studies and efforts as
	well as papers reviewed we present, in this article, a technical
	profound survey along with the future challenges and directions observed.
	Before the main body of the survey appears, there are introductions
	to some vital background knowledge and adopted survey framework,
	respectively. The framework used in organizing the structure of the
	survey has been aided and inspired by aspect-oriented paradigm.},
  db = {ieeexplore2},
  doi = {10.1109/SOSE.2013.55},
  keywords = {Web services;aspect-oriented programming;semantic Web;service-oriented
	architecture;aspect classification;aspect-oriented paradigm;automatic
	service composition;executable intended software construction;executable
	intended software production;semantic Web service;service composition
	methods;Automatic Service Composition;Semantic Web Service;Service-Oriented
	Architecture}
}

@INPROCEEDINGS{6480425,
  author = {Trimble, Jay and Webster, Christopher},
  title = {From Traditional, to Lean, to Agile Development: Finding the Optimal
	Software Engineering Cycle},
  booktitle = {System Sciences (HICSS), 2013 46th Hawaii International Conference
	on},
  year = {2013},
  pages = {4826-4833},
  abstract = {In 2008, our team at NASA Ames Research Center launched a five-year
	project to deliver a user-centric software platform for mission control.
	We began with a six-month delivery cycle. Within two years we were
	delivering functional software every three weeks. Our evolution from
	traditional, to lean, then agile, did not happen because of a focused
	goal to become lean or agile. Rather, we responded iteratively to
	problems, we were disconnected from our customer, the long delivery
	cycles created issues with testing and verification, and we were
	unable to effectively measure our progress. We changed our delivery
	cycle first to six weeks, then three, with the team focused on the
	highest-priority features and bug fixes. Our one measure of progress
	became working code. We delivered a nightly build to our customer.
	Our QA team tested features as they rolled out. In our journey from
	traditional to agile, we tailored our processes to our team culture
	and our context of work. We found that agile methods increased customer
	and team satisfaction, and enabled us to use limited team resources
	where they were most effective -- the design and development of the
	software.},
  db = {ieeexplore2},
  doi = {10.1109/HICSS.2013.237},
  issn = {1530-1605},
  keywords = {Buildings;Encoding;NASA;Quality assurance;Software;Testing;User centered
	design;agile;lean}
}

@INPROCEEDINGS{6424331,
  author = {Tufail, R. and Malik, A.A.},
  title = {A Case Study Analyzing the Impact of Software Process Adoption on
	Software Quality},
  booktitle = {Frontiers of Information Technology (FIT), 2012 10th International
	Conference on},
  year = {2012},
  pages = {254-256},
  abstract = {A constant focus on improving the quality of software lies at the
	heart of better customer satisfaction, increased market share, and
	higher profit margins. This paper presents the results of a case
	study designed to analyze the impact on software quality of the adoption
	of Scrum -- an agile software development process -- by a Pakistani
	software house that was not using any particular process earlier.
	Pre- and post-process adoption data on the severity of errors and
	defects and the ratio of passed to failed test cases is gathered
	and analyzed for four web-based financial applications developed
	by the software house. The results of the quantitative analysis clearly
	indicate that the adoption of an agile process improved the quality
	of the software produced by the software house by reducing the percentage
	of serious errors and defects and by increasing the ratio of passed
	to failed test cases.},
  db = {ieeexplore2},
  doi = {10.1109/FIT.2012.52},
  keywords = {customer satisfaction;profitability;software houses;software prototyping;software
	quality;Pakistani software house;Scrum;Web-based financial application;agile
	software development process;customer satisfaction;market share;postprocess
	adoption;preprocess adoption;profit margin;software process adoption;software
	quality;Customer services;Information technology;Organizations;Software
	quality;Statistical analysis;Time factors;Scrum;agile processes;case
	study;defect severity;software quality}
}

@INPROCEEDINGS{6170011,
  author = {Wagh, R.},
  title = {Using Scrum for Software Engineering Class Projects},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {68-71},
  abstract = {Imparting industry relevant skills and knowledge for the graduating
	students in the field of Software Engineering is difficult but is
	necessary to make the students employable and productive right from
	the time of joining on the job. With outdated curriculum and slow
	process of revision of syllabi it is difficult to achieve this objective.
	This paper discusses how one of the popular agile project management
	frameworks, Scrum can be taught and used to teach basic concepts
	of software project management without necessitating revision of
	the syllabus. It also discusses the rise in motivation and interest
	level of students due to adoption of this approach. It also shows
	the flexibility of this agile approach to adapt to a situation different
	than a normal software development scenario in an organization.},
  db = {ieeexplore2},
  doi = {10.1109/AgileIndia.2012.17},
  keywords = {computer science education;project management;software prototyping;Scrum;agile
	project management;software engineering class project;software project
	management;Educational institutions;Industries;Programming;Project
	management;Software;Software engineering;Agile;Projects;Scrum;Software
	Engineering Education}
}

@INPROCEEDINGS{6149493,
  author = {Waguespack, L.J. and Schiano, W.T.},
  title = {SCRUM Project Architecture and Thriving Systems Theory},
  booktitle = {System Science (HICSS), 2012 45th Hawaii International Conference
	on},
  year = {2012},
  pages = {4943-4951},
  abstract = {Agile project management continues to gain a widening and enthusiastic
	following. Agile methods can achieve a high level of satisfaction
	among all project stakeholders (users, customers, business managers,
	developers, and project managers) in terms of productivity, product
	quality, cost containment, time-to-market, and overall morale. Success
	with agile requires focus on requirements and design as a continuous
	discovery process, posing challenges for practitioners of more traditional
	project management both in terms of method adoption and sustained
	commitment. Thriving Systems Theory clarifies the appeal of agile
	project structure and processes, helps project teams determine and
	achieve the optimal portfolio of quality characteristics, and better
	articulate their value to all stakeholders. Thriving Systems Theory
	is an emerging framework of systems design quality that translates
	the research of design pattern patriarch Christopher Alexander on
	physical architecture design quality into the domain of systems engineering.
	The satisfaction achieved through agile methods is explained by Thriving
	Systems Theory's fifteen choice properties of systems design quality.
	We demonstrate by identifying the manifestation of the choice properties
	in SCRUM, an exemplar of agile software project management.},
  db = {ieeexplore2},
  doi = {10.1109/HICSS.2012.513},
  issn = {1530-1605},
  keywords = {software architecture;software prototyping;SCRUM project architecture;agile
	project management;agile project process;agile project structure;optimal
	portfolio;project stakeholders;thriving systems theory;Architecture;Buildings;Computer
	architecture;Encapsulation;Planning;Project management;Software;agile
	methods;architecture;design quality;project management;software development}
}

@INPROCEEDINGS{6511809,
  author = {Wanderley, F. and Silva da Silveria, D.},
  title = {A Framework to Diminish the Gap between the Business Specialist and
	the Software Designer},
  booktitle = {Quality of Information and Communications Technology (QUATIC), 2012
	Eighth International Conference on the},
  year = {2012},
  pages = {199-204},
  abstract = {Requirements Engineering establishes the process for defining requirements
	as one in which elicitation, modeling and analysis are tasks which
	must be carried out. This process should involve different stakeholders
	and their different viewpoints. Among these stakeholders, there is
	the software designer, responsible for creating models based on the
	information gathered by business specialists. However, this communication
	channel may create some "noise" that leads to information being lost.
	This loss produces a semantic gap between what is desired and what
	will be developed. The semantic gap is characterized by inconsistencies
	in the requirements represented by scenarios -- user stories in a
	behavior-driven context -- and by the conceptual model. This paper
	presents an interactive approach to the agile requirements modeling,
	thus fostering greater consistency between the artifacts of the scenarios
	and the conceptual model. This consistency is ensured by using a
	mind model specification which will serve as a basis for transforming
	the definitions of the scenario and generating a conceptual model
	represented by a UML class diagram. The mind model represents the
	main role of this approach, and functions as a bond that represents
	the business entities, thus enabling the requirements to be more
	consistent with the reality of the business.},
  db = {ieeexplore2},
  doi = {10.1109/QUATIC.2012.9},
  keywords = {Unified Modeling Language;formal specification;software prototyping;UML
	class diagram;agile requirements modeling;behavior-driven context;business
	specialist;interactive approach;mind model specification;requirements
	engineering;semantic gap;software designer;Agile Modeling Requirements;Behaviour
	Driven Development;Domain Model;Mind Map Modeling;UML}
}

@INPROCEEDINGS{6170014,
  author = {Waterman, M. and Noble, J. and Allan, G.},
  title = {How Much Architecture? Reducing the Up-Front Effort},
  booktitle = {AGILE India (AGILE INDIA), 2012},
  year = {2012},
  pages = {56-59},
  abstract = {A key part of software architecture is the design of the high level
	structure of a software system -- an exercise in planning ahead.
	Agile software development methods discourage planning ahead, encapsulated
	by the Agile Manifesto philosophy "[we value] responding to change
	over following aplan". Development without architecture planning
	risks failure. This leads to an apparent paradox: how can you design
	an architecture while using a methodology that promotes not planning
	ahead? This paper introduces Grounded Theory research that is exploring
	the factors that affect how much architecture planning industry practitioners
	do up-front -- in other words, how much architecture? Early results
	show that the experience of the architects and predefined or template
	architectures both help to reduce the architectural effort required
	without sacrificing the benefits of a full architecture design.},
  db = {ieeexplore2},
  doi = {10.1109/AgileIndia.2012.11},
  keywords = {software architecture;software prototyping;agile manifesto philosophy;agile
	software development methods;architecture planning industry practitioners;architecture
	planning risks failure;grounded theory;high level structure;predefined
	architectures;software architecture;software system design;template
	architectures;up-front effort;Computer architecture;Decision making;Interviews;Planning;Programming;Software
	architecture;Software architecture;Software development management;Software
	engineering}
}

@INPROCEEDINGS{6341636,
  author = {Yu, W.D. and Le, K.},
  title = {Towards a Secure Software Development Lifecycle with SQUARE+R},
  booktitle = {Computer Software and Applications Conference Workshops (COMPSACW),
	2012 IEEE 36th Annual},
  year = {2012},
  pages = {565-570},
  abstract = {Software security has been recognized to be an important trait for
	future software development, yet the adoption of a secure software
	development lifecycle has yet to be fully integrated into current
	software development models. This is due to immaturities in secure
	software development lifecycle models and the lengthy development
	time imposed by security. To further exacerbate the current rampant
	growth of software vulnerabilities, the future direction for software
	is moving rapidly into the web space. With the expansive use of Web
	Services a new attack space is opened. As mobile code increases so
	will the number of software bugs and vulnerabilities; hence the need
	for adopting a secure software development model. The need to build
	a knowledge base of common coding errors is important in exposing
	current vulnerabilities and preventing future vulnerabilities. In
	this paper, a study of the current growth of software vulnerabilities,
	the importance of a categorization tool, the SQUARE model, the evolution
	of the SQUARE model combined with the Risk Management Framework to
	produce the SQUARE+R model, and the adaptability of the SQUARE+R
	model to an agile development lifecycle are presented.},
  db = {ieeexplore2},
  doi = {10.1109/COMPSACW.2012.104},
  keywords = {Web services;mobile computing;risk management;security of data;software
	reliability;SQUARE+R model;Web services;agile software development
	lifecycle security;attack space;mobile coding errors;risk management
	framework;software bugs;software development time;software vulnerabilities;Adaptation
	models;Encapsulation;Encoding;Mobile communication;Risk management;Security;Software;SQUARE+R;Software
	Development Lifecycle;Software Security;Software Vulnerability Analysis}
}

@INPROCEEDINGS{6339685,
  author = {Zaineb, G. and Shaikh, B. and Ahsan, A.},
  title = {Recommended cultural and business practices for project based software
	organization of Pakistan for supporting restructuring of functional
	organization for implementing agile based development framework in
	software projects},
  booktitle = {Information Management, Innovation Management and Industrial Engineering
	(ICIII), 2012 International Conference on},
  year = {2012},
  volume = {1},
  pages = {16-20},
  abstract = {The recent trend of software industry in Pakistan is a shift to adopt
	agile methodologies for software development. Keeping in view the
	challenges of methodology migration the current research provides
	a comprehensive analysis of structural requirements for project based
	organization to become agile with recommended cultural and business
	practices which can help organization to re-structure from functional
	to agile based projectized.},
  db = {ieeexplore2},
  doi = {10.1109/ICIII.2012.6339685},
  keywords = {DP industry;cultural aspects;project management;software prototyping;Pakistan;agile
	based development framework;business practices;cultural practices;functional
	organization;project based software organization;project structural
	requirement comprehensive analysis;software development;software
	industry;software projects;Collaboration;Cultural differences;Industries;Organizations;Software;Standards
	organizations;Agile;Cultural and Business Practices;Restructuring;Software
	Organization}
}

